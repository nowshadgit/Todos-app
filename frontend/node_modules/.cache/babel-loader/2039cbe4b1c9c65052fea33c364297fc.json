{"ast":null,"code":"import { all, takeEvery } from 'redux-saga/effects';\nimport ACTIONS from './apiConfig/actions.constants';\nimport { loginSaga } from './containers/Login/Login.saga';\nimport { forgotPasswordSaga, passwordResetSaga, tokenVerifyRequest } from './containers/PasswordReset/PasswordReset.saga';\nimport { changePasswordSaga } from './containers/ChangePassword/ChangePassword.saga';\nexport default (() => all([takeEvery(ACTIONS.AUTH.LOGIN, loginSaga), takeEvery(ACTIONS.PASSWORD_RESET.PASSWORD_RESET, passwordResetSaga), takeEvery(ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD, forgotPasswordSaga), takeEvery(ACTIONS.PROFILE.CHANGE_PASSWORD, changePasswordSaga), takeEvery(ACTIONS.PASSWORD_RESET.VERIFY_TOKEN, tokenVerifyRequest)]));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/rootSaga.js"],"names":["all","takeEvery","ACTIONS","loginSaga","forgotPasswordSaga","passwordResetSaga","tokenVerifyRequest","changePasswordSaga","AUTH","LOGIN","PASSWORD_RESET","FORGOT_PASSWORD","PROFILE","CHANGE_PASSWORD","VERIFY_TOKEN"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AAEA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,kBAHF,QAIO,+CAJP;AAKA,SAASC,kBAAT,QAAmC,iDAAnC;AAEA,gBAAe,MACbP,GAAG,CAAC,CACFC,SAAS,CAACC,OAAO,CAACM,IAAR,CAAaC,KAAd,EAAqBN,SAArB,CADP,EAEFF,SAAS,CAACC,OAAO,CAACQ,cAAR,CAAuBA,cAAxB,EAAwCL,iBAAxC,CAFP,EAGFJ,SAAS,CAACC,OAAO,CAACQ,cAAR,CAAuBC,eAAxB,EAAyCP,kBAAzC,CAHP,EAIFH,SAAS,CAACC,OAAO,CAACU,OAAR,CAAgBC,eAAjB,EAAkCN,kBAAlC,CAJP,EAKFN,SAAS,CAACC,OAAO,CAACQ,cAAR,CAAuBI,YAAxB,EAAsCR,kBAAtC,CALP,CAAD,CADL","sourcesContent":["import { all, takeEvery } from 'redux-saga/effects';\n\nimport ACTIONS from './apiConfig/actions.constants';\nimport { loginSaga } from './containers/Login/Login.saga';\nimport {\n  forgotPasswordSaga,\n  passwordResetSaga,\n  tokenVerifyRequest\n} from './containers/PasswordReset/PasswordReset.saga';\nimport { changePasswordSaga } from './containers/ChangePassword/ChangePassword.saga';\n\nexport default () =>\n  all([\n    takeEvery(ACTIONS.AUTH.LOGIN, loginSaga),\n    takeEvery(ACTIONS.PASSWORD_RESET.PASSWORD_RESET, passwordResetSaga),\n    takeEvery(ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD, forgotPasswordSaga),\n    takeEvery(ACTIONS.PROFILE.CHANGE_PASSWORD, changePasswordSaga),\n    takeEvery(ACTIONS.PASSWORD_RESET.VERIFY_TOKEN, tokenVerifyRequest)\n  ]);\n"]},"metadata":{},"sourceType":"module"}