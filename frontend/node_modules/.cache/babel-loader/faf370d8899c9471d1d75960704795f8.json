{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail, getErrorResMsg } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate, getOrgUnitIds } from '../../utils/common';\nimport { STORE, ROLES, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\n\nclass AddEditUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.FIRST_NAME_FIELD_ID = 'aeu-fname';\n    this.LAST_NAME_FIELD_ID = 'aeu-lname';\n    this.EMAIL_FIELD_ID = 'aeu-email';\n    this.DEPARTMENTS_FIELD_ID = 'select-departments';\n    this.USER_ROLES_ID = 'user-roles';\n\n    this.validateForm = () => {\n      const _checkEmail = checkEmail(this.state[this.EMAIL_FIELD_ID], 'Email'),\n            _checkEmail2 = _slicedToArray(_checkEmail, 2),\n            emailValidity = _checkEmail2[0],\n            emailErrors = _checkEmail2[1];\n\n      const formValidity = emailValidity;\n\n      const formErrors = _objectSpread({}, emailErrors);\n\n      this.setState({\n        formValidity,\n        formErrors\n      });\n      return formValidity;\n    };\n\n    this.enableSubmit = (email, firstName, lastName, departments, userRoles) => {\n      const disabled = !(email.length > 0 && firstName.length > 0 && lastName.length > 0 && departments.length > 0 && userRoles.length > 0);\n\n      if (this.props.errorCode) {\n        const type = ACTIONS.USERS.RESET_STATE;\n        this.props.resetState(type);\n        this.setState({\n          errorCode: ''\n        });\n      }\n\n      this.setState({\n        disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.handleOrgUnit = (currentNode, selectedNodes) => {\n      this.setState({\n        [this.DEPARTMENTS_FIELD_ID]: getOrgUnitIds(selectedNodes),\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.handleRoles = event => {\n      this.setState({\n        [this.USER_ROLES_ID]: event || [],\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.getUserRoleIds = userRoles => {\n      const userRolesIds = userRoles.map(role => {\n        return ROLES.indexOf(role);\n      });\n      return userRolesIds;\n    };\n\n    this.getRolesFormate = () => {\n      const userRoles = ROLES.map(role => {\n        return {\n          value: role,\n          label: role\n        };\n      });\n      return userRoles;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.validateForm()) {\n        const data = {\n          email: this.state[this.EMAIL_FIELD_ID],\n          first_name: this.state[this.FIRST_NAME_FIELD_ID],\n          last_name: this.state[this.LAST_NAME_FIELD_ID],\n          department: this.state[this.DEPARTMENTS_FIELD_ID],\n          user_roles: this.getUserRoleIds(this.state[this.USER_ROLES_ID])\n        };\n        const type = pageConfig[this.props.page].actions.postData;\n        this.props.submit(type, {\n          data,\n          props: _objectSpread({}, this.props)\n        });\n      }\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.DEPARTMENTS_FIELD_ID]: [],\n      [this.USER_ROLES_ID]: [],\n      errorCode: '',\n      disabled: true,\n      departmentMode: 'multiSelect'\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          page = _this$props.page,\n          getUserData = _this$props.getUserData,\n          match = _this$props.match;\n    const utype = pageConfig[page].actions.fetchUser;\n\n    if (utype) {\n      const params = match.params;\n      getUserData(utype, _objectSpread({}, params));\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const errorCode = nextProps.errorCode;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_USER);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    if (nextProps.userData && Object.values(nextProps.userData).length > 0) {\n      console.log(\"update fileds:\", nextProps.userData);\n      const _nextProps$userData = nextProps.userData,\n            email = _nextProps$userData.email,\n            first_name = _nextProps$userData.first_name,\n            id = _nextProps$userData.id,\n            last_name = _nextProps$userData.last_name,\n            department = _nextProps$userData.department;\n      return {\n        [this.FIRST_NAME_FIELD_ID]: first_name,\n        [this.LAST_NAME_FIELD_ID]: last_name,\n        [this.EMAIL_FIELD_ID]: email,\n        [this.DEPARTMENTS_FIELD_ID]: department\n      };\n    }\n\n    return prevState;\n  }\n\n  render() {\n    const page = this.props.page;\n    const pageTitle = pageConfig[page].pageTitle;\n    console.log(\"props data:\", this.props.userData);\n    return React.createElement(\"div\", {\n      className: \"add-edit-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(AddEditUserForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleOrgUnit: this.handleOrgUnit,\n      firstNameFieldId: this.FIRST_NAME_FIELD_ID,\n      lastNameFieldId: this.LAST_NAME_FIELD_ID,\n      emailFieldId: this.EMAIL_FIELD_ID,\n      firstNameFieldValue: this.state[this.FIRST_NAME_FIELD_ID],\n      lastNameFieldValue: this.state[this.LAST_NAME_FIELD_ID],\n      emailFieldValue: this.state[this.EMAIL_FIELD_ID],\n      departmentsFieldValue: this.props.userDepartments,\n      departmentsFieldId: this.DEPARTMENTS_FIELD_ID,\n      handleChangeRoles: this.handleRoles,\n      userRolesId: this.USER_ROLES_ID,\n      userRoleValues: this.getRolesFormate(),\n      formErrors: this.state.formErrors,\n      disabled: this.state.disabled,\n      page: page,\n      mode: this.state.departmentMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  match: PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  resetState: PropTypes.func.isRequired\n};\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditUserReducerStore.errorCode,\n  userData: state.DetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditUser));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx"],"names":["React","connect","withRouter","PropTypes","AddEditUserForm","checkEmail","getErrorResMsg","PageHeader","pageConfig","getActionsFormate","getOrgUnitIds","STORE","ROLES","PAGE","ACTIONS","AddEditUser","Component","constructor","props","FIRST_NAME_FIELD_ID","LAST_NAME_FIELD_ID","EMAIL_FIELD_ID","DEPARTMENTS_FIELD_ID","USER_ROLES_ID","validateForm","state","emailValidity","emailErrors","formValidity","formErrors","setState","enableSubmit","email","firstName","lastName","departments","userRoles","disabled","length","errorCode","type","USERS","RESET_STATE","resetState","handleChange","event","target","id","value","handleOrgUnit","currentNode","selectedNodes","handleRoles","getUserRoleIds","userRolesIds","map","role","indexOf","getRolesFormate","label","handleSubmit","preventDefault","data","first_name","last_name","department","user_roles","page","actions","postData","submit","departmentMode","componentDidMount","getUserData","match","utype","fetchUser","params","getDerivedStateFromProps","nextProps","prevState","errMsg","ADD_USER","userData","Object","values","console","log","render","pageTitle","userDepartments","propTypes","string","isRequired","object","func","oneOfType","number","defaultProps","mapStateToProps","addEditUserReducerStore","DetailsReducerStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail, getErrorResMsg } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate, getOrgUnitIds } from '../../utils/common';\nimport { STORE, ROLES, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\n\nclass AddEditUser extends React.Component {\n  FIRST_NAME_FIELD_ID = 'aeu-fname';\n\n  LAST_NAME_FIELD_ID = 'aeu-lname';\n\n  EMAIL_FIELD_ID = 'aeu-email';\n\n  DEPARTMENTS_FIELD_ID = 'select-departments';\n\n  USER_ROLES_ID = 'user-roles';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.DEPARTMENTS_FIELD_ID]: [],\n      [this.USER_ROLES_ID]: [],\n      errorCode: '',\n      disabled: true,\n      departmentMode : 'multiSelect'\n    };\n  }\n\n  componentDidMount() {\n    const { page, getUserData, match } = this.props;\n    const utype = pageConfig[page].actions.fetchUser;\n    if (utype) {\n      const { params } = match;\n      getUserData(utype, { ...params });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { errorCode } = nextProps;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_USER);\n      return { formErrors: errMsg, errorCode };\n    }\n\n    if(nextProps.userData && Object.values(nextProps.userData).length > 0){\n      console.log(\"update fileds:\", nextProps.userData);\n      const {email, first_name, id, last_name, department} = nextProps.userData;\n      return { [this.FIRST_NAME_FIELD_ID]: first_name, \n        [this.LAST_NAME_FIELD_ID]: last_name, [this.EMAIL_FIELD_ID]: email, \n        [this.DEPARTMENTS_FIELD_ID]: department}\n    }\n\n    return prevState;\n  }\n\n  validateForm = () => {\n    const [emailValidity, emailErrors] = checkEmail(\n      this.state[this.EMAIL_FIELD_ID],\n      'Email'\n    );\n    const formValidity = emailValidity;\n    const formErrors = { ...emailErrors };\n\n    this.setState({ formValidity, formErrors });\n\n    return formValidity;\n  };\n\n  enableSubmit = (email, firstName, lastName, departments, userRoles) => {\n    const disabled = !(\n      email.length > 0 &&\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      departments.length > 0 &&\n      userRoles.length > 0\n    );\n\n    if (this.props.errorCode) {\n      const type = ACTIONS.USERS.RESET_STATE;\n      this.props.resetState(type);\n      this.setState({ errorCode: '' });\n    }\n    this.setState({ disabled });\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.DEPARTMENTS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  \n  handleOrgUnit = (currentNode, selectedNodes) => {\n      this.setState(\n      {\n        [this.DEPARTMENTS_FIELD_ID]: getOrgUnitIds(selectedNodes),\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.DEPARTMENTS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n    \n  \n  };\n\n  handleRoles = event => {\n    this.setState(\n      {\n        [this.USER_ROLES_ID]: event || [],\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.DEPARTMENTS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  getUserRoleIds = userRoles => {\n    const userRolesIds = userRoles.map(role => {\n      return ROLES.indexOf(role);\n    });\n    return userRolesIds;\n  };\n\n  getRolesFormate = () => {\n    const userRoles = ROLES.map(role => {\n      return { value: role, label: role };\n    });\n    return userRoles;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.validateForm()) {\n      const data = {\n        email: this.state[this.EMAIL_FIELD_ID],\n        first_name: this.state[this.FIRST_NAME_FIELD_ID],\n        last_name: this.state[this.LAST_NAME_FIELD_ID],\n        department: this.state[this.DEPARTMENTS_FIELD_ID],\n        user_roles: this.getUserRoleIds(this.state[this.USER_ROLES_ID])\n      };\n      const type = pageConfig[this.props.page].actions.postData;\n      this.props.submit(type, { data, props: { ...this.props } });\n    }\n  };\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle } = pageConfig[page];\n    console.log(\"props data:\", this.props.userData);\n    \n    return (\n      <div className=\"add-edit-user\">\n        <PageHeader title={pageTitle} />\n        <AddEditUserForm\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          handleOrgUnit={this.handleOrgUnit}\n          firstNameFieldId={this.FIRST_NAME_FIELD_ID}\n          lastNameFieldId={this.LAST_NAME_FIELD_ID}\n          emailFieldId={this.EMAIL_FIELD_ID}\n          firstNameFieldValue={this.state[this.FIRST_NAME_FIELD_ID]}\n          lastNameFieldValue={this.state[this.LAST_NAME_FIELD_ID]}\n          emailFieldValue={this.state[this.EMAIL_FIELD_ID]}\n          departmentsFieldValue={this.props.userDepartments}\n          departmentsFieldId={this.DEPARTMENTS_FIELD_ID}\n          handleChangeRoles={this.handleRoles}\n          userRolesId={this.USER_ROLES_ID}\n          userRoleValues={this.getRolesFormate()}\n          formErrors={this.state.formErrors}\n          disabled={this.state.disabled}\n          page={page}\n          mode={this.state.departmentMode}\n        />\n      </div>\n    );\n  }\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  match: PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  resetState: PropTypes.func.isRequired\n};\n\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditUserReducerStore.errorCode,\n  userData: state.DetailsReducerStore.data,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddEditUser)\n);\n"]},"metadata":{},"sourceType":"module"}