{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport DataCards from '../../components/DataCards/DataCards';\nimport { getActionsFormate } from '../../utils/common';\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page,\n          action = _this$props.action;\n    const actionType = pageConfig[page][action];\n    makeCall(actionType);\n  }\n\n  redner() {\n    const _pageConfig$this$prop = pageConfig[this.props.page],\n          pageTitle = _pageConfig$this$prop.pageTitle,\n          actions = _pageConfig$this$prop.actions;\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(DataCards, {\n      data: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\n;\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n  cardData: PropTypes.array.isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  cardData: state.cardData\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (actionType, data) => {\n      dispatch(getActionsFormate(actionType, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","DataCards","getActionsFormate","ListPage","Component","constructor","props","state","componentDidMount","makeCall","page","action","actionType","redner","pageTitle","actions","propTypes","string","isRequired","cardData","array","defaultProps","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW,EAAX;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE;AAAA,wBACgB,KAAKF,KADrB;AAAA,UACVG,QADU,eACVA,QADU;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,MADN,eACMA,MADN;AAEjB,UAAMC,UAAU,GAAGb,UAAU,CAACW,IAAD,CAAV,CAAiBC,MAAjB,CAAnB;AACAF,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACD;;AAEDC,EAAAA,MAAM,GAAE;AAAA,kCACyBd,UAAU,CAAC,KAAKO,KAAL,CAAWI,IAAZ,CADnC;AAAA,UACEI,SADF,yBACEA,SADF;AAAA,UACaC,OADb,yBACaA,OADb;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAED,SAAnB;AAA8B,MAAA,OAAO,EAAEC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF;AAOD;;AAvBmC;;AAyBrC;AAEDZ,QAAQ,CAACa,SAAT,GAAqB;AACnBN,EAAAA,IAAI,EAAEd,SAAS,CAACqB,MAAV,CAAiBC,UADJ;AAEnBP,EAAAA,MAAM,EAAEf,SAAS,CAACqB,MAAV,CAAiBC,UAFN;AAGnBC,EAAAA,QAAQ,EAAEvB,SAAS,CAACwB,KAAV,CAAgBF;AAHP,CAArB;AAMAf,QAAQ,CAACkB,YAAT,GAAwB,EAAxB;;AAEA,MAAMC,eAAe,GAAGf,KAAK,KAAK;AAChCY,EAAAA,QAAQ,EAAEZ,KAAK,CAACY;AADgB,CAAL,CAA7B;;AAIA,MAAMI,kBAAkB,GAAIC,QAAD,IAAa;AACtC,SAAO;AACJf,IAAAA,QAAQ,EAAE,CAACG,UAAD,EAAaa,IAAb,KAAqB;AAC7BD,MAAAA,QAAQ,CAACtB,iBAAiB,CAACU,UAAD,EAAaa,IAAb,CAAlB,CAAR;AACD;AAHG,GAAP;AAKD,CAND;;AAQA,eAAe3B,UAAU,CAACD,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpB,QAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport DataCards from '../../components/DataCards/DataCards';\nimport { getActionsFormate } from '../../utils/common';\n\nclass ListPage extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n\n    }\n  }\n\n  componentDidMount(){\n    const {makeCall, page, action} = this.props;\n    const actionType = pageConfig[page][action];\n    makeCall(actionType);\n  }\n\n  redner(){\n    const { pageTitle, actions } = pageConfig[this.props.page];\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={actions} />\n        <DataCards data={[]} />\n        <div>Hello world</div>\n      </div>\n    );\n  }\n  \n};\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n  cardData: PropTypes.array.isRequired\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  cardData: state.cardData\n});\n\nconst mapDispatchToProps = (dispatch) =>{\n  return {\n     makeCall: (actionType, data) =>{\n       dispatch(getActionsFormate(actionType, data));\n     }\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));\n"]},"metadata":{},"sourceType":"module"}