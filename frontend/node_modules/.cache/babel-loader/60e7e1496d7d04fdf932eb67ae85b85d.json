{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/SideNav/SideNav.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faAngleDoubleLeft, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\nimport './SideNav.scss';\nimport { SIDENAV_ITEMS } from '../../config';\nimport BreadCrumb from '../../containers/BreadCrumb/BreadCrumb';\nimport { PAGE } from '../../utils/constants';\nimport { checkUserValidity } from '../../utils/authService';\nimport AlertMessage from '../AlertMessage/AlertMessage';\n\nconst SideNav = props => {\n  const children = props.children,\n        location = props.location,\n        page = props.page,\n        orgnizationName = props.orgnizationName;\n  const pathname = location.pathname;\n  const sidebarId = 'sidebar';\n  const contentId = 'content';\n  const expandClassName = 'expanded';\n  const showBreadcrumbs = page === PAGE.ORG_UNITS_DETAILS;\n\n  const toggleSidebar = event => {\n    event.preventDefault();\n    const sidebar = document.getElementById(sidebarId);\n    sidebar.classList.toggle(expandClassName);\n  };\n\n  const hideSidebar = event => {\n    event.preventDefault();\n    const sidebar = document.getElementById(sidebarId);\n    sidebar.classList.toggle(expandClassName);\n  };\n\n  const sidenavItems = SIDENAV_ITEMS.map(item => {\n    return checkUserValidity(item.page) ? React.createElement(NavLink, {\n      strict: true,\n      to: \"\".concat(item.route, \"/assets\"),\n      key: item.position,\n      className: \"nav-link\",\n      activeClassName: \"selected\",\n      prevPath: pathname,\n      id: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: item.icon,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"sidenav-item-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, item.displayName)) : true;\n  });\n  const sidenavBar = React.createElement(\"nav\", {\n    className: \"sidebar\",\n    id: sidebarId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-unstyled components\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebar-dismiss\",\n    role: \"button\",\n    onClick: hideSidebar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faAngleDoubleLeft,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, orgnizationName || 'Org Unit Name', \" \"), React.createElement(\"div\", {\n    className: \"header-small-width\",\n    onClick: toggleSidebar,\n    role: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    id: \"arrow-expand\",\n    icon: faAngleDoubleRight,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), sidenavItems));\n  const contentComponent = React.createElement(\"div\", {\n    className: \"content\",\n    id: contentId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar navbar-expand-lg breadcrumbs-nav  \".concat(showBreadcrumbs ? 'mb-3' : 'border-0 mb-3'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    id: \"sidebarCollapse\",\n    onClick: toggleSidebar,\n    className: \"icon-btn sidebar-collapse-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faBars,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), showBreadcrumbs ? React.createElement(BreadCrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }) : null), children));\n  return React.createElement(\"div\", {\n    className: \"sidenav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, sidenavBar, React.createElement(AlertMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), contentComponent);\n};\n\nSideNav.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  page: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n  orgnizationName: PropTypes.string.isRequired\n};\nexport default withRouter(SideNav);","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/SideNav/SideNav.jsx"],"names":["React","PropTypes","withRouter","NavLink","FontAwesomeIcon","faBars","faAngleDoubleLeft","faAngleDoubleRight","SIDENAV_ITEMS","BreadCrumb","PAGE","checkUserValidity","AlertMessage","SideNav","props","children","location","page","orgnizationName","pathname","sidebarId","contentId","expandClassName","showBreadcrumbs","ORG_UNITS_DETAILS","toggleSidebar","event","preventDefault","sidebar","document","getElementById","classList","toggle","hideSidebar","sidenavItems","map","item","route","position","id","icon","displayName","sidenavBar","contentComponent","propTypes","oneOfType","array","object","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,kBAApC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,SACEC,MADF,EAEEC,iBAFF,EAGEC,kBAHF,QAIO,mCAJP;AAMA,OAAO,gBAAP;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,QACfC,QADe,GAC+BD,KAD/B,CACfC,QADe;AAAA,QACLC,QADK,GAC+BF,KAD/B,CACLE,QADK;AAAA,QACKC,IADL,GAC+BH,KAD/B,CACKG,IADL;AAAA,QACWC,eADX,GAC+BJ,KAD/B,CACWI,eADX;AAAA,QAEfC,QAFe,GAEFH,QAFE,CAEfG,QAFe;AAGvB,QAAMC,SAAS,GAAG,SAAlB;AACA,QAAMC,SAAS,GAAG,SAAlB;AACA,QAAMC,eAAe,GAAG,UAAxB;AACA,QAAMC,eAAe,GAAGN,IAAI,KAAKP,IAAI,CAACc,iBAAtC;;AAEA,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBV,SAAxB,CAAhB;AACAQ,IAAAA,OAAO,CAACG,SAAR,CAAkBC,MAAlB,CAAyBV,eAAzB;AACD,GAJD;;AAMA,QAAMW,WAAW,GAAGP,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBV,SAAxB,CAAhB;AACAQ,IAAAA,OAAO,CAACG,SAAR,CAAkBC,MAAlB,CAAyBV,eAAzB;AACD,GAJD;;AAMA,QAAMY,YAAY,GAAG1B,aAAa,CAAC2B,GAAd,CAAkBC,IAAI,IAAI;AAC7C,WAAOzB,iBAAiB,CAACyB,IAAI,CAACnB,IAAN,CAAjB,GACL,oBAAC,OAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,EAAE,YAAKmB,IAAI,CAACC,KAAV,YAFJ;AAGE,MAAA,GAAG,EAAED,IAAI,CAACE,QAHZ;AAIE,MAAA,SAAS,EAAC,UAJZ;AAKE,MAAA,eAAe,EAAC,UALlB;AAME,MAAA,QAAQ,EAAEnB,QANZ;AAOE,MAAA,EAAE,EAAEiB,IAAI,CAACG,EAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEH,IAAI,CAACI,IAA5B;AAAkC,MAAA,IAAI,EAAC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCJ,IAAI,CAACK,WAA1C,CAVF,CADK,GAcL,IAdF;AAgBD,GAjBoB,CAArB;AAmBA,QAAMC,UAAU,GACd;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,EAAE,EAAEtB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,IAAI,EAAC,QAAtC;AAA+C,IAAA,OAAO,EAAEa,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE3B,iBAAvB;AAA0C,IAAA,IAAI,EAAC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBY,eAAe,IAAI,eAA5C,MAJF,EAKE;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,OAAO,EAAEO,aAFX;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,eAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,IAAI,EAAElB,kBAFR;AAGE,IAAA,IAAI,EAAC,IAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CALF,EAgBG2B,YAhBH,CADF,CADF;AAuBA,QAAMS,gBAAgB,GACpB;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,EAAE,EAAEtB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,qDACPE,eAAe,GAAG,MAAH,GAAY,eADpB,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,iBAFL;AAGE,IAAA,OAAO,EAAEE,aAHX;AAIE,IAAA,SAAS,EAAC,+BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEpB,MAAvB;AAA+B,IAAA,IAAI,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CALF,EAaGkB,eAAe,GAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAoB,IAbtC,CADF,EAgBGR,QAhBH,CADF,CADF;AAuBA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG2B,UADH,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGC,gBAHH,CADF;AAOD,CA5FD;;AA8FA9B,OAAO,CAAC+B,SAAR,GAAoB;AAClB7B,EAAAA,QAAQ,EAAEd,SAAS,CAAC4C,SAAV,CAAoB,CAAC5C,SAAS,CAAC6C,KAAX,EAAkB7C,SAAS,CAAC8C,MAA5B,CAApB,EAAyDC,UADjD;AAElB/B,EAAAA,IAAI,EAAEhB,SAAS,CAACgD,MAAV,CAAiBD,UAFL;AAGlBhC,EAAAA,QAAQ,EAAEf,SAAS,CAAC8C,MAAV,CAAiBC,UAHT;AAIlB9B,EAAAA,eAAe,EAAEjB,SAAS,CAACgD,MAAV,CAAiBD;AAJhB,CAApB;AAOA,eAAe9C,UAAU,CAACW,OAAD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  faBars,\n  faAngleDoubleLeft,\n  faAngleDoubleRight\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './SideNav.scss';\nimport { SIDENAV_ITEMS } from '../../config';\nimport BreadCrumb from '../../containers/BreadCrumb/BreadCrumb';\nimport { PAGE } from '../../utils/constants';\nimport { checkUserValidity } from '../../utils/authService';\nimport AlertMessage from '../AlertMessage/AlertMessage';\n\nconst SideNav = props => {\n  const { children, location, page, orgnizationName } = props;\n  const { pathname } = location;\n  const sidebarId = 'sidebar';\n  const contentId = 'content';\n  const expandClassName = 'expanded';\n  const showBreadcrumbs = page === PAGE.ORG_UNITS_DETAILS;\n\n  const toggleSidebar = event => {\n    event.preventDefault();\n    const sidebar = document.getElementById(sidebarId);\n    sidebar.classList.toggle(expandClassName);\n  };\n\n  const hideSidebar = event => {\n    event.preventDefault();\n    const sidebar = document.getElementById(sidebarId);\n    sidebar.classList.toggle(expandClassName);\n  };\n\n  const sidenavItems = SIDENAV_ITEMS.map(item => {\n    return checkUserValidity(item.page) ? (\n      <NavLink\n        strict\n        to={`${item.route}/assets`}\n        key={item.position}\n        className=\"nav-link\"\n        activeClassName=\"selected\"\n        prevPath={pathname}\n        id={item.id}\n      >\n        <FontAwesomeIcon icon={item.icon} size=\"lg\" />\n        <span className=\"sidenav-item-text\">{item.displayName}</span>\n      </NavLink>\n    ) : (\n      true\n    );\n  });\n\n  const sidenavBar = (\n    <nav className=\"sidebar\" id={sidebarId}>\n      <ul className=\"list-unstyled components\">\n        <div className=\"sidebar-dismiss\" role=\"button\" onClick={hideSidebar}>\n          <FontAwesomeIcon icon={faAngleDoubleLeft} size=\"lg\" />\n        </div>\n        <div className=\"header\">{orgnizationName || 'Org Unit Name'} </div>\n        <div\n          className=\"header-small-width\"\n          onClick={toggleSidebar}\n          role=\"button\"\n        >\n          <FontAwesomeIcon\n            id=\"arrow-expand\"\n            icon={faAngleDoubleRight}\n            size=\"lg\"\n          />\n        </div>\n        {sidenavItems}\n      </ul>\n    </nav>\n  );\n\n  const contentComponent = (\n    <div className=\"content\" id={contentId}>\n      <div className=\"container\">\n        <nav\n          className={`navbar navbar-expand-lg breadcrumbs-nav  ${\n            showBreadcrumbs ? 'mb-3' : 'border-0 mb-3'\n          }`}\n        >\n          <button\n            type=\"button\"\n            id=\"sidebarCollapse\"\n            onClick={toggleSidebar}\n            className=\"icon-btn sidebar-collapse-btn\"\n          >\n            <FontAwesomeIcon icon={faBars} size=\"lg\" />\n          </button>\n          {showBreadcrumbs ? <BreadCrumb /> : null}\n        </nav>\n        {children}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"sidenav\">\n      {sidenavBar}\n      <AlertMessage />\n      {contentComponent}\n    </div>\n  );\n};\n\nSideNav.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  page: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n  orgnizationName: PropTypes.string.isRequired\n};\n\nexport default withRouter(SideNav);\n"]},"metadata":{},"sourceType":"module"}