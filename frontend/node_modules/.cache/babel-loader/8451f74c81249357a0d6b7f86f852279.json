{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getUserList(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.USER);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.GET_USER_LIST_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getOrgUnitsList(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.ORG_UNITS, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getOrgDetails(action) {\n  let response;\n  const orgUnitId = action.data.department;\n\n  try {\n    response = yield call(window.axios.getData, reverse(FOOTPRINTS_API.ORG_UNITS_DETAILS, {\n      orgUnitId\n    }), action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetAttributes(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.ASSET_ATTRIBUTES, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data.attributes\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetTypes(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.ASSET_TYPES, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAllOrgUnit(action) {\n  let response;\n\n  try {\n    let url = FOOTPRINTS_API.ORG_UNIT_ALL + \"?flat_list=false\";\n    response = yield call(window.axios.getData, url, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport { getUserList, getOrgUnitsList, getOrgDetails, getAssetAttributes, getAssetTypes, getAllOrgUnit };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.saga.js"],"names":["call","put","reverse","ACTIONS","FOOTPRINTS_API","getUserList","action","response","window","axios","getData","USER","status","type","USERS","GET_USER_LIST_SUCCESS","payload","data","GET_USER_LIST_FAIL","e","getOrgUnitsList","ORG_UNITS","GET_ORG_UNITS_LIST_SUCCESS","GET_ORG_UNITS_LIST_FAIL","getOrgDetails","orgUnitId","department","ORG_UNITS_DETAILS","GET_ORG_UNITS_DETAILS_SUCCESS","GET_ORG_UNITS_DETAILS_FAIL","getAssetAttributes","ASSET_ATTRIBUTES","GET_ASSET_ATTRIBUTES_SUCCESS","attributes","GET_ASSET_ATTRIBUTES_FAIL","getAssetTypes","ASSET_TYPES","GET_ASSET_TYPES_SUCCESS","GET_ASSET_TYPES_FAIL","getAllOrgUnit","url","ORG_UNIT_ALL","GET_ALL_ORG_UNIT_SUCCESS","GET_ALL_ORG_UNIT_FAIL"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\n\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getUserList(action) {\n  let response;\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.USER);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.GET_USER_LIST_FAIL, payload: e });\n  }\n}\n\nfunction* getOrgUnitsList(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      FOOTPRINTS_API.ORG_UNITS,\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL, payload: e });\n  }\n}\n\nfunction* getOrgDetails(action) {\n  let response;\n  const orgUnitId = action.data.department;\n  try {\n    response = yield call(\n      window.axios.getData,\n      reverse(FOOTPRINTS_API.ORG_UNITS_DETAILS, { orgUnitId }),\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetAttributes(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      FOOTPRINTS_API.ASSET_ATTRIBUTES,\n      action.data\n    );\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data.attributes\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetTypes(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      FOOTPRINTS_API.ASSET_TYPES,\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAllOrgUnit(action) {\n  let response;\n  try {\n    \n    let url = FOOTPRINTS_API.ORG_UNIT_ALL + \"?flat_list=false\";\n    response = yield call(\n      window.axios.getData,\n      url,\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport {\n  getUserList,\n  getOrgUnitsList,\n  getOrgDetails,\n  getAssetAttributes,\n  getAssetTypes,\n  getAllOrgUnit\n};\n"]},"metadata":{},"sourceType":"module"}