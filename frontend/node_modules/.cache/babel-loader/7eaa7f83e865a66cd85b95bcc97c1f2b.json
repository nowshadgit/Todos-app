{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page;\n    console.log(\"porps\", this.props);\n    const types = pageConfig[page].actions.fetchList;\n    makeCall(types);\n  } // componentDidUpdate() {\n  //   const { makeCall, page } = this.props;\n  //   const types = pageConfig[page].actions.fetchList;\n  //   // const {} = this.\n  //   makeCall(types);\n  // }\n\n\n  render() {\n    const _this$props2 = this.props,\n          page = _this$props2.page,\n          dataCard = _this$props2.dataCard;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          headerActions = _pageConfig$page.headerActions,\n          bodyHandler = _pageConfig$page.bodyHandler,\n          redirect = _pageConfig$page.redirect;\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(PageHeader, Object.assign({}, this.props, {\n      title: pageTitle,\n      actions: headerActions,\n      redirect: redirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(DataCards, Object.assign({}, this.props, {\n      data: dataCard,\n      actions: bodyHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  dataCard: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  makeCall: PropTypes.func.isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const page = props.page;\n  const respectedStore = pageConfig[page].store.storedList;\n  return {\n    dataCard: state.listReducerStore[respectedStore]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","DataCards","ListPage","Component","componentDidMount","props","makeCall","page","console","log","types","actions","fetchList","render","dataCard","pageTitle","headerActions","bodyHandler","redirect","propTypes","string","isRequired","oneOfType","array","object","func","defaultProps","mapStateToProps","state","respectedStore","store","storedList","listReducerStore","mapDispatchToProps","dispatch","type","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const { makeCall, page } = this.props;\n    console.log(\"porps\",this.props);\n    \n    const types = pageConfig[page].actions.fetchList;\n    makeCall(types);\n  }\n\n  // componentDidUpdate() {\n  //   const { makeCall, page } = this.props;\n  //   const types = pageConfig[page].actions.fetchList;\n  //   // const {} = this.\n  //   makeCall(types);\n  // }\n\n  render() {\n    const { page, dataCard } = this.props;\n    const { pageTitle, headerActions, bodyHandler, redirect } = pageConfig[page];\n    return (\n      <div className=\"list-page\">\n        <PageHeader {...this.props} title={pageTitle} actions={headerActions} redirect={redirect}/>\n        <DataCards {...this.props} data={dataCard} actions={bodyHandler} />\n        <div>Hello world</div>\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  dataCard: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  makeCall: PropTypes.func.isRequired\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const { page } = props;\n  const respectedStore = pageConfig[page].store.storedList;\n  return {\n    dataCard: state.listReducerStore[respectedStore]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}