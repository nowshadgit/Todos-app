{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/AssetDetails/AssetDetails.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AssetDetails.scss';\nimport { getFormatedDate } from '../../utils/common';\nimport { ASSET_STATUS, LOG_TYPE } from '../../utils/constants';\n\nconst AssetDetails = props => {\n  const Data = props.Data,\n        historyData = props.historyData;\n  console.log(\"History:\", historyData);\n  const AssetType = Data.asset_type,\n        Attributes = Data.attributes,\n        DueDate = Data.due_date,\n        Status = Data.state,\n        SubmittedDate = Data.submitted_date;\n  let customKey = 0;\n  const attributeElements = Attributes && Attributes.map(each => {\n    const Attribute = each.attribute,\n          AttributeValue = each.attribute_value;\n    customKey += 1;\n    return React.createElement(\"div\", {\n      className: \"asset-details-body row\",\n      key: customKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"asset-details-key col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, Attribute.name), React.createElement(\"span\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \":\"), React.createElement(\"span\", {\n      className: \"asset-details-value col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, AttributeValue.name));\n  });\n  const showHistory = historyData && historyData instanceof Array && historyData.map(eachLog => {\n    const timestamp = eachLog.timestamp,\n          attributes = eachLog.attributes,\n          logType = eachLog.log_type,\n          agent = eachLog.agent,\n          OrgUnit = eachLog.org_unit,\n          assignee = eachLog.assignee,\n          notes = eachLog.notes;\n    let agentName = '';\n    let assigneeName = '';\n\n    if (agent) {\n      const firstName = agent.first_name,\n            lastName = agent.last_name;\n      agentName = \"\".concat(firstName, \" \").concat(lastName);\n    }\n\n    if (assigneeName) {\n      const firstName = assignee.first_name,\n            lastName = assignee.last_name;\n      assigneeName = \"\".concat(firstName, \" \").concat(lastName);\n    }\n\n    let logsAttributs = [];\n\n    if (attributes) {\n      logsAttributs = attributes.map(eachAttr => {\n        const Attribute = eachAttr.attribute,\n              AttributeValue = eachAttr.attribute_value;\n        customKey += 1;\n        return React.createElement(\"div\", {\n          className: \"row\",\n          key: customKey,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, Attribute.name), React.createElement(\"span\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \":\"), React.createElement(\"span\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, AttributeValue.name));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"history-item row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-4 ml-xl-n2 ml-md-n1 ml-n2 date-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, getFormatedDate(timestamp)), React.createElement(\"div\", {\n      className: \"item-data w-100 col col-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"border p-1 item-data-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, LOG_TYPE[logType]), agentName && React.createElement(\"div\", {\n      className: \"asset-changed-by mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Changed by \", agentName), attributes && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), OrgUnit && React.createElement(\"div\", {\n      className: \"history-log-body-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Org unit: \", React.createElement(\"div\", {\n      className: \"history-log-body-value ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" \", OrgUnit.name, \" \")), assigneeName && React.createElement(\"div\", {\n      className: \"history-log-body-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"assignee: \", React.createElement(\"div\", {\n      className: \"history-log-body-value ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", assigneeName, \" \")), notes && React.createElement(\"div\", {\n      className: \"history-log-body-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"notes: \", React.createElement(\"div\", {\n      className: \"history-log-body-value ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, notes)))));\n  });\n  return React.createElement(\"div\", {\n    className: \"asset-details-page text-capitalize\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col col-11 col-lg-5 col-md-5 ml-2 p-2 details-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, ' ', \"Details\", ' ')), React.createElement(\"div\", {\n    className: \"row \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col col-11 col-lg-7 col-md-6 mb-4 ml-2 p-2 asset-detials\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"asset-details-body row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"asset-details-key col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"asset type\"), React.createElement(\"span\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \":\"), React.createElement(\"span\", {\n    className: \"asset-details-value col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, AssetType ? AssetType.name : false)), React.createElement(\"div\", {\n    className: \"asset-details-body row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"asset-details-key col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Submitted Date\"), React.createElement(\"span\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \":\"), React.createElement(\"span\", {\n    className: \"asset-details-value col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, getFormatedDate(SubmittedDate))), React.createElement(\"div\", {\n    className: \"asset-details-body row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"asset-details-key col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Due Date\"), React.createElement(\"span\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \":\"), React.createElement(\"span\", {\n    className: \"asset-details-value col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, getFormatedDate(DueDate))), React.createElement(\"div\", {\n    className: \"asset-details-body row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"asset-details-key col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Status\"), React.createElement(\"span\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \":\"), React.createElement(\"span\", {\n    className: \"asset-details-value col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, ASSET_STATUS[Status])), React.createElement(\"div\", {\n    id: \"asset-attributs-title\",\n    className: \"mb-3 mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Attributes\")), attributeElements && attributeElements.length > 0 ? attributeElements : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"No attributes found\")), React.createElement(\"div\", {\n    className: \"col col-11 col-md-5 col-lg-4 mr-md-5 ml-3 ml-md-auto p-0 asset-history-detials sticky-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"history-title sticky-top \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"History\"), React.createElement(\"div\", {\n    className: \"events w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, showHistory))));\n};\n\nAssetDetails.propTypes = {\n  Data: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  historyData: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired\n};\nexport default AssetDetails;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/AssetDetails/AssetDetails.jsx"],"names":["React","PropTypes","getFormatedDate","ASSET_STATUS","LOG_TYPE","AssetDetails","props","Data","historyData","console","log","AssetType","asset_type","Attributes","attributes","DueDate","due_date","Status","state","SubmittedDate","submitted_date","customKey","attributeElements","map","each","Attribute","attribute","AttributeValue","attribute_value","name","showHistory","Array","eachLog","timestamp","logType","log_type","agent","OrgUnit","org_unit","assignee","notes","agentName","assigneeName","firstName","first_name","lastName","last_name","logsAttributs","eachAttr","length","propTypes","oneOfType","array","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AssetDetails.scss';\nimport { getFormatedDate } from '../../utils/common';\nimport { ASSET_STATUS, LOG_TYPE } from '../../utils/constants';\n\nconst AssetDetails = props => {\n  const { Data, historyData } = props;\n  console.log(\"History:\", historyData);\n  \n  const {\n    asset_type: AssetType,\n    attributes: Attributes,\n    due_date: DueDate,\n    state: Status,\n    submitted_date: SubmittedDate\n  } = Data;\n  let customKey = 0;\n  const attributeElements =\n    Attributes &&\n    Attributes.map(each => {\n      const { attribute: Attribute, attribute_value: AttributeValue } = each;\n      customKey += 1;\n      return (\n        <div className=\"asset-details-body row\" key={customKey}>\n          <span className=\"asset-details-key col\">{Attribute.name}</span>\n          <span className=\"\">:</span>\n          <span className=\"asset-details-value col\">{AttributeValue.name}</span>\n        </div>\n      );\n    });\n\n  const showHistory = historyData && historyData instanceof Array && historyData.map(eachLog=>{\n    const {timestamp, attributes, log_type: logType, agent, org_unit: OrgUnit, assignee, notes} = eachLog;\n    let agentName = '';\n    let assigneeName = '';\n    if(agent){\n      const {first_name: firstName, last_name: lastName} = agent;\n      agentName = `${firstName} ${lastName}`;\n    }\n\n    if(assigneeName){\n      const {first_name: firstName, last_name: lastName} = assignee;\n      assigneeName = `${firstName} ${lastName}`;\n    }\n\n    let logsAttributs = [];\n    if(attributes){\n      logsAttributs = attributes.map(eachAttr=>{\n        const { attribute: Attribute, attribute_value: AttributeValue } = eachAttr;\n        customKey += 1;\n        return (\n          <div className=\"row\" key={customKey}>\n            <span className=\"col\">{Attribute.name}</span>\n            <span className=\"\">:</span>\n            <span className=\"col\">{AttributeValue.name}</span>\n          </div>\n        );\n      })\n    }\n      return (\n        <div className=\"history-item row\">\n              <div className=\"col col-4 ml-xl-n2 ml-md-n1 ml-n2 date-time\">{getFormatedDate(timestamp)}</div>\n              <div className=\"item-data w-100 col col-7\">\n                <div className=\"border p-1 item-data-type\">\n                    <strong>{LOG_TYPE[logType]}</strong>\n                    {agentName && <div className=\"asset-changed-by mb-1\">Changed by {agentName}</div>}\n                    {attributes && <div></div>}\n                    {OrgUnit && <div className=\"history-log-body-key\">Org unit: <div className=\"history-log-body-value ml-2\"> {OrgUnit.name} </div></div>}\n                    {assigneeName && <div className=\"history-log-body-key\">assignee: <div className=\"history-log-body-value ml-2\"> {assigneeName} </div></div>}\n                    {notes && <div className=\"history-log-body-key\">notes: <div className=\"history-log-body-value ml-2\">{notes}</div></div>}\n                </div>\n              </div>\n            </div>\n      )\n  })\n  return (\n    <div className=\"asset-details-page text-capitalize\">\n      <div className=\"row\">\n        <div className=\"col col-11 col-lg-5 col-md-5 ml-2 p-2 details-title\">\n          {' '}\n          Details{' '}\n        </div>\n      </div>\n      <div className=\"row \">\n        <div className=\"col col-11 col-lg-7 col-md-6 mb-4 ml-2 p-2 asset-detials\">\n          <div className=\"asset-details-body row\">\n            <span className=\"asset-details-key col\">asset type</span>\n            <span className=\"\">:</span>\n            <span className=\"asset-details-value col\">{AssetType ? AssetType.name: false}</span>\n          </div>\n          <div className=\"asset-details-body row\">\n            <span className=\"asset-details-key col\">Submitted Date</span>\n            <span className=\"\">:</span>\n            <span className=\"asset-details-value col\">{getFormatedDate(SubmittedDate)}</span>\n          </div>\n          <div className=\"asset-details-body row\">\n            <span className=\"asset-details-key col\">Due Date</span>\n            <span className=\"\">:</span>\n            <span className=\"asset-details-value col\">{getFormatedDate(DueDate)}</span>\n          </div>\n          <div className=\"asset-details-body row\">\n            <span className=\"asset-details-key col\">Status</span>\n            <span className=\"\">:</span>\n            <span className=\"asset-details-value col\">{ASSET_STATUS[Status]}</span>\n          </div>\n\n          <div id=\"asset-attributs-title\" className=\"mb-3 mt-3\">\n            <span>Attributes</span>\n          </div> \n          {attributeElements && attributeElements.length > 0 ? attributeElements : <span >No attributes found</span>}\n        </div>\n        <div className=\"col col-11 col-md-5 col-lg-4 mr-md-5 ml-3 ml-md-auto p-0 asset-history-detials sticky-top\">\n          <div className=\"history-title sticky-top \">History</div>\n          <div className=\"events w-100\">\n            {showHistory}\n            {/* <div className=\"history-item row\">\n              <div className=\"col col-4 ml-xl-n2 ml-md-n1 ml-n2 date-time\">2019-07-01</div>\n              <div className=\"item-data w-100 col col-7\">\n                <div className=\"border p-1 item-data-type\">\n                <strong>Bat &amp; Ball</strong> On time and other text that may\n                    span over 2 lines asdjashdkjhasdjk\n                </div>\n              </div>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nAssetDetails.propTypes = {\n  Data: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  historyData: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nexport default AssetDetails;\n"]},"metadata":{},"sourceType":"module"}