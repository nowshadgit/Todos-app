{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { STORE } from '../../utils/constants';\n\nclass AddEditUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.FIRST_NAME_FIELD_ID = 'aeu-fname';\n    this.LAST_NAME_FIELD_ID = 'aeu-lname';\n    this.EMAIL_FIELD_ID = 'aeu-email';\n    this.DEPARTMENTS_FIELD_ID = 'select-departments';\n    this.USER_ROLES = 'user-roles';\n\n    this.validateForm = () => {\n      const _checkEmail = checkEmail(this.state[this.EMAIL_FIELD_ID], 'Email'),\n            _checkEmail2 = _slicedToArray(_checkEmail, 2),\n            emailValidity = _checkEmail2[0],\n            emailErrors = _checkEmail2[1];\n\n      const formValidity = emailValidity;\n\n      const formErrors = _objectSpread({}, emailErrors);\n\n      this.setState({\n        formValidity,\n        formErrors\n      });\n      return formValidity;\n    };\n\n    this.enableSubmit = (email, firstName, lastName, departments) => {\n      const disabled = !(email.length > 0 && firstName.length > 0 && lastName.length > 0 && departments.length > 0);\n      this.setState({\n        disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID]));\n    };\n\n    this.handleDepartments = event => {\n      this.setState({\n        [this.DEPARTMENTS_FIELD_ID]: event || [],\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID]));\n    };\n\n    this.getDepartmentIds = departments => {\n      const departIds = departments.map(depart => {\n        return depart.value;\n      });\n      return departIds;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n\n      if (this.validateForm()) {\n        const data = {\n          email: this.state[this.EMAIL_FIELD_ID],\n          first_name: this.state[this.FIRST_NAME_FIELD_ID],\n          last_name: this.state[this.LAST_NAME_FIELD_ID],\n          department: this.getDepartmentIds(this.state[this.DEPARTMENTS_FIELD_ID])\n        };\n        const type = pageConfig[this.props.page].actions.postData;\n        this.props.submit(type, {\n          data,\n          props: _objectSpread({}, this.props)\n        });\n      }\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.DEPARTMENTS_FIELD_ID]: [],\n      [this.USER_ROLES]: [],\n      errorCode: '',\n      disabled: true\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          getDepartments = _this$props.getDepartments,\n          page = _this$props.page,\n          getUserData = _this$props.getUserData,\n          match = _this$props.match;\n    const dtype = pageConfig[page].actions.getDepartments;\n    getDepartments(dtype);\n    const utype = pageConfig[page].actions.fetchUser;\n\n    if (utype) {\n      const params = match.params;\n      getUserData(utype, _objectSpread({}, params));\n    }\n  }\n\n  // getDepartment=()=>{\n  //   const {userDepartments} = this.props;\n  //   const localDepart = this.state[this.DEPARTMENTS_FIELD_ID];\n  //   let customDepart = [];\n  //   if(localDepart.length === 0){\n  //     customDepart = userDepartments;\n  //   }else if(localDepart.length === userDepartments.length){\n  //     customDepart = localDepart;\n  //   }else{\n  //      customDepart = localDepart;\n  //     for(let udepart of userDepartments){\n  //       let checkExistDepart = false;\n  //       for(let ldepart of localDepart){\n  //         if(ldepart.value === udepart.value){\n  //           checkExistDepart = true;\n  //         }\n  //       }\n  //       if(!checkExistDepart){\n  //         customDepart.push(udepart);\n  //       }\n  //     }\n  //   }\n  //   return customDepart;\n  // }\n  // getStateValues = () => {\n  //   const { userData } = this.props;\n  //   if (userData.length > 0 && this.state.disabled) {\n  //     const firstName = userData.first_name;\n  //     const lastName = userData.last_name;\n  //     const { email } = userData;\n  //     const departments = userData.department.map(depart => {\n  //       return { value: depart.id, label: depart.name };\n  //     });\n  //     return { firstName, lastName, email, departments };\n  //   }\n  //   return {\n  //     firstName: this.state[this.FIRST_NAME_FIELD_ID],\n  //     lastName: this.state[this.LAST_NAME_FIELD_ID]\n  //   };\n  // };\n  render() {\n    const page = this.props.page;\n    const pageTitle = pageConfig[page].pageTitle; // const stateValues = this.getStateValues();\n\n    return React.createElement(\"div\", {\n      className: \"add-edit-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(AddEditUserForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleDepartments: this.handleDepartments,\n      firstNameFieldId: this.FIRST_NAME_FIELD_ID,\n      lastNameFieldId: this.LAST_NAME_FIELD_ID,\n      emailFieldId: this.EMAIL_FIELD_ID,\n      firstNameFieldValue: this.state[this.FIRST_NAME_FIELD_ID],\n      lastNameFieldValue: this.state[this.LAST_NAME_FIELD_ID],\n      emailFieldValue: this.state[this.EMAIL_FIELD_ID],\n      departmentsFieldValue: this.props.userDepartments,\n      departmentsFieldId: this.DEPARTMENTS_FIELD_ID,\n      formErrors: this.formErrors,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  userDepartments: PropTypes.array.isRequired,\n  // userData: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  getDepartments: PropTypes.func.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired\n};\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  userDepartments: state.addEditUserReducerStore[STORE.GET_USER_DEPARTMENTS],\n  userData: state.DetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDepartments: (dtype, data) => {\n      dispatch(getActionsFormate(dtype, data));\n    },\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditUser));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx"],"names":["React","connect","withRouter","PropTypes","AddEditUserForm","checkEmail","PageHeader","pageConfig","getActionsFormate","STORE","AddEditUser","Component","constructor","props","FIRST_NAME_FIELD_ID","LAST_NAME_FIELD_ID","EMAIL_FIELD_ID","DEPARTMENTS_FIELD_ID","USER_ROLES","validateForm","state","emailValidity","emailErrors","formValidity","formErrors","setState","enableSubmit","email","firstName","lastName","departments","disabled","length","handleChange","event","target","id","value","handleDepartments","getDepartmentIds","departIds","map","depart","handleSubmit","preventDefault","data","first_name","last_name","department","type","page","actions","postData","submit","errorCode","componentDidMount","getDepartments","getUserData","match","dtype","utype","fetchUser","params","render","pageTitle","userDepartments","propTypes","string","isRequired","array","object","func","defaultProps","mapStateToProps","addEditUserReducerStore","GET_USER_DEPARTMENTS","userData","DetailsReducerStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { STORE } from '../../utils/constants';\n\nclass AddEditUser extends React.Component {\n  FIRST_NAME_FIELD_ID = 'aeu-fname';\n\n  LAST_NAME_FIELD_ID = 'aeu-lname';\n\n  EMAIL_FIELD_ID = 'aeu-email';\n\n  DEPARTMENTS_FIELD_ID = 'select-departments';\n\n  USER_ROLES = 'user-roles'\n  constructor(props) {\n    super(props);\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.DEPARTMENTS_FIELD_ID]: [],\n      [this.USER_ROLES]:[],\n      errorCode: '',\n      disabled: true\n    };\n  }\n\n  componentDidMount() {\n    const { getDepartments, page, getUserData, match } = this.props;\n    const dtype = pageConfig[page].actions.getDepartments;\n    getDepartments(dtype);\n    const utype = pageConfig[page].actions.fetchUser;\n    if (utype) {\n      const { params } = match;\n      getUserData(utype, { ...params });\n    }\n  }\n\n  validateForm = () => {\n    const [emailValidity, emailErrors] = checkEmail(\n      this.state[this.EMAIL_FIELD_ID],\n      'Email'\n    );\n    const formValidity = emailValidity;\n    const formErrors = { ...emailErrors };\n\n    this.setState({ formValidity, formErrors });\n\n    return formValidity;\n  };\n\n  enableSubmit = (email, firstName, lastName, departments) => {\n    const disabled = !(\n      email.length > 0 &&\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      departments.length > 0\n    );\n    this.setState({ disabled });\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.DEPARTMENTS_FIELD_ID]\n        )\n    );\n  };\n\n  handleDepartments = event => {\n    this.setState(\n      {\n        [this.DEPARTMENTS_FIELD_ID]: event || [],\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.DEPARTMENTS_FIELD_ID]\n        )\n    );\n  };\n\n  getDepartmentIds = departments => {\n    const departIds = departments.map(depart => {\n      return depart.value;\n    });\n    return departIds;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n    if (this.validateForm()) {\n      const data = {\n        email: this.state[this.EMAIL_FIELD_ID],\n        first_name: this.state[this.FIRST_NAME_FIELD_ID],\n        last_name: this.state[this.LAST_NAME_FIELD_ID],\n        department: this.getDepartmentIds(this.state[this.DEPARTMENTS_FIELD_ID])\n      };\n      const type = pageConfig[this.props.page].actions.postData;\n      this.props.submit(type, { data, props: { ...this.props } });\n    }\n  };\n\n  // getDepartment=()=>{\n\n  //   const {userDepartments} = this.props;\n\n  //   const localDepart = this.state[this.DEPARTMENTS_FIELD_ID];\n  //   let customDepart = [];\n  //   if(localDepart.length === 0){\n  //     customDepart = userDepartments;\n  //   }else if(localDepart.length === userDepartments.length){\n  //     customDepart = localDepart;\n  //   }else{\n  //      customDepart = localDepart;\n  //     for(let udepart of userDepartments){\n  //       let checkExistDepart = false;\n  //       for(let ldepart of localDepart){\n  //         if(ldepart.value === udepart.value){\n  //           checkExistDepart = true;\n  //         }\n  //       }\n  //       if(!checkExistDepart){\n  //         customDepart.push(udepart);\n  //       }\n  //     }\n  //   }\n  //   return customDepart;\n  // }\n\n  // getStateValues = () => {\n  //   const { userData } = this.props;\n\n  //   if (userData.length > 0 && this.state.disabled) {\n  //     const firstName = userData.first_name;\n  //     const lastName = userData.last_name;\n  //     const { email } = userData;\n  //     const departments = userData.department.map(depart => {\n  //       return { value: depart.id, label: depart.name };\n  //     });\n  //     return { firstName, lastName, email, departments };\n  //   }\n  //   return {\n  //     firstName: this.state[this.FIRST_NAME_FIELD_ID],\n  //     lastName: this.state[this.LAST_NAME_FIELD_ID]\n  //   };\n  // };\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle } = pageConfig[page];\n    // const stateValues = this.getStateValues();\n    return (\n      <div className=\"add-edit-user\">\n        <PageHeader title={pageTitle} />\n        <AddEditUserForm\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          handleDepartments={this.handleDepartments}\n          firstNameFieldId={this.FIRST_NAME_FIELD_ID}\n          lastNameFieldId={this.LAST_NAME_FIELD_ID}\n          emailFieldId={this.EMAIL_FIELD_ID}\n          firstNameFieldValue={this.state[this.FIRST_NAME_FIELD_ID]}\n          lastNameFieldValue={this.state[this.LAST_NAME_FIELD_ID]}\n          emailFieldValue={this.state[this.EMAIL_FIELD_ID]}\n          departmentsFieldValue={this.props.userDepartments}\n          departmentsFieldId={this.DEPARTMENTS_FIELD_ID}\n          formErrors={this.formErrors}\n          disabled={this.state.disabled}\n        />\n      </div>\n    );\n  }\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  userDepartments: PropTypes.array.isRequired,\n  // userData: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  getDepartments: PropTypes.func.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired\n};\n\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  userDepartments: state.addEditUserReducerStore[STORE.GET_USER_DEPARTMENTS],\n  userData: state.DetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDepartments: (dtype, data) => {\n      dispatch(getActionsFormate(dtype, data));\n    },\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddEditUser)\n);\n"]},"metadata":{},"sourceType":"module"}