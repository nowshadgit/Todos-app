{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CALL_STATUS } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\nconst initialState = {\n  data: {},\n  inProgress: false,\n  callStatus: CALL_STATUS.PENDING,\n  errorCode: '',\n  show: false\n};\n\nconst changePasswordStore = (stateParam, {\n  type,\n  payload\n}) => {\n  const state = stateParam || initialState;\n\n  switch (type) {\n    case ACTIONS.PROFILE.CHANGE_PASSWORD:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.PROFILE.CHANGE_PASSWORD_FAIL:\n      return _objectSpread({}, state, {\n        inProgress: false,\n        callStatus: CALL_STATUS.ERROR,\n        errorCode: payload.error_code\n      });\n\n    case ACTIONS.PROFILE.CHANGE_PASSWORD_SUCCESS:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false,\n        callStatus: CALL_STATUS.RESPONDED\n      });\n\n    case ACTIONS.PROFILE.RESET_STATE:\n      return _objectSpread({}, state, {\n        data: {},\n        inProgress: false,\n        callStatus: CALL_STATUS.PENDING,\n        errorCode: ''\n      });\n\n    case ACTIONS.PROFILE.HIDE_CHANGE_PASSWORD:\n      return _objectSpread({}, state, {\n        show: false\n      });\n\n    case ACTIONS.PROFILE.SHOW_CHANGE_PASSWORD:\n      return _objectSpread({}, state, {\n        show: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\n\nexport { changePasswordStore, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/containers/ChangePassword/ChangePassword.reducer.js"],"names":["CALL_STATUS","ACTIONS","initialState","data","inProgress","callStatus","PENDING","errorCode","show","changePasswordStore","stateParam","type","payload","state","PROFILE","CHANGE_PASSWORD","CHANGE_PASSWORD_FAIL","ERROR","error_code","CHANGE_PASSWORD_SUCCESS","RESPONDED","RESET_STATE","HIDE_CHANGE_PASSWORD","SHOW_CHANGE_PASSWORD","dummy"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,UAAU,EAAEL,WAAW,CAACM,OAHL;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,IAAI,EAAE;AALa,CAArB;;AAQA,MAAMC,mBAAmB,GAAG,CAACC,UAAD,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AAC7D,QAAMC,KAAK,GAAGH,UAAU,IAAIR,YAA5B;;AACA,UAAQS,IAAR;AACE,SAAKV,OAAO,CAACa,OAAR,CAAgBC,eAArB;AACE,+BAAYF,KAAZ;AAAmBT,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKH,OAAO,CAACa,OAAR,CAAgBE,oBAArB;AACE,+BACKH,KADL;AAEET,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,UAAU,EAAEL,WAAW,CAACiB,KAH1B;AAIEV,QAAAA,SAAS,EAAEK,OAAO,CAACM;AAJrB;;AAMF,SAAKjB,OAAO,CAACa,OAAR,CAAgBK,uBAArB;AACE,+BACKN,KADL;AAEEV,QAAAA,IAAI,EAAES,OAFR;AAGER,QAAAA,UAAU,EAAE,KAHd;AAIEC,QAAAA,UAAU,EAAEL,WAAW,CAACoB;AAJ1B;;AAMF,SAAKnB,OAAO,CAACa,OAAR,CAAgBO,WAArB;AACE,+BACKR,KADL;AAEEV,QAAAA,IAAI,EAAE,EAFR;AAGEC,QAAAA,UAAU,EAAE,KAHd;AAIEC,QAAAA,UAAU,EAAEL,WAAW,CAACM,OAJ1B;AAKEC,QAAAA,SAAS,EAAE;AALb;;AAOF,SAAKN,OAAO,CAACa,OAAR,CAAgBQ,oBAArB;AACE,+BACKT,KADL;AAEEL,QAAAA,IAAI,EAAE;AAFR;;AAIF,SAAKP,OAAO,CAACa,OAAR,CAAgBS,oBAArB;AACE,+BACKV,KADL;AAEEL,QAAAA,IAAI,EAAE;AAFR;;AAIF;AACE,aAAOK,KAAP;AApCJ;AAsCD,CAxCD;;AA0CA,MAAMW,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAASf,mBAAT,EAA8Be,KAA9B","sourcesContent":["import { CALL_STATUS } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\n\nconst initialState = {\n  data: {},\n  inProgress: false,\n  callStatus: CALL_STATUS.PENDING,\n  errorCode: '',\n  show: false\n};\n\nconst changePasswordStore = (stateParam, { type, payload }) => {\n  const state = stateParam || initialState;\n  switch (type) {\n    case ACTIONS.PROFILE.CHANGE_PASSWORD:\n      return { ...state, inProgress: true };\n    case ACTIONS.PROFILE.CHANGE_PASSWORD_FAIL:\n      return {\n        ...state,\n        inProgress: false,\n        callStatus: CALL_STATUS.ERROR,\n        errorCode: payload.error_code\n      };\n    case ACTIONS.PROFILE.CHANGE_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        data: payload,\n        inProgress: false,\n        callStatus: CALL_STATUS.RESPONDED\n      };\n    case ACTIONS.PROFILE.RESET_STATE:\n      return {\n        ...state,\n        data: {},\n        inProgress: false,\n        callStatus: CALL_STATUS.PENDING,\n        errorCode: ''\n      };\n    case ACTIONS.PROFILE.HIDE_CHANGE_PASSWORD:\n      return {\n        ...state,\n        show: false\n      };\n    case ACTIONS.PROFILE.SHOW_CHANGE_PASSWORD:\n      return {\n        ...state,\n        show: true\n      };\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\n\nexport { changePasswordStore, dummy };\n"]},"metadata":{},"sourceType":"module"}