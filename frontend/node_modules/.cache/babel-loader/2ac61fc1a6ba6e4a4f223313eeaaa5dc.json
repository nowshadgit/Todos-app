{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport { getActionsFormate } from '../../utils/common';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants';\nimport DataNotFound from '../../components/DataNotFound/DataNotFound';\nimport './Analytics.scss';\n\nclass Analytics extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page,\n          match = _this$props.match;\n    const actions = pageConfig[page].actions;\n    const fetchAssetsCount = actions.fetchAssetsCount;\n    const params = match.params;\n\n    if (fetchAssetsCount) {\n      makeCall(fetchAssetsCount, _objectSpread({}, params));\n    }\n  }\n\n  render() {\n    const AssetTypeCount = this.props.AssetTypeCount;\n    let AssetTypeAnalytics = '';\n\n    if (AssetTypeCount && Object.keys(AssetTypeCount).length > 0) {\n      const formatedData = AssetTypeCount.formatedData,\n            size = AssetTypeCount.size,\n            isAllEmpty = AssetTypeCount.isAllEmpty,\n            legend = AssetTypeCount.legend;\n      AssetTypeAnalytics = React.createElement(\"div\", {\n        className: \"card w-50 assetsAnalytics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"assetsCountOnAssetType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Assets Count in Asset Type\"), !isAllEmpty ? React.createElement(C3Chart, {\n        title: \"Assets\",\n        size: size,\n        data: formatedData,\n        legend: legend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }) : React.createElement(DataNotFound, {\n        name: \"Assets Count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, AssetTypeAnalytics);\n  }\n\n}\n\nAnalytics.propTypes = {\n  AssetTypeCount: PropTypes.object.isRequired\n};\nAnalytics.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const page = props.page;\n  const formateFunction = pageConfig[page].formateFunc;\n  return {\n    AssetTypeCount: formateFunction.assetTypeCount(state.analyticsReducerStore[STORE.ASSETS_COUNT_WRT_ASSET_TYPE]),\n    inProgress: state.listReducerStore.inProgress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Analytics));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx"],"names":["React","connect","withRouter","PropTypes","PageHeader","C3Chart","getActionsFormate","pageConfig","STORE","DataNotFound","Analytics","Component","constructor","props","componentDidMount","makeCall","page","match","actions","fetchAssetsCount","params","render","AssetTypeCount","AssetTypeAnalytics","Object","keys","length","formatedData","size","isAllEmpty","legend","propTypes","object","isRequired","defaultProps","mapStateToProps","state","formateFunction","formateFunc","assetTypeCount","analyticsReducerStore","ASSETS_COUNT_WRT_ASSET_TYPE","inProgress","listReducerStore","mapDispatchToProps","dispatch","type","data","resetState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport { getActionsFormate } from '../../utils/common';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants';\nimport DataNotFound from '../../components/DataNotFound/DataNotFound';\nimport './Analytics.scss';\n\nclass Analytics extends React.Component{\n  constructor(props){\n    super(props);\n  }\n\n  componentDidMount(){\n    const {makeCall, page, match} = this.props;\n    const { actions } = pageConfig[page];\n    const { fetchAssetsCount } = actions;\n    const { params } = match;\n\n    if(fetchAssetsCount){\n      makeCall(fetchAssetsCount, {...params});\n    }\n  }\n  render(){\n    const { AssetTypeCount } = this.props;\n    let AssetTypeAnalytics = '';\n    if(AssetTypeCount && Object.keys(AssetTypeCount).length > 0){\n      const { formatedData, size, isAllEmpty, legend } = AssetTypeCount;\n      AssetTypeAnalytics = ( <div className=\"card w-50 assetsAnalytics\">\n                              <div className=\"assetsCountOnAssetType\">Assets Count in Asset Type</div>\n                              {!isAllEmpty ? <C3Chart title=\"Assets\" size={size} data={formatedData} legend={legend} />\n                              :<DataNotFound name={\"Assets Count\"}/>}\n                          </div>\n                        )\n    }\n    return (\n      <div>\n        {/* <PageHeader title=\"Assets\" actions={[]} /> */}\n        {AssetTypeAnalytics}\n      </div>\n    );\n  }\n}\n\nAnalytics.propTypes = {\n  AssetTypeCount: PropTypes.object.isRequired\n};\n\nAnalytics.defaultProps = {};\nconst mapStateToProps = (state, props) => {\n  const { page } = props;\n  const formateFunction = pageConfig[page].formateFunc;\n  return {\n    AssetTypeCount: formateFunction.assetTypeCount(state.analyticsReducerStore[STORE.ASSETS_COUNT_WRT_ASSET_TYPE]),\n    inProgress: state.listReducerStore.inProgress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Analytics)\n);"]},"metadata":{},"sourceType":"module"}