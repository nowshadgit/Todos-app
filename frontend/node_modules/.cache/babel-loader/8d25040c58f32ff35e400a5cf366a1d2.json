{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getUserList(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.USER);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.GET_USER_LIST_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nfunction* getOrgUnitsList(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.ORG_UNITS, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nfunction* getAssetAttributes(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.ASSET_ATTRIBUTES, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data.attributes\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nfunction* getAssetTypes(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.ASSET_TYPES, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nexport { getUserList, getOrgUnitsList, getAssetAttributes, getAssetTypes };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.saga.js"],"names":["call","put","reverse","ACTIONS","FOOTPRINTS_API","getUserList","action","response","window","axios","getData","USER","status","type","USERS","GET_USER_LIST_SUCCESS","payload","data","GET_USER_LIST_FAIL","ALERT_MESSAGE","FAIL","e","getOrgUnitsList","ORG_UNITS","GET_ORG_UNITS_LIST_SUCCESS","GET_ORG_UNITS_LIST_FAIL","getAssetAttributes","ASSET_ATTRIBUTES","GET_ASSET_ATTRIBUTES_SUCCESS","attributes","GET_ASSET_ATTRIBUTES_FAIL","getAssetTypes","ASSET_TYPES","GET_ASSET_TYPES_SUCCESS","GET_ASSET_TYPES_FAIL"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\n\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getUserList(action) {\n  let response;\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.USER);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.GET_USER_LIST_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nfunction* getOrgUnitsList(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      FOOTPRINTS_API.ORG_UNITS,\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nfunction* getAssetAttributes(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      FOOTPRINTS_API.ASSET_ATTRIBUTES,\n      action.data\n    );\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data.attributes\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nfunction* getAssetTypes(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      FOOTPRINTS_API.ASSET_TYPES,\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nexport { getUserList, getOrgUnitsList, getAssetAttributes, getAssetTypes };\n"]},"metadata":{},"sourceType":"module"}