{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\n\nclass ListPage extends React.Component {\n  componentDidMount() {// const { makeCall, actionType, page } = this.props;\n    // if (actionType) {\n    //   const { type } = pageConfig[page][actionType];\n    //   makeCall(type);\n    // }\n  }\n\n  render() {\n    const page = this.props.page;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          actions = _pageConfig$page.actions; // const { handler } = actionType ? pageConfig[page][actionType] : false;\n\n    const handler = null;\n    const data = this.props.listData.data;\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(DataCards, {\n      cardData: {\n        data,\n        handler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  actionType: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  listData: PropTypes.object.isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  listData: state.listReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","ListPage","Component","componentDidMount","render","page","props","pageTitle","actions","handler","data","listData","propTypes","string","isRequired","actionType","makeCall","func","object","defaultProps","mapStateToProps","state","listReducerStore","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAGA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAAA,6BAEwBP,UAAU,CAACO,IAAD,CAFlC;AAAA,UAECE,SAFD,oBAECA,SAFD;AAAA,UAEYC,OAFZ,oBAEYA,OAFZ,EAGP;;AACA,UAAMC,OAAO,GAAG,IAAhB;AAJO,UAKCC,IALD,GAKU,KAAKJ,KAAL,CAAWK,QALrB,CAKCD,IALD;AAMP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEH,SAAnB;AAA8B,MAAA,OAAO,EAAEC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE;AAAEE,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF;AAOD;;AAvBoC;;AA0BvCR,QAAQ,CAACW,SAAT,GAAqB;AACnBP,EAAAA,IAAI,EAAEV,SAAS,CAACkB,MAAV,CAAiBC,UADJ;AAEnBC,EAAAA,UAAU,EAAEpB,SAAS,CAACkB,MAAV,CAAiBC,UAFV;AAGnBE,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,IAAV,CAAeH,UAHN;AAInBH,EAAAA,QAAQ,EAAEhB,SAAS,CAACuB,MAAV,CAAiBJ;AAJR,CAArB;AAOAb,QAAQ,CAACkB,YAAT,GAAwB,EAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,QAAQ,EAAEU,KAAK,CAACC;AADgB,CAAL,CAA7B;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLR,IAAAA,QAAQ,EAAE,CAACS,IAAD,EAAOf,IAAP,KAAgB;AACxBc,MAAAA,QAAQ,CAACxB,iBAAiB,CAACyB,IAAD,EAAOf,IAAP,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeb,UAAU,CACvBD,OAAO,CACLwB,eADK,EAELG,kBAFK,CAAP,CAGEtB,QAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\n\n\nclass ListPage extends React.Component {\n  \n  componentDidMount() {\n    // const { makeCall, actionType, page } = this.props;\n    // if (actionType) {\n    //   const { type } = pageConfig[page][actionType];\n    //   makeCall(type);\n    // }\n  }\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle, actions } = pageConfig[page];\n    // const { handler } = actionType ? pageConfig[page][actionType] : false;\n    const handler = null;\n    const { data } = this.props.listData;\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={actions} />\n        <DataCards cardData={{ data, handler }} />\n        <div>Hello world</div>\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  actionType: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  listData: PropTypes.object.isRequired\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  listData: state.listReducerStore\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}