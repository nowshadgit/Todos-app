{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport { FOOTPRINTS_COMPONENTS } from '../../config';\nimport { COMPONENTS } from '../../utils/constants';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page;\n    const components = pageConfig[page].components;\n    components && components.map(comp => {\n      const type = FOOTPRINTS_COMPONENTS[comp].job.PAGE_DATA;\n      makeCall(type);\n      return true;\n    });\n  }\n\n  render() {\n    const page = this.props.page;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          headerActions = _pageConfig$page.headerActions,\n          components = _pageConfig$page.components;\n    let key = 0;\n    const Components = components && components.map(comp => {\n      const fpComp = FOOTPRINTS_COMPONENTS[comp];\n      const fpCompData = this.props[comp];\n      const Component = fpComp.component;\n      const actions = fpComp.actions;\n      key += 1;\n      return React.createElement(Component, Object.assign({}, this.props, {\n        key: key,\n        data: fpCompData,\n        actions: actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: headerActions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), Components, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  [COMPONENTS.DATA_CARD]: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  [COMPONENTS.DATA_CARD]: state.listReducerStore[COMPONENTS.DATA_CARD]\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","FOOTPRINTS_COMPONENTS","COMPONENTS","ListPage","Component","componentDidMount","props","makeCall","page","components","map","comp","type","job","PAGE_DATA","render","pageTitle","headerActions","key","Components","fpComp","fpCompData","component","actions","propTypes","string","isRequired","func","DATA_CARD","oneOfType","array","object","defaultProps","mapStateToProps","state","listReducerStore","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport { FOOTPRINTS_COMPONENTS } from '../../config';\nimport { COMPONENTS } from '../../utils/constants';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const { makeCall, page } = this.props;\n    const { components } = pageConfig[page];\n    components &&\n      components.map(comp => {\n        const type = FOOTPRINTS_COMPONENTS[comp].job.PAGE_DATA;\n        makeCall(type);\n        return true;\n      });\n  }\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle, headerActions, components } = pageConfig[page];\n    let key = 0;\n    const Components =\n      components &&\n      components.map(comp => {\n        const fpComp = FOOTPRINTS_COMPONENTS[comp];\n        const fpCompData = this.props[comp];\n\n        const Component = fpComp.component;\n        const { actions } = fpComp;\n        key += 1;\n        return (\n          <Component\n            {...this.props}\n            key={key}\n            data={fpCompData}\n            actions={actions}\n          />\n        );\n      });\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={headerActions} />\n        {Components}\n        <div>Hello world</div>\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  [COMPONENTS.DATA_CARD]: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object\n  ]).isRequired,\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  [COMPONENTS.DATA_CARD]: state.listReducerStore[COMPONENTS.DATA_CARD],\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}