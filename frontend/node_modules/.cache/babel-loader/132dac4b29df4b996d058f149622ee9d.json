{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport { getActionsFormate } from '../../utils/common'; // const Analytics = (props) => {\n//   const data= {\n//     columns: [\n//         ['data1', 30],\n//         ['data2', 120],\n//     ],\n//     type : 'donut',\n// };\n// let size= {\n//   // height: 200,\n//   width: 500\n// }\n//   return (\n//     <div>\n//       {/* <PageHeader title=\"Assets\" actions={[]} /> */}\n//       <div className=\"card\">\n//         <C3Chart title=\"Assets\" data={data} size={size} />\n//       </div>\n//     </div>\n//   );\n// };\n\nclass Analytics extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const data = {\n      columns: [['data1', 30], ['data2', 120]],\n      type: 'donut'\n    };\n    let size = {\n      // height: 200,\n      width: 500\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(C3Chart, {\n      title: \"Assets\",\n      data: data,\n      size: size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nAnalytics.propTypes = {\n  analyticsStore: PropTypes.object.isRequired\n};\nAnalytics.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  analyticsStore: state.analyticsReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Analytics));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx"],"names":["React","connect","withRouter","PropTypes","PageHeader","C3Chart","getActionsFormate","Analytics","Component","constructor","props","componentDidMount","render","data","columns","type","size","width","propTypes","analyticsStore","object","isRequired","defaultProps","mapStateToProps","state","analyticsReducerStore","mapDispatchToProps","dispatch","makeCall","resetState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,WAAP;AACA,SAASC,iBAAT,QAAkC,oBAAlC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAE,CAElB;;AACDC,EAAAA,MAAM,GAAE;AACN,UAAMC,IAAI,GAAE;AACVC,MAAAA,OAAO,EAAE,CACL,CAAC,OAAD,EAAU,EAAV,CADK,EAEL,CAAC,OAAD,EAAU,GAAV,CAFK,CADC;AAKVC,MAAAA,IAAI,EAAG;AALG,KAAZ;AAOA,QAAIC,IAAI,GAAE;AACR;AACAC,MAAAA,KAAK,EAAE;AAFC,KAAV;AAIA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,QAAf;AAAwB,MAAA,IAAI,EAAEJ,IAA9B;AAAoC,MAAA,IAAI,EAAEG,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AASD;;AA7BoC;;AAgCvCT,SAAS,CAACW,SAAV,GAAsB;AACpBC,EAAAA,cAAc,EAAEhB,SAAS,CAACiB,MAAV,CAAiBC;AADb,CAAtB;AAIAd,SAAS,CAACe,YAAV,GAAyB,EAAzB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,cAAc,EAAEK,KAAK,CAACC;AADU,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,QAAQ,EAAE,CAACb,IAAD,EAAOF,IAAP,KAAgB;AACxBc,MAAAA,QAAQ,CAACrB,iBAAiB,CAACS,IAAD,EAAOF,IAAP,CAAlB,CAAR;AACD,KAHI;AAILgB,IAAAA,UAAU,EAAEd,IAAI,IAAI;AAClBY,MAAAA,QAAQ,CAACrB,iBAAiB,CAACS,IAAD,CAAlB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,eAAeb,UAAU,CACvBD,OAAO,CACLsB,eADK,EAELG,kBAFK,CAAP,CAGEnB,SAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport { getActionsFormate } from '../../utils/common';\n// const Analytics = (props) => {\n//   const data= {\n//     columns: [\n//         ['data1', 30],\n//         ['data2', 120],\n//     ],\n//     type : 'donut',\n// };\n// let size= {\n//   // height: 200,\n//   width: 500\n// }\n//   return (\n//     <div>\n//       {/* <PageHeader title=\"Assets\" actions={[]} /> */}\n//       <div className=\"card\">\n//         <C3Chart title=\"Assets\" data={data} size={size} />\n//       </div>\n      \n//     </div>\n//   );\n// };\n\nclass Analytics extends React.Component{\n  constructor(props){\n    super(props);\n  }\n\n  componentDidMount(){\n\n  }\n  render(){\n    const data= {\n      columns: [\n          ['data1', 30],\n          ['data2', 120],\n      ],\n      type : 'donut',\n    };\n    let size= {\n      // height: 200,\n      width: 500\n    }\n    return (\n      <div>\n        {/* <PageHeader title=\"Assets\" actions={[]} /> */}\n        <div className=\"card\">\n          <C3Chart title=\"Assets\" data={data} size={size} />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nAnalytics.propTypes = {\n  analyticsStore: PropTypes.object.isRequired\n};\n\nAnalytics.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  analyticsStore: state.analyticsReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Analytics)\n);"]},"metadata":{},"sourceType":"module"}