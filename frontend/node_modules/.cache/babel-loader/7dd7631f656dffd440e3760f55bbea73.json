{"ast":null,"code":"import moment from 'moment';\n\nconst getFullName = (firstName = '-', lastName = '-') => \"\".concat(firstName, \" \").concat(lastName);\n\nconst isLoadMore = (pageNum, totalPages) => pageNum <= totalPages || pageNum === 1;\n\nconst isDataExists = data => data && data.length > 0;\n\nconst secToHHMM = (sec, format) => moment.utc(sec * 1000).format(format);\n\nconst getMaxPages = (totalCount, limit) => Math.ceil(totalCount / limit);\n\nconst isFetchData = (totalCount, limit, pageNum) => {\n  const totalPages = getMaxPages(totalCount, limit);\n  isLoadMore(pageNum, totalPages);\n};\n\nconst isNumber = val => /^[0-9]+$/.test(val);\n\nconst isAlphaNumeric = val => /^[0-9a-zA-Z]*$/.test(val);\n\nconst checkFetchStatus = isFetching => {\n  let showLoader = false;\n  Object.keys(isFetching).forEach(key => {\n    if (isFetching[key]) {\n      showLoader = true;\n    }\n  });\n  return showLoader;\n};\n\nconst getTokenFromUrl = urlParams => urlParams && urlParams.token;\n\nconst setLocalStorage = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\nconst getLocalStorage = key => JSON.parse(localStorage.getItem(key));\n\nconst removeLocalStorage = key => localStorage.removeItem(key);\n\nconst getUniqueId = () => {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return \"\".concat(s4()).concat(s4(), \"-\").concat(s4(), \"-\").concat(s4(), \"-\").concat(s4(), \"-\").concat(s4()).concat(s4()).concat(s4());\n};\n\nconst secondsToHrmins = time => {\n  const t = Number(time);\n  if (t < 60) return \"\".concat(t, \" secs\");\n  const h = Math.floor(t / 3600);\n  let m = Math.floor(t % 3600 / 60);\n  const s = Math.floor(t % 3600 % 60);\n  if (s > 30) m += 1;\n  const hourString = h + (h === 1 ? ' hr' : ' hrs');\n  const minString = m + (m === 1 ? ' min' : ' mins');\n  const hrs = h > 0 ? hourString : '';\n  const mins = m > 0 ? minString : '';\n  return h > 0 && m > 0 ? \"\".concat(hrs, \" and \").concat(mins) : \"\".concat(hrs).concat(mins);\n};\n\nconst toSentenceCase = word => word.charAt(0).toUpperCase() + word.slice(1);\n\nconst getStrippedNum = number => number.replace(/-/g, '');\n\nconst loadJS = (url, callback) => {\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.defer = true;\n  script.async = true;\n\n  if (script.readyState) {\n    script.onreadystatechange = () => {\n      if (script.readyState === 'loaded' || script.readyState === 'complete') {\n        script.onreadystatechange = null;\n      }\n    };\n  }\n\n  script.onload = () => {\n    if (callback) callback();\n  };\n\n  script.src = url;\n  document.getElementsByTagName('head')[0].appendChild(script);\n};\n\nconst humanlyDateFormat = 'MMM D, YYYY';\nconst systemDateFormat = 'DD/MM/YYYY';\n\nconst getUnixTime = time => moment(time).unix();\n\nconst getDateFromUnixTime = (unixTime, dateFormat) => moment.unix(unixTime).format(dateFormat);\n\nconst getTimeFromUnixTime = unixTime => moment.unix(unixTime).format('hh:mm A');\n\nconst sortByTimestamp = messages => {\n  messages.sort((a, b) => new Date(a.unixTime * 1000) - new Date(b.unixTime * 1000));\n  return messages;\n};\n\nconst getUnixFromDateTime = (date, time) => {\n  const d = moment(date).format('YYYY-MM-DD');\n  const t = moment(time).format('HH:mm');\n  const dateString = \"\".concat(d, \" \").concat(t);\n  return moment(dateString, 'YYYY-MM-DD HH:mm').valueOf() / 1000;\n};\n\nconst getDayOfMonthFromUnix = unixTime => moment.unix(unixTime).format('MMM D');\n\nconst getTimeFromUnix = unixTime => moment.unix(unixTime).format('hh:mm a');\n\nconst isLessThanTime = (timestamp, noOfMins) => {\n  const now = moment().toDate();\n  const then = moment(new Date(timestamp * 1000));\n  const minsDiff = then.diff(now, 'minutes');\n\n  if (minsDiff > -noOfMins && minsDiff <= 0) {\n    return true;\n  }\n\n  return false;\n};\n\nconst blockBackButton = () => {\n  window.history.pushState(null, document.title, window.location.href);\n  window.addEventListener('popstate', event => {\n    window.history.pushState(null, document.title, window.location.href);\n  });\n};\n\nconst roundToDecimalPlace = (value, noOfDecimalPlaces = 1) => value ? parseFloat(value).toFixed(noOfDecimalPlaces) : 0.0;\n\nconst getActionsFormate = (action, data) => {\n  const formate = data ? {\n    type: action,\n    data\n  } : {\n    type: action\n  };\n  return formate;\n};\n\nfunction getOrgUnitIds(data) {\n  const Ids = data ? data.map(oData => {\n    return oData.orgUnitId;\n  }) : [];\n  return Ids;\n}\n\nfunction getNormalId(data) {\n  const Ids = data ? data.map(tData => {\n    return tData.id;\n  }) : [];\n  return Ids;\n}\n\nfunction getFormatedDate(date) {\n  const fDate = new Date(date);\n  const newFormatedate = date ? \"\".concat(fDate.getFullYear(), \"-\").concat(\"0\".concat(fDate.getMonth() + 1).slice(-2), \"-\").concat(\"0\".concat(fDate.getDate()).slice(-2), \" \") : '-';\n  return newFormatedate;\n}\n\nfunction getSelectedRolesFormate(roles) {\n  const userRoles = roles.map(role => {\n    return {\n      value: role.id,\n      label: role.name\n    };\n  });\n  return userRoles;\n}\n\nfunction isValidData(data) {\n  if (data && Object.keys(data).length > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getAnalyFormOfAsset(data) {\n  let isAllEmpty = true;\n  const analyticsData = data && data.length > 0 && data.map(each => {\n    if (isValidData(each)) {\n      const AssetType = each.asset_type,\n            count = each.count;\n\n      if (count > 0) {\n        isAllEmpty = false;\n      }\n\n      return [AssetType.name, count];\n    }\n\n    return [];\n  });\n  const formatedData = {\n    columns: analyticsData ? analyticsData : [],\n    type: 'donut'\n  };\n  let size = {\n    width: 200,\n    height: 200\n  };\n  let legend = {\n    show: true,\n    position: 'right',\n    inset: {\n      anchor: 'top-right',\n      x: 0,\n      y: 0,\n      step: undefined\n    }\n  };\n  let options = {\n    responsive: true,\n    maintainAspectRatio: true\n  };\n  return {\n    formatedData,\n    isAllEmpty,\n    size,\n    options,\n    legend\n  };\n}\n\nexport { getUnixTime, isLessThanTime, getTimeFromUnix, sortByTimestamp, systemDateFormat, humanlyDateFormat, getDateFromUnixTime, getTimeFromUnixTime, getUnixFromDateTime, getDayOfMonthFromUnix, blockBackButton, roundToDecimalPlace, getFullName, isDataExists, secToHHMM, isFetchData, isNumber, isAlphaNumeric, checkFetchStatus, getTokenFromUrl, setLocalStorage, getLocalStorage, removeLocalStorage, secondsToHrmins, toSentenceCase, getUniqueId, getStrippedNum, loadJS, getActionsFormate, getOrgUnitIds, getNormalId, getFormatedDate, getSelectedRolesFormate, isValidData, getAnalyFormOfAsset };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/utils/common.js"],"names":["moment","getFullName","firstName","lastName","isLoadMore","pageNum","totalPages","isDataExists","data","length","secToHHMM","sec","format","utc","getMaxPages","totalCount","limit","Math","ceil","isFetchData","isNumber","val","test","isAlphaNumeric","checkFetchStatus","isFetching","showLoader","Object","keys","forEach","key","getTokenFromUrl","urlParams","token","setLocalStorage","localStorage","setItem","JSON","stringify","getLocalStorage","parse","getItem","removeLocalStorage","removeItem","getUniqueId","s4","floor","random","toString","substring","secondsToHrmins","time","t","Number","h","m","s","hourString","minString","hrs","mins","toSentenceCase","word","charAt","toUpperCase","slice","getStrippedNum","number","replace","loadJS","url","callback","script","document","createElement","type","defer","async","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","humanlyDateFormat","systemDateFormat","getUnixTime","unix","getDateFromUnixTime","unixTime","dateFormat","getTimeFromUnixTime","sortByTimestamp","messages","sort","a","b","Date","getUnixFromDateTime","date","d","dateString","valueOf","getDayOfMonthFromUnix","getTimeFromUnix","isLessThanTime","timestamp","noOfMins","now","toDate","then","minsDiff","diff","blockBackButton","window","history","pushState","title","location","href","addEventListener","event","roundToDecimalPlace","value","noOfDecimalPlaces","parseFloat","toFixed","getActionsFormate","action","formate","getOrgUnitIds","Ids","map","oData","orgUnitId","getNormalId","tData","id","getFormatedDate","fDate","newFormatedate","getFullYear","getMonth","getDate","getSelectedRolesFormate","roles","userRoles","role","label","name","isValidData","getAnalyFormOfAsset","isAllEmpty","analyticsData","each","AssetType","asset_type","count","formatedData","columns","size","width","height","legend","show","position","inset","anchor","x","y","step","undefined","options","responsive","maintainAspectRatio"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nconst getFullName = (firstName = '-', lastName = '-') =>\n  `${firstName} ${lastName}`;\n\nconst isLoadMore = (pageNum, totalPages) =>\n  pageNum <= totalPages || pageNum === 1;\n\nconst isDataExists = data => data && data.length > 0;\n\nconst secToHHMM = (sec, format) => moment.utc(sec * 1000).format(format);\n\nconst getMaxPages = (totalCount, limit) => Math.ceil(totalCount / limit);\n\nconst isFetchData = (totalCount, limit, pageNum) => {\n  const totalPages = getMaxPages(totalCount, limit);\n  isLoadMore(pageNum, totalPages);\n};\n\nconst isNumber = val => /^[0-9]+$/.test(val);\n\nconst isAlphaNumeric = val => /^[0-9a-zA-Z]*$/.test(val);\n\nconst checkFetchStatus = isFetching => {\n  let showLoader = false;\n  Object.keys(isFetching).forEach(key => {\n    if (isFetching[key]) {\n      showLoader = true;\n    }\n  });\n  return showLoader;\n};\n\nconst getTokenFromUrl = urlParams => urlParams && urlParams.token;\n\nconst setLocalStorage = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\nconst getLocalStorage = key => JSON.parse(localStorage.getItem(key));\n\nconst removeLocalStorage = key => localStorage.removeItem(key);\n\nconst getUniqueId = () => {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n};\n\nconst secondsToHrmins = time => {\n  const t = Number(time);\n  if (t < 60) return `${t} secs`;\n  const h = Math.floor(t / 3600);\n  let m = Math.floor((t % 3600) / 60);\n  const s = Math.floor((t % 3600) % 60);\n  if (s > 30) m += 1;\n  const hourString = h + (h === 1 ? ' hr' : ' hrs');\n  const minString = m + (m === 1 ? ' min' : ' mins');\n  const hrs = h > 0 ? hourString : '';\n  const mins = m > 0 ? minString : '';\n  return h > 0 && m > 0 ? `${hrs} and ${mins}` : `${hrs}${mins}`;\n};\n\nconst toSentenceCase = word => word.charAt(0).toUpperCase() + word.slice(1);\n\nconst getStrippedNum = number => number.replace(/-/g, '');\n\nconst loadJS = (url, callback) => {\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.defer = true;\n  script.async = true;\n  if (script.readyState) {\n    script.onreadystatechange = () => {\n      if (script.readyState === 'loaded' || script.readyState === 'complete') {\n        script.onreadystatechange = null;\n      }\n    };\n  }\n  script.onload = () => {\n    if (callback) callback();\n  };\n  script.src = url;\n  document.getElementsByTagName('head')[0].appendChild(script);\n};\n\nconst humanlyDateFormat = 'MMM D, YYYY';\n\nconst systemDateFormat = 'DD/MM/YYYY';\n\nconst getUnixTime = time => moment(time).unix();\n\nconst getDateFromUnixTime = (unixTime, dateFormat) =>\n  moment.unix(unixTime).format(dateFormat);\n\nconst getTimeFromUnixTime = unixTime => moment.unix(unixTime).format('hh:mm A');\n\nconst sortByTimestamp = messages => {\n  messages.sort(\n    (a, b) => new Date(a.unixTime * 1000) - new Date(b.unixTime * 1000)\n  );\n  return messages;\n};\n\nconst getUnixFromDateTime = (date, time) => {\n  const d = moment(date).format('YYYY-MM-DD');\n  const t = moment(time).format('HH:mm');\n  const dateString = `${d} ${t}`;\n  return moment(dateString, 'YYYY-MM-DD HH:mm').valueOf() / 1000;\n};\n\nconst getDayOfMonthFromUnix = unixTime => moment.unix(unixTime).format('MMM D');\n\nconst getTimeFromUnix = unixTime => moment.unix(unixTime).format('hh:mm a');\n\nconst isLessThanTime = (timestamp, noOfMins) => {\n  const now = moment().toDate();\n  const then = moment(new Date(timestamp * 1000));\n  const minsDiff = then.diff(now, 'minutes');\n  if (minsDiff > -noOfMins && minsDiff <= 0) {\n    return true;\n  }\n  return false;\n};\n\nconst blockBackButton = () => {\n  window.history.pushState(null, document.title, window.location.href);\n  window.addEventListener('popstate', event => {\n    window.history.pushState(null, document.title, window.location.href);\n  });\n};\n\nconst roundToDecimalPlace = (value, noOfDecimalPlaces = 1) =>\n  value ? parseFloat(value).toFixed(noOfDecimalPlaces) : 0.0;\n\nconst getActionsFormate = (action, data) => {\n  const formate = data ? { type: action, data } : { type: action };\n  return formate;\n};\n\nfunction getOrgUnitIds(data) {\n  const Ids = data\n    ? data.map(oData => {\n        return oData.orgUnitId;\n      })\n    : [];\n  return Ids;\n}\n\nfunction getNormalId(data) {\n  const Ids = data\n    ? data.map(tData => {\n        return tData.id;\n      })\n    : [];\n  return Ids;\n}\n\nfunction getFormatedDate(date) {\n  const fDate = new Date(date);\n  const newFormatedate = date\n    ? `${fDate.getFullYear()}-${`0${fDate.getMonth() + 1}`.slice(\n        -2\n      )}-${`0${fDate.getDate()}`.slice(-2)} `\n    : '-';\n  return newFormatedate;\n}\n\nfunction getSelectedRolesFormate(roles) {\n  const userRoles = roles.map(role => {\n    return { value: role.id, label: role.name };\n  });\n  return userRoles;\n}\n\nfunction isValidData(data){\n  if(data && Object.keys(data).length > 0){\n    return true;\n  }\n  return false;\n}\n\nfunction getAnalyFormOfAsset(data){\n  let isAllEmpty = true;\n  const analyticsData = data && data.length > 0 && data.map(each=>{\n    if(isValidData(each)){\n      const {asset_type: AssetType, count} = each;\n      if(count > 0){\n        isAllEmpty = false;\n      }\n      return [AssetType.name, count];\n    }\n   return [];\n  });\n  const formatedData = {\n    columns: analyticsData? analyticsData: [],\n    type : 'donut',\n   \n  };\n  let size = {\n    width: 200,\n    height: 200\n  }\n  let legend= {\n    show: true,\n    \n    position: 'right',\n    inset: {\n      anchor: 'top-right',\n      x: 0,\n      y: 0,\n      step: undefined,\n    \n    },\n   \n  };\n  let options = {\n    responsive: true,\n    maintainAspectRatio: true, \n }\n\n\n  return {formatedData, isAllEmpty,size,options, legend};\n} \n\nexport {\n  getUnixTime,\n  isLessThanTime,\n  getTimeFromUnix,\n  sortByTimestamp,\n  systemDateFormat,\n  humanlyDateFormat,\n  getDateFromUnixTime,\n  getTimeFromUnixTime,\n  getUnixFromDateTime,\n  getDayOfMonthFromUnix,\n  blockBackButton,\n  roundToDecimalPlace,\n  getFullName,\n  isDataExists,\n  secToHHMM,\n  isFetchData,\n  isNumber,\n  isAlphaNumeric,\n  checkFetchStatus,\n  getTokenFromUrl,\n  setLocalStorage,\n  getLocalStorage,\n  removeLocalStorage,\n  secondsToHrmins,\n  toSentenceCase,\n  getUniqueId,\n  getStrippedNum,\n  loadJS,\n  getActionsFormate,\n  getOrgUnitIds,\n  getNormalId,\n  getFormatedDate,\n  getSelectedRolesFormate,\n  isValidData,\n  getAnalyFormOfAsset\n};\n"]},"metadata":{},"sourceType":"module"}