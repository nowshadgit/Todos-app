{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Login/Login.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { LOGIN_FORM_HEADER, PAGE } from '../../utils/constants';\nimport AsOnboardingCard from '../../hocs/AsOnbaordingCard';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport { rememberUserCookie, FOOTPRINTS_ROUTES } from '../../config';\nimport { setRememberMe, getRememberMe } from '../../utils/authService';\nimport { checkEmail, checkPassword, getErrorResMsg } from '../../utils/formValidations';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.EMAIL_FIELD_ID = 'fp-email';\n    this.PASSWORD_FIELD_ID = 'fp-password';\n\n    this.enableSignIn = (email, password) => {\n      const disabled = !(email.length > 0 && password.length > 0);\n      this.setState({\n        submitDisabled: disabled\n      });\n    };\n\n    this.validateForm = () => {\n      const _checkEmail = checkEmail(this.state[this.EMAIL_FIELD_ID], 'Email'),\n            _checkEmail2 = _slicedToArray(_checkEmail, 2),\n            emailValidity = _checkEmail2[0],\n            emailErrors = _checkEmail2[1];\n\n      const _checkPassword = checkPassword(this.state[this.PASSWORD_FIELD_ID], 'Password'),\n            _checkPassword2 = _slicedToArray(_checkPassword, 2),\n            passwordValidity = _checkPassword2[0],\n            passwordErrors = _checkPassword2[1];\n\n      const formValidity = emailValidity && passwordValidity;\n\n      const formErrors = _objectSpread({}, emailErrors, {}, passwordErrors);\n\n      this.setState({\n        formValidity,\n        formErrors\n      });\n      return formValidity;\n    };\n\n    this.handleInvalidKeys = event => {\n      if (event.key === ' ') {\n        event.preventDefault();\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSignIn(this.state[this.EMAIL_FIELD_ID], this.state[this.PASSWORD_FIELD_ID]));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.dispatch({\n        type: ACTIONS.AUTH.RESET_STATE\n      });\n\n      if (this.validateForm()) {\n        const data = {\n          email: this.state[this.EMAIL_FIELD_ID],\n          password: this.state[this.PASSWORD_FIELD_ID]\n        };\n        this.login(data);\n      }\n    };\n\n    this.login = data => {\n      this.setState({\n        errorCode: ''\n      });\n      this.props.dispatch({\n        type: ACTIONS.AUTH.LOGIN,\n        data\n      });\n    };\n\n    this.rememberUser = () => {\n      this.setState(prevState => ({\n        rememberMe: !prevState.rememberMe\n      }));\n    };\n\n    this.handleForgottenPassword = () => {\n      this.props.history.push(FOOTPRINTS_ROUTES.FORGOT_PASSWORD);\n    };\n\n    this.state = {\n      formErrors: {},\n      rememberMe: false,\n      formValidity: false,\n      submitDisabled: true,\n      [this.EMAIL_FIELD_ID]: '',\n      [this.PASSWORD_FIELD_ID]: '',\n      errorCode: ''\n    };\n  }\n\n  componentDidMount() {\n    if (getRememberMe(rememberUserCookie)) {\n      this.props.history.push(FOOTPRINTS_ROUTES.ANALYTICS);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const errorCode = nextProps.login.error.errorCode;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.LOGIN);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    return prevState;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const data = nextProps.login.data;\n\n    if (data && data.token) {\n      // if remember me is checked, save token\n      const token = data;\n\n      if (token) {\n        setRememberMe(this.state.rememberMe, token, rememberUserCookie);\n      }\n\n      this.props.history.push(FOOTPRINTS_ROUTES.ANALYTICS);\n    }\n\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title fp-card-title mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, LOGIN_FORM_HEADER), React.createElement(\"div\", {\n      \"card-text\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(LoginForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      rememberMe: this.state.rememberMe,\n      formErrors: this.state.formErrors,\n      emailFieldId: this.EMAIL_FIELD_ID,\n      disabled: this.state.submitDisabled,\n      handleRememberMe: this.rememberUser,\n      formValidity: this.state.formValidity,\n      passwordFieldId: this.PASSWORD_FIELD_ID,\n      handleInvalidKeys: this.handleInvalidKeys,\n      emailValue: this.state[this.EMAIL_FIELD_ID],\n      passwordValue: this.state[this.PASSWORD_FIELD_ID],\n      handleForgottenPassword: this.handleForgottenPassword,\n      inProgress: this.props.login.inProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })));\n  }\n\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  login: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nLogin.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  login: state.loginStore\n});\n\nexport default withRouter(connect(mapStateToProps)(AsOnboardingCard(Login)));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Login/Login.jsx"],"names":["React","PropTypes","connect","withRouter","ACTIONS","LOGIN_FORM_HEADER","PAGE","AsOnboardingCard","LoginForm","rememberUserCookie","FOOTPRINTS_ROUTES","setRememberMe","getRememberMe","checkEmail","checkPassword","getErrorResMsg","Login","Component","constructor","props","EMAIL_FIELD_ID","PASSWORD_FIELD_ID","enableSignIn","email","password","disabled","length","setState","submitDisabled","validateForm","state","emailValidity","emailErrors","passwordValidity","passwordErrors","formValidity","formErrors","handleInvalidKeys","event","key","preventDefault","handleChange","target","id","value","handleSubmit","dispatch","type","AUTH","RESET_STATE","data","login","errorCode","LOGIN","rememberUser","prevState","rememberMe","handleForgottenPassword","history","push","FORGOT_PASSWORD","componentDidMount","ANALYTICS","getDerivedStateFromProps","nextProps","error","errMsg","shouldComponentUpdate","token","render","inProgress","propTypes","func","isRequired","object","defaultProps","mapStateToProps","loginStore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { LOGIN_FORM_HEADER, PAGE } from '../../utils/constants';\nimport AsOnboardingCard from '../../hocs/AsOnbaordingCard';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport { rememberUserCookie, FOOTPRINTS_ROUTES } from '../../config';\nimport { setRememberMe, getRememberMe } from '../../utils/authService';\nimport {\n  checkEmail,\n  checkPassword,\n  getErrorResMsg\n} from '../../utils/formValidations';\n\nclass Login extends React.Component {\n  EMAIL_FIELD_ID = 'fp-email';\n\n  PASSWORD_FIELD_ID = 'fp-password';\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formErrors: {},\n      rememberMe: false,\n      formValidity: false,\n      submitDisabled: true,\n      [this.EMAIL_FIELD_ID]: '',\n      [this.PASSWORD_FIELD_ID]: '',\n      errorCode: ''\n    };\n  }\n\n  componentDidMount() {\n    if (getRememberMe(rememberUserCookie)) {\n      this.props.history.push(FOOTPRINTS_ROUTES.ANALYTICS);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { errorCode } = nextProps.login.error;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.LOGIN);\n      return { formErrors: errMsg, errorCode };\n    }\n    return prevState;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { data } = nextProps.login;\n\n    if (data && data.token) {\n      // if remember me is checked, save token\n      const token = data;\n      if (token) {\n        setRememberMe(this.state.rememberMe, token, rememberUserCookie);\n      }\n\n      this.props.history.push(FOOTPRINTS_ROUTES.ANALYTICS);\n    }\n    return true;\n  }\n\n  enableSignIn = (email, password) => {\n    const disabled = !(email.length > 0 && password.length > 0);\n    this.setState({ submitDisabled: disabled });\n  };\n\n  validateForm = () => {\n    const [emailValidity, emailErrors] = checkEmail(\n      this.state[this.EMAIL_FIELD_ID],\n      'Email'\n    );\n    const [passwordValidity, passwordErrors] = checkPassword(\n      this.state[this.PASSWORD_FIELD_ID],\n      'Password'\n    );\n    const formValidity = emailValidity && passwordValidity;\n    const formErrors = { ...emailErrors, ...passwordErrors };\n\n    this.setState({ formValidity, formErrors });\n\n    return formValidity;\n  };\n\n  handleInvalidKeys = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      },\n      () =>\n        this.enableSignIn(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.PASSWORD_FIELD_ID]\n        )\n    );\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n    if (this.validateForm()) {\n      const data = {\n        email: this.state[this.EMAIL_FIELD_ID],\n        password: this.state[this.PASSWORD_FIELD_ID]\n      };\n      this.login(data);\n    }\n  };\n\n  login = data => {\n    this.setState({ errorCode: '' });\n    this.props.dispatch({ type: ACTIONS.AUTH.LOGIN, data });\n  };\n\n  rememberUser = () => {\n    this.setState(prevState => ({ rememberMe: !prevState.rememberMe }));\n  };\n\n  handleForgottenPassword = () => {\n    this.props.history.push(FOOTPRINTS_ROUTES.FORGOT_PASSWORD);\n  };\n\n  render() {\n    return (\n      <div className=\"login-container\">\n        <h4 className=\"card-title fp-card-title mb-5\">{LOGIN_FORM_HEADER}</h4>\n        <div card-text>\n          <LoginForm\n            handleSubmit={this.handleSubmit}\n            handleChange={this.handleChange}\n            rememberMe={this.state.rememberMe}\n            formErrors={this.state.formErrors}\n            emailFieldId={this.EMAIL_FIELD_ID}\n            disabled={this.state.submitDisabled}\n            handleRememberMe={this.rememberUser}\n            formValidity={this.state.formValidity}\n            passwordFieldId={this.PASSWORD_FIELD_ID}\n            handleInvalidKeys={this.handleInvalidKeys}\n            emailValue={this.state[this.EMAIL_FIELD_ID]}\n            passwordValue={this.state[this.PASSWORD_FIELD_ID]}\n            handleForgottenPassword={this.handleForgottenPassword}\n            inProgress={this.props.login.inProgress}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  login: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nLogin.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  login: state.loginStore\n});\n\nexport default withRouter(connect(mapStateToProps)(AsOnboardingCard(Login)));\n"]},"metadata":{},"sourceType":"module"}