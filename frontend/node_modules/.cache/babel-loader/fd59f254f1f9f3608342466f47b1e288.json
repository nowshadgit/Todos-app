{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport { getActionsFormate } from '../../utils/common';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants';\nimport DataNotFound from '../../components/DataNotFound/DataNotFound';\nimport './Analytics.scss';\n\nclass Analytics extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page,\n          match = _this$props.match;\n    const actions = pageConfig[page].actions;\n    const fetchAssetsCount = actions.fetchAssetsCount;\n    const params = match.params;\n\n    if (fetchAssetsCount) {\n      makeCall(fetchAssetsCount, _objectSpread({}, params));\n    }\n  }\n\n  render() {\n    const AssetTypeCount = this.props.AssetTypeCount;\n    let AssetTypeAnalytics = '';\n\n    if (AssetTypeCount && Object.keys(AssetTypeCount).length > 0) {\n      const formatedData = AssetTypeCount.formatedData,\n            size = AssetTypeCount.size,\n            isAllEmpty = AssetTypeCount.isAllEmpty,\n            legend = AssetTypeCount.legend;\n      AssetTypeAnalytics = React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card col col-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"assetsCountOnAssetType pt-2 pb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Assets Count in Asset Type\"), !isAllEmpty ? React.createElement(C3Chart, {\n        title: \"Assets\",\n        size: size,\n        data: formatedData,\n        legend: legend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }) : React.createElement(DataNotFound, {\n        name: \"Assets Count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row mb-3 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-6 border mr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"AssetCount\"), React.createElement(\"div\", {\n      className: \"col col-5 border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"AssetCount\"))), React.createElement(\"div\", {\n      className: \"col col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), AssetTypeAnalytics);\n  }\n\n}\n\nAnalytics.propTypes = {\n  AssetTypeCount: PropTypes.object,\n  makeCall: PropTypes.func,\n  match: PropTypes.object,\n  page: PropTypes.string\n};\nAnalytics.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const page = props.page;\n  const formateFunction = pageConfig[page].formateFunc;\n  return {\n    AssetTypeCount: formateFunction.assetTypeCount(state.analyticsReducerStore[STORE.ASSETS_COUNT_WRT_ASSET_TYPE]),\n    inProgress: state.listReducerStore.inProgress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Analytics));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx"],"names":["React","connect","withRouter","PropTypes","C3Chart","getActionsFormate","pageConfig","STORE","DataNotFound","Analytics","Component","componentDidMount","props","makeCall","page","match","actions","fetchAssetsCount","params","render","AssetTypeCount","AssetTypeAnalytics","Object","keys","length","formatedData","size","isAllEmpty","legend","propTypes","object","func","string","defaultProps","mapStateToProps","state","formateFunction","formateFunc","assetTypeCount","analyticsReducerStore","ASSETS_COUNT_WRT_ASSET_TYPE","inProgress","listReducerStore","mapDispatchToProps","dispatch","type","data","resetState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,WAAP;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAO,kBAAP;;AAEA,MAAMC,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAG;AAAA,wBACgB,KAAKC,KADrB;AAAA,UACVC,QADU,eACVA,QADU;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,KADN,eACMA,KADN;AAAA,UAEVC,OAFU,GAEEV,UAAU,CAACQ,IAAD,CAFZ,CAEVE,OAFU;AAAA,UAGVC,gBAHU,GAGWD,OAHX,CAGVC,gBAHU;AAAA,UAIVC,MAJU,GAICH,KAJD,CAIVG,MAJU;;AAKlB,QAAID,gBAAJ,EAAsB;AACpBJ,MAAAA,QAAQ,CAACI,gBAAD,oBAAwBC,MAAxB,EAAR;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,cADD,GACoB,KAAKR,KADzB,CACCQ,cADD;AAEP,QAAIC,kBAAkB,GAAG,EAAzB;;AACA,QAAID,cAAc,IAAIE,MAAM,CAACC,IAAP,CAAYH,cAAZ,EAA4BI,MAA5B,GAAqC,CAA3D,EAA8D;AAAA,YACpDC,YADoD,GACTL,cADS,CACpDK,YADoD;AAAA,YACtCC,IADsC,GACTN,cADS,CACtCM,IADsC;AAAA,YAChCC,UADgC,GACTP,cADS,CAChCO,UADgC;AAAA,YACpBC,MADoB,GACTR,cADS,CACpBQ,MADoB;AAE5DP,MAAAA,kBAAkB,GAChB;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAIG,CAACM,UAAD,GACC,oBAAC,OAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,IAAI,EAAED,YAHR;AAIE,QAAA,MAAM,EAAEG,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAQC,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CAFF,EAiBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,CADF;AAqBD;;AACD,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CAFF,EAQE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADM,EAWLP,kBAXK,CAAR;AAaD;;AAnDqC;;AAsDxCZ,SAAS,CAACoB,SAAV,GAAsB;AACpBT,EAAAA,cAAc,EAAEjB,SAAS,CAAC2B,MADN;AAEpBjB,EAAAA,QAAQ,EAAEV,SAAS,CAAC4B,IAFA;AAGpBhB,EAAAA,KAAK,EAAEZ,SAAS,CAAC2B,MAHG;AAIpBhB,EAAAA,IAAI,EAAEX,SAAS,CAAC6B;AAJI,CAAtB;AAOAvB,SAAS,CAACwB,YAAV,GAAyB,EAAzB;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQvB,KAAR,KAAkB;AAAA,QAChCE,IADgC,GACvBF,KADuB,CAChCE,IADgC;AAExC,QAAMsB,eAAe,GAAG9B,UAAU,CAACQ,IAAD,CAAV,CAAiBuB,WAAzC;AACA,SAAO;AACLjB,IAAAA,cAAc,EAAEgB,eAAe,CAACE,cAAhB,CACdH,KAAK,CAACI,qBAAN,CAA4BhC,KAAK,CAACiC,2BAAlC,CADc,CADX;AAILC,IAAAA,UAAU,EAAEN,KAAK,CAACO,gBAAN,CAAuBD;AAJ9B,GAAP;AAMD,CATD;;AAWA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACL/B,IAAAA,QAAQ,EAAE,CAACgC,IAAD,EAAOC,IAAP,KAAgB;AACxBF,MAAAA,QAAQ,CAACvC,iBAAiB,CAACwC,IAAD,EAAOC,IAAP,CAAlB,CAAR;AACD,KAHI;AAILC,IAAAA,UAAU,EAAEF,IAAI,IAAI;AAClBD,MAAAA,QAAQ,CAACvC,iBAAiB,CAACwC,IAAD,CAAlB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,eAAe3C,UAAU,CACvBD,OAAO,CACLiC,eADK,EAELS,kBAFK,CAAP,CAGElC,SAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport { getActionsFormate } from '../../utils/common';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants';\nimport DataNotFound from '../../components/DataNotFound/DataNotFound';\nimport './Analytics.scss';\n\nclass Analytics extends React.Component {\n  componentDidMount() {\n    const { makeCall, page, match } = this.props;\n    const { actions } = pageConfig[page];\n    const { fetchAssetsCount } = actions;\n    const { params } = match;\n    if (fetchAssetsCount) {\n      makeCall(fetchAssetsCount, { ...params });\n    }\n  }\n\n  render() {\n    const { AssetTypeCount } = this.props;\n    let AssetTypeAnalytics = '';\n    if (AssetTypeCount && Object.keys(AssetTypeCount).length > 0) {\n      const { formatedData, size, isAllEmpty, legend } = AssetTypeCount;\n      AssetTypeAnalytics = (\n        <div className=\"row\">\n          <div className=\"col col-2\" />\n          <div className=\"card col col-8\">\n            <span className=\"assetsCountOnAssetType pt-2 pb-2\">\n              Assets Count in Asset Type\n            </span>\n            {!isAllEmpty ? (\n              <C3Chart\n                title=\"Assets\"\n                size={size}\n                data={formatedData}\n                legend={legend}\n              />\n            ) : (\n              <DataNotFound name=\"Assets Count\" />\n            )}\n          </div>\n          <div className=\"col col-2\" />\n        </div>\n      );\n    }\n    return (<div>\n      <div className=\"row\">\n        <div className=\"col col-2\" />\n        <div className=\"col col-8\" >\n          <div className=\"row mb-3 mt-3\">\n            <div className=\"col col-6 border mr-3\">AssetCount</div>\n            <div className=\"col col-5 border\">AssetCount</div>\n          </div>\n        </div>\n        <div className=\"col col-2\" />\n      </div>\n      {AssetTypeAnalytics}\n    </div>);\n  }\n}\n\nAnalytics.propTypes = {\n  AssetTypeCount: PropTypes.object,\n  makeCall: PropTypes.func,\n  match: PropTypes.object,\n  page: PropTypes.string\n};\n\nAnalytics.defaultProps = {};\nconst mapStateToProps = (state, props) => {\n  const { page } = props;\n  const formateFunction = pageConfig[page].formateFunc;\n  return {\n    AssetTypeCount: formateFunction.assetTypeCount(\n      state.analyticsReducerStore[STORE.ASSETS_COUNT_WRT_ASSET_TYPE]\n    ),\n    inProgress: state.listReducerStore.inProgress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Analytics)\n);\n"]},"metadata":{},"sourceType":"module"}