{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomButton/CustomButton.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport './CustomButton.scss';\n\nconst CustomButton = props => {\n  const disabled = props.disabled,\n        isLoading = props.isLoading,\n        submitFunction = props.submitFunction,\n        text = props.text,\n        id = props.id,\n        type = props.type,\n        className = props.className,\n        isBlock = props.isBlock;\n  const isDisabled = disabled || isLoading;\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: isBlock,\n    id: id,\n    type: type,\n    className: \"float-right\",\n    disabled: isDisabled,\n    onClick: eve => submitFunction(eve),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, isLoading && React.createElement(ButtonLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), !isLoading && text));\n};\n\nCustomButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  submitFunction: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  isBlock: PropTypes.bool.isRequired\n};\nexport default CustomButton;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomButton/CustomButton.jsx"],"names":["React","PropTypes","Button","ButtonLoader","CustomButton","props","disabled","isLoading","submitFunction","text","id","type","className","isBlock","isDisabled","eve","propTypes","bool","isRequired","func","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,QAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,QACnBC,QADmB,GACwDD,KADxD,CACnBC,QADmB;AAAA,QACTC,SADS,GACwDF,KADxD,CACTE,SADS;AAAA,QACEC,cADF,GACwDH,KADxD,CACEG,cADF;AAAA,QACkBC,IADlB,GACwDJ,KADxD,CACkBI,IADlB;AAAA,QACwBC,EADxB,GACwDL,KADxD,CACwBK,EADxB;AAAA,QAC4BC,IAD5B,GACwDN,KADxD,CAC4BM,IAD5B;AAAA,QACkCC,SADlC,GACwDP,KADxD,CACkCO,SADlC;AAAA,QAC6CC,OAD7C,GACwDR,KADxD,CAC6CQ,OAD7C;AAE1B,QAAMC,UAAU,GAAGR,QAAQ,IAAIC,SAA/B;AACA,SACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEM,OADX;AAEI,IAAA,EAAE,EAAEH,EAFR;AAGI,IAAA,IAAI,EAAEC,IAHV;AAII,IAAA,SAAS,EAAE,aAJf;AAKI,IAAA,QAAQ,EAAEG,UALd;AAMI,IAAA,OAAO,EAAEC,GAAG,IAAEP,cAAc,CAACO,GAAD,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQSR,SAAS,IAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARtB,EASS,CAACA,SAAD,IAAcE,IATvB,CADJ,CADJ;AAeH,CAlBD;;AAoBAL,YAAY,CAACY,SAAb,GAAyB;AACtBV,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAAV,CAAeC,UADH;AAEtBX,EAAAA,SAAS,EAAEN,SAAS,CAACgB,IAAV,CAAeC,UAFJ;AAGtBV,EAAAA,cAAc,EAAEP,SAAS,CAACkB,IAAV,CAAeD,UAHT;AAItBT,EAAAA,IAAI,EAAER,SAAS,CAACmB,MAAV,CAAiBF,UAJD;AAKtBR,EAAAA,EAAE,EAAET,SAAS,CAACmB,MAAV,CAAiBF,UALC;AAMtBP,EAAAA,IAAI,EAAEV,SAAS,CAACmB,MAAV,CAAiBF,UAND;AAOtBN,EAAAA,SAAS,EAAEX,SAAS,CAACmB,MAAV,CAAiBF,UAPN;AAQtBL,EAAAA,OAAO,EAAEZ,SAAS,CAACgB,IAAV,CAAeC;AARF,CAAzB;AAWA,eAAed,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button } from 'react-bootstrap';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport './CustomButton.scss';\n\nconst CustomButton = props => {\n    const {disabled, isLoading, submitFunction, text, id, type, className, isBlock} = props;\n    const isDisabled = disabled || isLoading;\n    return (\n        <div className=\"\" >\n            <Button\n                block={isBlock}\n                id={id}\n                type={type}\n                className={\"float-right\"}\n                disabled={isDisabled}\n                onClick={eve=>submitFunction(eve)}\n                >\n                    {isLoading && <ButtonLoader />}\n                    {!isLoading && text}\n            </Button>\n      </div>\n    )\n}\n\nCustomButton.propTypes = {\n   disabled: PropTypes.bool.isRequired,\n   isLoading: PropTypes.bool.isRequired,\n   submitFunction: PropTypes.func.isRequired,\n   text: PropTypes.string.isRequired,\n   id: PropTypes.string.isRequired,\n   type: PropTypes.string.isRequired,\n   className: PropTypes.string.isRequired,\n   isBlock: PropTypes.bool.isRequired\n};\n\nexport default CustomButton;"]},"metadata":{},"sourceType":"module"}