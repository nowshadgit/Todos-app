{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail, getErrorResMsg } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { STORE, ROLES, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\n\nclass AddEditUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.FIRST_NAME_FIELD_ID = 'aeu-fname';\n    this.LAST_NAME_FIELD_ID = 'aeu-lname';\n    this.EMAIL_FIELD_ID = 'aeu-email';\n    this.DEPARTMENTS_FIELD_ID = 'select-departments';\n    this.USER_ROLES_ID = 'user-roles';\n\n    this.validateForm = () => {\n      const _checkEmail = checkEmail(this.state[this.EMAIL_FIELD_ID], 'Email'),\n            _checkEmail2 = _slicedToArray(_checkEmail, 2),\n            emailValidity = _checkEmail2[0],\n            emailErrors = _checkEmail2[1];\n\n      const formValidity = emailValidity;\n\n      const formErrors = _objectSpread({}, emailErrors);\n\n      this.setState({\n        formValidity,\n        formErrors\n      });\n      return formValidity;\n    };\n\n    this.enableSubmit = (email, firstName, lastName, departments, userRoles) => {\n      const disabled = !(email.length > 0 && firstName.length > 0 && lastName.length > 0 && // departments.length > 0 &&\n      userRoles.length > 0);\n\n      if (this.props.errorCode) {\n        const type = ACTIONS.USERS.this.props.reset(type);\n        this.setState({\n          errorCode: ''\n        });\n      }\n\n      this.setState({\n        disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.handleDepartments = event => {\n      this.setState({\n        [this.DEPARTMENTS_FIELD_ID]: event || [],\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.handleRoles = event => {\n      this.setState({\n        [this.USER_ROLES_ID]: event || [],\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.getDepartmentIds = departments => {\n      const departIds = departments.map(depart => {\n        return depart.value;\n      });\n      return departIds;\n    };\n\n    this.getUserRoleIds = userRoles => {\n      const userRolesIds = userRoles.map(role => {\n        return ROLES.indexOf(role);\n      });\n      return userRolesIds;\n    };\n\n    this.getRolesFormate = () => {\n      const userRoles = ROLES.map(role => {\n        return {\n          value: role,\n          label: role\n        };\n      });\n      return userRoles;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n\n      if (this.validateForm()) {\n        const data = {\n          email: this.state[this.EMAIL_FIELD_ID],\n          first_name: this.state[this.FIRST_NAME_FIELD_ID],\n          last_name: this.state[this.LAST_NAME_FIELD_ID],\n          department: [1, 2],\n          // this.getDepartmentIds(this.state[this.DEPARTMENTS_FIELD_ID]),\n          user_roles: this.getUserRoleIds(this.state[this.USER_ROLES_ID])\n        };\n        const type = pageConfig[this.props.page].actions.postData;\n        this.props.submit(type, {\n          data,\n          props: _objectSpread({}, this.props)\n        });\n      }\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.DEPARTMENTS_FIELD_ID]: [],\n      [this.USER_ROLES_ID]: [],\n      errorCode: '',\n      disabled: true\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          getDepartments = _this$props.getDepartments,\n          page = _this$props.page,\n          getUserData = _this$props.getUserData,\n          match = _this$props.match;\n    const dtype = pageConfig[page].actions.getDepartments;\n    getDepartments(dtype);\n    const utype = pageConfig[page].actions.fetchUser;\n\n    if (utype) {\n      const params = match.params;\n      getUserData(utype, _objectSpread({}, params));\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const errorCode = nextProps.errorCode;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_USER);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    return prevState;\n  }\n\n  render() {\n    const page = this.props.page;\n    const pageTitle = pageConfig[page].pageTitle;\n    return React.createElement(\"div\", {\n      className: \"add-edit-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(AddEditUserForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleDepartments: this.handleDepartments,\n      firstNameFieldId: this.FIRST_NAME_FIELD_ID,\n      lastNameFieldId: this.LAST_NAME_FIELD_ID,\n      emailFieldId: this.EMAIL_FIELD_ID,\n      firstNameFieldValue: this.state[this.FIRST_NAME_FIELD_ID],\n      lastNameFieldValue: this.state[this.LAST_NAME_FIELD_ID],\n      emailFieldValue: this.state[this.EMAIL_FIELD_ID],\n      departmentsFieldValue: this.props.userDepartments,\n      departmentsFieldId: this.DEPARTMENTS_FIELD_ID,\n      handleChangeRoles: this.handleRoles,\n      userRolesId: this.USER_ROLES_ID,\n      userRoleValues: this.getRolesFormate(),\n      formErrors: this.state.formErrors,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  userDepartments: PropTypes.array.isRequired,\n  // userData: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  getDepartments: PropTypes.func.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired\n};\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  userDepartments: state.addEditUserReducerStore[STORE.GET_USER_DEPARTMENTS],\n  userData: state.DetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDepartments: (dtype, data) => {\n      dispatch(getActionsFormate(dtype, data));\n    },\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditUser));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx"],"names":["React","connect","withRouter","PropTypes","AddEditUserForm","checkEmail","getErrorResMsg","PageHeader","pageConfig","getActionsFormate","STORE","ROLES","PAGE","ACTIONS","AddEditUser","Component","constructor","props","FIRST_NAME_FIELD_ID","LAST_NAME_FIELD_ID","EMAIL_FIELD_ID","DEPARTMENTS_FIELD_ID","USER_ROLES_ID","validateForm","state","emailValidity","emailErrors","formValidity","formErrors","setState","enableSubmit","email","firstName","lastName","departments","userRoles","disabled","length","errorCode","type","USERS","this","reset","handleChange","event","target","id","value","handleDepartments","handleRoles","getDepartmentIds","departIds","map","depart","getUserRoleIds","userRolesIds","role","indexOf","getRolesFormate","label","handleSubmit","preventDefault","data","first_name","last_name","department","user_roles","page","actions","postData","submit","componentDidMount","getDepartments","getUserData","match","dtype","utype","fetchUser","params","getDerivedStateFromProps","nextProps","prevState","errMsg","ADD_USER","render","pageTitle","userDepartments","propTypes","string","isRequired","array","object","func","defaultProps","mapStateToProps","addEditUserReducerStore","GET_USER_DEPARTMENTS","userData","DetailsReducerStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail, getErrorResMsg } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { STORE, ROLES, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\n\nclass AddEditUser extends React.Component {\n  FIRST_NAME_FIELD_ID = 'aeu-fname';\n\n  LAST_NAME_FIELD_ID = 'aeu-lname';\n\n  EMAIL_FIELD_ID = 'aeu-email';\n\n  DEPARTMENTS_FIELD_ID = 'select-departments';\n\n  USER_ROLES_ID = 'user-roles';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.DEPARTMENTS_FIELD_ID]: [],\n      [this.USER_ROLES_ID]: [],\n      errorCode: '',\n      disabled: true\n    };\n  }\n\n  componentDidMount() {\n    const { getDepartments, page, getUserData, match } = this.props;\n    const dtype = pageConfig[page].actions.getDepartments;\n    getDepartments(dtype);\n    const utype = pageConfig[page].actions.fetchUser;\n    if (utype) {\n      const { params } = match;\n      getUserData(utype, { ...params });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { errorCode } = nextProps;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_USER);\n      return { formErrors: errMsg, errorCode };\n    }\n    return prevState;\n  }\n\n  validateForm = () => {\n    const [emailValidity, emailErrors] = checkEmail(\n      this.state[this.EMAIL_FIELD_ID],\n      'Email'\n    );\n    const formValidity = emailValidity;\n    const formErrors = { ...emailErrors };\n\n    this.setState({ formValidity, formErrors });\n\n    return formValidity;\n  };\n\n  enableSubmit = (email, firstName, lastName, departments, userRoles) => {\n    const disabled = !(\n      email.length > 0 &&\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      // departments.length > 0 &&\n      userRoles.length > 0\n    );\n\n    if(this.props.errorCode){\n      const type = ACTIONS.USERS.\n      this.props.reset(type);\n      this.setState({ errorCode: '' });\n    }\n    this.setState({ disabled });\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.DEPARTMENTS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  handleDepartments = event => {\n    this.setState(\n      {\n        [this.DEPARTMENTS_FIELD_ID]: event || [],\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.DEPARTMENTS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  handleRoles = event => {\n    this.setState(\n      {\n        [this.USER_ROLES_ID]: event || [],\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.DEPARTMENTS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  getDepartmentIds = departments => {\n    const departIds = departments.map(depart => {\n      return depart.value;\n    });\n    return departIds;\n  };\n\n  getUserRoleIds = userRoles => {\n    const userRolesIds = userRoles.map(role => {\n      return ROLES.indexOf(role);\n    });\n    return userRolesIds;\n  };\n\n  getRolesFormate = () => {\n    const userRoles = ROLES.map(role => {\n      return { value: role, label: role };\n    });\n    return userRoles;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n    if (this.validateForm()) {\n      const data = {\n        email: this.state[this.EMAIL_FIELD_ID],\n        first_name: this.state[this.FIRST_NAME_FIELD_ID],\n        last_name: this.state[this.LAST_NAME_FIELD_ID],\n        department: [1, 2],\n        // this.getDepartmentIds(this.state[this.DEPARTMENTS_FIELD_ID]),\n        user_roles: this.getUserRoleIds(this.state[this.USER_ROLES_ID])\n      };\n      const type = pageConfig[this.props.page].actions.postData;\n      this.props.submit(type, { data, props: { ...this.props } });\n    }\n  };\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle } = pageConfig[page];\n    return (\n      <div className=\"add-edit-user\">\n        <PageHeader title={pageTitle} />\n        <AddEditUserForm\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          handleDepartments={this.handleDepartments}\n          firstNameFieldId={this.FIRST_NAME_FIELD_ID}\n          lastNameFieldId={this.LAST_NAME_FIELD_ID}\n          emailFieldId={this.EMAIL_FIELD_ID}\n          firstNameFieldValue={this.state[this.FIRST_NAME_FIELD_ID]}\n          lastNameFieldValue={this.state[this.LAST_NAME_FIELD_ID]}\n          emailFieldValue={this.state[this.EMAIL_FIELD_ID]}\n          departmentsFieldValue={this.props.userDepartments}\n          departmentsFieldId={this.DEPARTMENTS_FIELD_ID}\n          handleChangeRoles={this.handleRoles}\n          userRolesId={this.USER_ROLES_ID}\n          userRoleValues={this.getRolesFormate()}\n          formErrors={this.state.formErrors}\n          disabled={this.state.disabled}\n        />\n      </div>\n    );\n  }\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  userDepartments: PropTypes.array.isRequired,\n  // userData: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  getDepartments: PropTypes.func.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired\n};\n\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  userDepartments: state.addEditUserReducerStore[STORE.GET_USER_DEPARTMENTS],\n  userData: state.DetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDepartments: (dtype, data) => {\n      dispatch(getActionsFormate(dtype, data));\n    },\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddEditUser)\n);\n"]},"metadata":{},"sourceType":"module"}