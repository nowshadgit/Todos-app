{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { STORE } from '../../utils/constants';\nimport { getUserCard, getOrgUnits, getAssetAttributes, getAssetTypes } from '../../utils/utils';\nconst initialState = {\n  [STORE.USER_DETAILS]: {},\n  [STORE.USER_LIST]: {},\n  [STORE.ORG_UNITS_LIST]: {},\n  [STORE.ASSET_ATTRIBUTES]: {},\n  [STORE.ASSET_TYPES]: {}\n};\n\nconst listReducerStore = (stateParam, {\n  type,\n  payload\n}) => {\n  const state = stateParam || initialState;\n\n  switch (type) {\n    case ACTIONS.USERS.GET_USER_LIST:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.USERS.GET_USER_LIST_SUCCESS:\n      {\n        const data = getUserCard(payload);\n        return _objectSpread({}, state, {\n          [STORE.USER_LIST]: data,\n          inProgress: false\n        });\n      }\n\n    case ACTIONS.USERS.GET_USER_LIST_FAIL:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.USERS.ADD_USER:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.USERS.ADD_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.USERS.ADD_USER_FAIL:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.USERS.UPDATE_USER:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.USERS.UPDATE_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.USERS.UPDATE_USER_FAIL:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_SUCCESS:\n      {\n        const data = getOrgUnits(payload);\n        return _objectSpread({}, state, {\n          [STORE.ORG_UNITS_LIST]: data,\n          inProgress: false\n        });\n      }\n\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_SUCCESS:\n      {\n        const data = getOrgUnits(payload.child);\n        return _objectSpread({}, state, {\n          title: payload.name,\n          [STORE.ORG_UNITS_LIST]: data,\n          inProgress: false\n        });\n      }\n\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_SUCCESS:\n      {\n        const data = getAssetAttributes(payload);\n        return _objectSpread({}, state, {\n          [STORE.ASSET_ATTRIBUTES]: data,\n          inProgress: false\n        });\n      }\n\n    case ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL:\n      return _objectSpread({}, state, {\n        inProgress: false\n      });\n\n    case ACTIONS.ASSET_TYPES.GET_ASSET_TYPES:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_SUCCESS:\n      {\n        const data = getAssetTypes(payload);\n        return _objectSpread({}, state, {\n          [STORE.ASSET_TYPES]: data,\n          inProgress: false\n        });\n      }\n\n    case ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL:\n      return _objectSpread({}, state, {\n        inProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducerStore;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.reducer.js"],"names":["ACTIONS","STORE","getUserCard","getOrgUnits","getAssetAttributes","getAssetTypes","initialState","USER_DETAILS","USER_LIST","ORG_UNITS_LIST","ASSET_ATTRIBUTES","ASSET_TYPES","listReducerStore","stateParam","type","payload","state","USERS","GET_USER_LIST","inProgress","GET_USER_LIST_SUCCESS","data","GET_USER_LIST_FAIL","ADD_USER","ADD_USER_SUCCESS","ADD_USER_FAIL","UPDATE_USER","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","ORG_UNITS","GET_ORG_UNITS_LIST","GET_ORG_UNITS_LIST_SUCCESS","GET_ORG_UNITS_LIST_FAIL","GET_ORG_UNITS_DETAILS","GET_ORG_UNITS_DETAILS_SUCCESS","child","title","name","GET_ORG_UNITS_DETAILS_FAIL","GET_ASSET_ATTRIBUTES","GET_ASSET_ATTRIBUTES_SUCCESS","GET_ASSET_ATTRIBUTES_FAIL","GET_ASSET_TYPES","GET_ASSET_TYPES_SUCCESS","GET_ASSET_TYPES_FAIL"],"mappings":"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","sourcesContent":["import ACTIONS from '../../apiConfig/actions.constants';\nimport { STORE } from '../../utils/constants';\nimport {\n  getUserCard,\n  getOrgUnits,\n  getAssetAttributes,\n  getAssetTypes\n} from '../../utils/utils';\n\nconst initialState = {\n  [STORE.USER_DETAILS]: {},\n  [STORE.USER_LIST]: {},\n  [STORE.ORG_UNITS_LIST]: {},\n  [STORE.ASSET_ATTRIBUTES]: {},\n  [STORE.ASSET_TYPES]: {}\n};\n\nconst listReducerStore = (stateParam, { type, payload }) => {\n  const state = stateParam || initialState;\n  switch (type) {\n    case ACTIONS.USERS.GET_USER_LIST:\n      return { ...state, inProgress: true };\n    case ACTIONS.USERS.GET_USER_LIST_SUCCESS: {\n      const data = getUserCard(payload);\n      return { ...state, [STORE.USER_LIST]: data, inProgress: false };\n    }\n    case ACTIONS.USERS.GET_USER_LIST_FAIL:\n      return { ...state, data: payload, inProgress: false };\n\n    case ACTIONS.USERS.ADD_USER:\n      return { ...state, data: payload, inProgress: false };\n    case ACTIONS.USERS.ADD_USER_SUCCESS:\n      return { ...state, data: payload, inProgress: false };\n    case ACTIONS.USERS.ADD_USER_FAIL:\n      return { ...state, data: payload, inProgress: false };\n\n    case ACTIONS.USERS.UPDATE_USER:\n      return { ...state, data: payload, inProgress: false };\n    case ACTIONS.USERS.UPDATE_USER_SUCCESS:\n      return { ...state, data: payload, inProgress: false };\n    case ACTIONS.USERS.UPDATE_USER_FAIL:\n      return { ...state, data: payload, inProgress: false };\n\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST:\n      return { ...state, inProgress: true };\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_SUCCESS: {\n      const data = getOrgUnits(payload);\n      return { ...state, [STORE.ORG_UNITS_LIST]: data, inProgress: false };\n    }\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL:\n      return { ...state, data: payload, inProgress: false };\n\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS:\n      return { ...state, inProgress: true };\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_SUCCESS: {\n      const data = getOrgUnits(payload.child);\n      return {\n        ...state,\n        title: payload.name,\n        [STORE.ORG_UNITS_LIST]: data,\n        inProgress: false\n      };\n    }\n    case ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL:\n      return { ...state, data: payload, inProgress: false };\n\n    case ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES:\n      return { ...state, inProgress: true };\n    case ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_SUCCESS: {\n      const data = getAssetAttributes(payload);\n      return { ...state, [STORE.ASSET_ATTRIBUTES]: data, inProgress: false };\n    }\n    case ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL:\n      return { ...state, inProgress: false };\n\n    case ACTIONS.ASSET_TYPES.GET_ASSET_TYPES:\n      return { ...state, inProgress: true };\n    case ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_SUCCESS: {\n      const data = getAssetTypes(payload);\n      return { ...state, [STORE.ASSET_TYPES]: data, inProgress: false };\n    }\n    case ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL:\n      return { ...state, inProgress: false };\n    default:\n      return state;\n  }\n};\n\nexport default listReducerStore;\n"]},"metadata":{},"sourceType":"module"}