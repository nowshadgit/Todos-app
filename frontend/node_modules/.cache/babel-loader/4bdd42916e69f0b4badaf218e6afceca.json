{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\n\nfunction* createUser(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.USER, action.data.data);\n\n    if (response.status === 201 || response.status === 200) {\n      const data = {\n        user_id: 3,\n        group_id: action.data.data.userRoles\n      };\n      const rolesResponse = yield call(window.axios.putData, FOOTPRINTS_API.ASSOCIATE_ROLES, data);\n\n      if (rolesResponse.status === 200 || rolesResponse.status === 204) {\n        action.data.props.history.goBack();\n        yield put({\n          type: ACTIONS.USERS.ADD_USER_SUCCESS,\n          payload: response.data\n        });\n        yield put({\n          type: ACTIONS.ALERT_MESSAGE.ADD_SUCCESS\n        });\n      } else {\n        yield put({\n          type: ACTIONS.ALERT_MESSAGE.FAIL,\n          payload: _objectSpread({}, response.data, {}, action.data)\n        });\n      }\n    } else {\n      yield put({\n        type: ACTIONS.USERS.ADD_USER_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.ADD_USER_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nfunction* updateUser(action) {\n  let response;\n\n  try {\n    const url = reverse(FOOTPRINTS_API.UPDATE_USER, _objectSpread({}, action.data.props.match.params));\n    response = yield call(window.axios.patchData, url, action.data.data);\n\n    if (response.status === 201 || response.status === 200) {\n      const data = {\n        user_id: 3,\n        group_id: action.data.data.userRoles\n      };\n      const rolesResponse = yield call(window.axios.putData, FOOTPRINTS_API.ASSOCIATE_ROLES, data);\n\n      if (rolesResponse.status === 200 || rolesResponse.status === 204) {\n        action.data.props.history.goBack();\n        yield put({\n          type: ACTIONS.USERS.UPDATE_USER_SUCCESS,\n          payload: response.data\n        });\n        yield put({\n          type: ACTIONS.ALERT_MESSAGE.UPDATE_SUCCESS\n        });\n      } else {\n        yield put({\n          type: ACTIONS.ALERT_MESSAGE.FAIL,\n          payload: _objectSpread({}, response.data, {}, action.data)\n        });\n      }\n    } else {\n      yield put({\n        type: ACTIONS.USERS.UPDATE_USER_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.UPDATE_USER_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nfunction* getUserDepartments(action) {\n  let response;\n\n  try {\n    const URL = \"\".concat(FOOTPRINTS_API.ORG_UNITS);\n    response = yield call(window.axios.getData, URL);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_DEPARTMENTS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_DEPARTMENTS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.GET_USER_DEPARTMENTS_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport { createUser, updateUser, getUserDepartments };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.saga.js"],"names":["call","put","reverse","ACTIONS","FOOTPRINTS_API","FOOTPRINTS_ROUTES","createUser","action","response","window","axios","postData","USER","data","status","user_id","group_id","userRoles","rolesResponse","putData","ASSOCIATE_ROLES","props","history","goBack","type","USERS","ADD_USER_SUCCESS","payload","ALERT_MESSAGE","ADD_SUCCESS","FAIL","ADD_USER_FAIL","e","updateUser","url","UPDATE_USER","match","params","patchData","UPDATE_USER_SUCCESS","UPDATE_SUCCESS","UPDATE_USER_FAIL","getUserDepartments","URL","ORG_UNITS","getData","GET_USER_DEPARTMENTS_SUCCESS","GET_USER_DEPARTMENTS_FAIL"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\n\nfunction* createUser(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.USER,\n      action.data.data\n    );\n\n    if (response.status === 201 || response.status === 200) {\n      const data = {\n        user_id: 3,\n        group_id: action.data.data.userRoles\n      };\n\n      const rolesResponse = yield call(\n        window.axios.putData,\n        FOOTPRINTS_API.ASSOCIATE_ROLES,\n        data\n      );\n\n      if (rolesResponse.status === 200 || rolesResponse.status === 204) {\n        action.data.props.history.goBack();\n        yield put({\n          type: ACTIONS.USERS.ADD_USER_SUCCESS,\n          payload: response.data\n        });\n        yield put({\n          type: ACTIONS.ALERT_MESSAGE.ADD_SUCCESS\n        });\n      } else {\n        yield put({\n          type: ACTIONS.ALERT_MESSAGE.FAIL,\n          payload: { ...response.data, ...action.data }\n        });\n      }\n    } else {\n      yield put({\n        type: ACTIONS.USERS.ADD_USER_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.ADD_USER_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nfunction* updateUser(action) {\n  let response;\n  try {\n    const url = reverse(FOOTPRINTS_API.UPDATE_USER, {\n      ...action.data.props.match.params\n    });\n    response = yield call(window.axios.patchData, url, action.data.data);\n\n    if (response.status === 201 || response.status === 200) {\n      const data = {\n        user_id: 3,\n        group_id: action.data.data.userRoles\n      };\n\n      const rolesResponse = yield call(\n        window.axios.putData,\n        FOOTPRINTS_API.ASSOCIATE_ROLES,\n        data\n      );\n\n      if (rolesResponse.status === 200 || rolesResponse.status === 204) {\n        action.data.props.history.goBack();\n        yield put({\n          type: ACTIONS.USERS.UPDATE_USER_SUCCESS,\n          payload: response.data\n        });\n        yield put({\n          type: ACTIONS.ALERT_MESSAGE.UPDATE_SUCCESS\n        });\n      } else {\n        yield put({\n          type: ACTIONS.ALERT_MESSAGE.FAIL,\n          payload: { ...response.data, ...action.data }\n        });\n      }\n    } else {\n      yield put({\n        type: ACTIONS.USERS.UPDATE_USER_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.UPDATE_USER_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nfunction* getUserDepartments(action) {\n  let response;\n  try {\n    const URL = `${FOOTPRINTS_API.ORG_UNITS}`;\n    response = yield call(window.axios.getData, URL);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_DEPARTMENTS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_DEPARTMENTS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.GET_USER_DEPARTMENTS_FAIL, payload: e });\n  }\n}\nexport { createUser, updateUser, getUserDepartments };\n"]},"metadata":{},"sourceType":"module"}