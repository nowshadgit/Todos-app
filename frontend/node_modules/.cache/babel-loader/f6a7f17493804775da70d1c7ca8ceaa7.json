{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* forgotPasswordSaga(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.FORGOT_PASSWORD, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* passwordResetSaga(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.PASSWORD_RESET, action.data, action.headers);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.PASSWORD_RESET_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.PASSWORD_RESET_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.PASSWORD_RESET.PASSWORD_RESET_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* tokenVerifyRequest(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.PASSWORD_RESET_VERIFY_TOKEN, action.data, action.headers);\n\n    if (response.status === 200 || response.status === 204) {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport { forgotPasswordSaga, passwordResetSaga, tokenVerifyRequest };","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/containers/PasswordReset/PasswordReset.saga.js"],"names":["call","put","ACTIONS","FOOTPRINTS_API","forgotPasswordSaga","action","response","window","axios","postData","FORGOT_PASSWORD","data","status","type","PASSWORD_RESET","FORGOT_PASSWORD_SUCCESS","payload","FORGOT_PASSWORD_FAIL","e","passwordResetSaga","headers","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","tokenVerifyRequest","PASSWORD_RESET_VERIFY_TOKEN","VERIFY_TOKEN_SUCCESS","VERIFY_TOKEN_FAIL"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\n\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* forgotPasswordSaga(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.FORGOT_PASSWORD,\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* passwordResetSaga(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.PASSWORD_RESET,\n      action.data,\n      action.headers\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.PASSWORD_RESET_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.PASSWORD_RESET_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.PASSWORD_RESET.PASSWORD_RESET_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* tokenVerifyRequest(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.PASSWORD_RESET_VERIFY_TOKEN,\n      action.data,\n      action.headers\n    );\n    if (response.status === 200 || response.status === 204) {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport { forgotPasswordSaga, passwordResetSaga, tokenVerifyRequest };\n"]},"metadata":{},"sourceType":"module"}