{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/AlertMessage/AlertMessage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ERROR_CODES from '../../utils/errorCodes';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { ALERT_MESSAAGEs } from '../../utils/constants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getActionsFormate } from '../../utils/common';\n\nclass AlertMessage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.notify = (status, errorCode) => {\n      console.log(\"status\", status);\n\n      if (status === ACTIONS.ALERT_MESSAGE.ADD_SUCCESS) {\n        toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n\n      if (status === ACTIONS.ALERT_MESSAGE.UPDATE_SUCCESS) {\n        toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n\n      if (status === ACTIONS.ALERT_MESSAGE.FAIL) {\n        console.log(\"comming here:\", status);\n        toast.error(ERROR_CODES[\"LIST\"][errorCode], {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    };\n  }\n\n  render() {\n    const AlertMessageStore = this.props.AlertMessageStore;\n    const status = AlertMessageStore.status,\n          errorCode = AlertMessageStore.errorCode;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.notify(status, errorCode), React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAlertMessage.propTypes = {\n  status: PropTypes.string.isRequired,\n  errorCode: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  AlertMessageStore: state.AlertMessageReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AlertMessage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/AlertMessage/AlertMessage.jsx"],"names":["React","PropTypes","ToastContainer","toast","ERROR_CODES","ACTIONS","ALERT_MESSAAGEs","connect","withRouter","getActionsFormate","AlertMessage","Component","notify","status","errorCode","console","log","ALERT_MESSAGE","ADD_SUCCESS","success","position","POSITION","TOP_RIGHT","UPDATE_SUCCESS","FAIL","error","render","AlertMessageStore","props","propTypes","string","isRequired","number","mapStateToProps","state","AlertMessageReducerStore","mapDispatchToProps","dispatch","resetState","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AACA,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACvCC,MADuC,GAC9B,CAACC,MAAD,EAASC,SAAT,KAAsB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;;AAEA,UAAGA,MAAM,KAAKR,OAAO,CAACY,aAAR,CAAsBC,WAApC,EAAgD;AAC5Cf,QAAAA,KAAK,CAACgB,OAAN,CAAcb,eAAe,CAACD,OAAO,CAACY,aAAR,CAAsBC,WAAvB,CAA7B,EAAkE;AAC9DE,UAAAA,QAAQ,EAAEjB,KAAK,CAACkB,QAAN,CAAeC;AADqC,SAAlE;AAGH;;AACD,UAAGT,MAAM,KAAKR,OAAO,CAACY,aAAR,CAAsBM,cAApC,EAAmD;AAC/CpB,QAAAA,KAAK,CAACgB,OAAN,CAAcb,eAAe,CAACD,OAAO,CAACY,aAAR,CAAsBC,WAAvB,CAA7B,EAAkE;AAC9DE,UAAAA,QAAQ,EAAEjB,KAAK,CAACkB,QAAN,CAAeC;AADqC,SAAlE;AAGH;;AACD,UAAGT,MAAM,KAAKR,OAAO,CAACY,aAAR,CAAsBO,IAApC,EAAyC;AACrCT,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,MAA7B;AACAV,QAAAA,KAAK,CAACsB,KAAN,CAAYrB,WAAW,CAAC,MAAD,CAAX,CAAoBU,SAApB,CAAZ,EAA4C;AACxCM,UAAAA,QAAQ,EAAEjB,KAAK,CAACkB,QAAN,CAAeC;AADe,SAA5C;AAGH;AAEJ,KArBsC;AAAA;;AAsBvCI,EAAAA,MAAM,GAAG;AAAA,UACGC,iBADH,GACyB,KAAKC,KAD9B,CACGD,iBADH;AAAA,UAEGd,MAFH,GAEyBc,iBAFzB,CAEGd,MAFH;AAAA,UAEWC,SAFX,GAEyBa,iBAFzB,CAEWb,SAFX;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,MAAL,CAAYC,MAAZ,EAAoBC,SAApB,CADL,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA/BsC;;AAmC3CJ,YAAY,CAACmB,SAAb,GAAyB;AACrBhB,EAAAA,MAAM,EAAEZ,SAAS,CAAC6B,MAAV,CAAiBC,UADJ;AAErBjB,EAAAA,SAAS,EAAEb,SAAS,CAAC+B,MAAV,CAAiBD;AAFP,CAAzB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,iBAAiB,EAAEO,KAAK,CAACC;AADK,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACLC,IAAAA,UAAU,EAAEC,IAAI,IAAI;AAClBF,MAAAA,QAAQ,CAAC5B,iBAAiB,CAAC8B,IAAD,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CANH;;AAOA,eAAe/B,UAAU,CACrBD,OAAO,CACL0B,eADK,EAELG,kBAFK,CAAP,CAGE1B,YAHF,CADqB,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ERROR_CODES from '../../utils/errorCodes';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { ALERT_MESSAAGEs } from '../../utils/constants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getActionsFormate } from '../../utils/common';\nclass AlertMessage extends React.Component {\n    notify = (status, errorCode) =>{\n        console.log(\"status\", status);\n        \n        if(status === ACTIONS.ALERT_MESSAGE.ADD_SUCCESS){\n            toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n        if(status === ACTIONS.ALERT_MESSAGE.UPDATE_SUCCESS){\n            toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n        if(status === ACTIONS.ALERT_MESSAGE.FAIL){\n            console.log(\"comming here:\", status);\n            toast.error(ERROR_CODES[\"LIST\"][errorCode], {\n                position: toast.POSITION.TOP_RIGHT,\n            });\n        }\n\n    };\n    render() {\n        const { AlertMessageStore } = this.props;\n        const { status, errorCode } = AlertMessageStore;\n        return (\n            <div>\n                {this.notify(status, errorCode)}\n                <ToastContainer />\n            </div>\n        )\n    }\n}\n\n\nAlertMessage.propTypes = {\n    status: PropTypes.string.isRequired,\n    errorCode: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n    AlertMessageStore: state.AlertMessageReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      resetState: type => {\n        dispatch(getActionsFormate(type));\n      }\n    };\n  };\nexport default withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(AlertMessage)\n  );"]},"metadata":{},"sourceType":"module"}