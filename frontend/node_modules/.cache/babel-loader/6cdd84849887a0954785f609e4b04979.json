{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\n\nconst Analytics = props => {\n  const data = {\n    columns: [['data1', 30], ['data2', 120]],\n    type: 'donut'\n  };\n  let size = {\n    // height: 200,\n    width: 500\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(C3Chart, {\n    title: \"Assets\",\n    data: data,\n    size: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n};\n\nAnalytics.propTypes = {\n  analyticsStore: PropTypes.object.isRequired\n};\nAnalytics.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  analyticsStore: state.analyticsReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Analytics));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx"],"names":["React","connect","withRouter","PropTypes","PageHeader","C3Chart","Analytics","props","data","columns","type","size","width","propTypes","analyticsStore","object","isRequired","defaultProps","mapStateToProps","state","analyticsReducerStore","mapDispatchToProps","dispatch","makeCall","getActionsFormate","resetState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,WAAP;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,IAAI,GAAE;AACVC,IAAAA,OAAO,EAAE,CACL,CAAC,OAAD,EAAU,EAAV,CADK,EAEL,CAAC,OAAD,EAAU,GAAV,CAFK,CADC;AAKVC,IAAAA,IAAI,EAAG;AALG,GAAZ;AAOF,MAAIC,IAAI,GAAE;AACR;AACAC,IAAAA,KAAK,EAAE;AAFC,GAAV;AAIE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAwB,IAAA,IAAI,EAAEJ,IAA9B;AAAoC,IAAA,IAAI,EAAEG,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AASD,CArBD;;AAuBAL,SAAS,CAACO,SAAV,GAAsB;AACpBC,EAAAA,cAAc,EAAEX,SAAS,CAACY,MAAV,CAAiBC;AADb,CAAtB;AAIAV,SAAS,CAACW,YAAV,GAAyB,EAAzB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,cAAc,EAAEK,KAAK,CAACC;AADU,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,QAAQ,EAAE,CAACb,IAAD,EAAOF,IAAP,KAAgB;AACxBc,MAAAA,QAAQ,CAACE,iBAAiB,CAACd,IAAD,EAAOF,IAAP,CAAlB,CAAR;AACD,KAHI;AAILiB,IAAAA,UAAU,EAAEf,IAAI,IAAI;AAClBY,MAAAA,QAAQ,CAACE,iBAAiB,CAACd,IAAD,CAAlB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,eAAeR,UAAU,CACvBD,OAAO,CACLiB,eADK,EAELG,kBAFK,CAAP,CAGEf,SAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nconst Analytics = (props) => {\n  const data= {\n    columns: [\n        ['data1', 30],\n        ['data2', 120],\n    ],\n    type : 'donut',\n};\nlet size= {\n  // height: 200,\n  width: 500\n}\n  return (\n    <div>\n      {/* <PageHeader title=\"Assets\" actions={[]} /> */}\n      <div className=\"card\">\n        <C3Chart title=\"Assets\" data={data} size={size} />\n      </div>\n      \n    </div>\n  );\n};\n\nAnalytics.propTypes = {\n  analyticsStore: PropTypes.object.isRequired\n};\n\nAnalytics.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  analyticsStore: state.analyticsReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Analytics)\n);"]},"metadata":{},"sourceType":"module"}