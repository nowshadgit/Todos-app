{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport { FOOTPRINTS_COMPONENTS } from '../../config';\nimport { COMPONENTS } from '../../utils/constants';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page;\n    const components = pageConfig[page].components; // components && components.map(comp=>{\n    //   const type = FOOTPRINTS_COMPONENTS[comp].job.PAGE_DATA\n    //   makeCall(type);\n    // })\n  }\n\n  render() {\n    const page = this.props.page;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          actions = _pageConfig$page.actions,\n          components = _pageConfig$page.components;\n    let key = 0;\n    const Components = components && components.map(comp => {\n      const fpComp = FOOTPRINTS_COMPONENTS[comp];\n      const fpCompData = this.props[comp];\n      const Component = fpComp.component;\n      const actions = fpComp.actions;\n      key += 1;\n      return React.createElement(Component, Object.assign({}, this.props, {\n        key: key,\n        data: fpCompData,\n        actions: actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), Components, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  [COMPONENTS.DATA_CARD]: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  [COMPONENTS.USER]: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  [COMPONENTS.DATA_CARD]: state.listReducerStore[COMPONENTS.DATA_CARD],\n  [COMPONENTS.USER]: state.listReducerStore[COMPONENTS.USER]\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","FOOTPRINTS_COMPONENTS","COMPONENTS","ListPage","Component","componentDidMount","props","makeCall","page","components","render","pageTitle","actions","key","Components","map","comp","fpComp","fpCompData","component","propTypes","string","isRequired","func","DATA_CARD","oneOfType","array","object","USER","defaultProps","mapStateToProps","state","listReducerStore","mapDispatchToProps","dispatch","type","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport { FOOTPRINTS_COMPONENTS } from '../../config';\nimport { COMPONENTS } from '../../utils/constants';\n\n\nclass ListPage extends React.Component {\n  \n  componentDidMount() {\n    const { makeCall, page } = this.props;\n    const { components } = pageConfig[page];\n    \n    // components && components.map(comp=>{\n    //   const type = FOOTPRINTS_COMPONENTS[comp].job.PAGE_DATA\n    //   makeCall(type);\n    // })\n  }\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle, actions, components } = pageConfig[page];\n    let key = 0;\n    const Components = components && components.map(comp=>{\n      const fpComp = FOOTPRINTS_COMPONENTS[comp];\n      const fpCompData = this.props[comp];\n      const Component = fpComp.component;\n      const actions = fpComp.actions;\n      key += 1;\n     return(<Component {...this.props} key={key} data={fpCompData} actions={actions}/>)\n    })\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={actions} />\n        {Components}\n        <div>Hello world</div>\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  [COMPONENTS.DATA_CARD]: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired ,\n  [COMPONENTS.USER]: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  [COMPONENTS.DATA_CARD]: state.listReducerStore[COMPONENTS.DATA_CARD],\n  [COMPONENTS.USER]: state.listReducerStore[COMPONENTS.USER]\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}