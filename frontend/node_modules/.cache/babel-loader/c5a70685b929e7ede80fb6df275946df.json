{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { checkEmail } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\n\nclass AddEditUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.FIRST_NAME_FIELD_ID = \"aeu-fname\";\n    this.LAST_NAME_FIELD_ID = \"aeu-lname\";\n    this.EMAIL_FIELD_ID = \"aeu-email\";\n    this.DEPARTMENTS_FIELD_ID = \"select-departments\";\n\n    this.validateForm = () => {\n      const _checkEmail = checkEmail(this.state[this.EMAIL_FIELD_ID], 'Email'),\n            _checkEmail2 = _slicedToArray(_checkEmail, 2),\n            emailValidity = _checkEmail2[0],\n            emailErrors = _checkEmail2[1];\n\n      const formValidity = emailValidity;\n\n      const formErrors = _objectSpread({}, emailErrors);\n\n      this.setState({\n        formValidity,\n        formErrors\n      });\n      return formValidity;\n    };\n\n    this.enableSubmit = (email, firstName, lastName, departments) => {\n      const disabled = !(email.length > 0 && firstName.length > 0 && lastName.length && departments.length);\n      this.setState({\n        disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID]));\n    };\n\n    this.handleDepartments = event => {\n      let customEvent = {\n        target: {\n          id: this.DEPARTMENTS_FIELD_ID,\n          value: event\n        }\n      };\n      this.handleChange(customEvent);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n\n      if (this.validateForm()) {\n        const data = {\n          email: this.state[this.EMAIL_FIELD_ID],\n          first_name: this.state[this.FIRST_NAME_FIELD_ID],\n          last_name: this.state[this.LAST_NAME_FIELD_ID]\n        };\n        this.submit(data);\n      }\n    };\n\n    this.submit = data => {// this.setState({ errorCode: '' });\n      // this.props.dispatch({ type: ACTIONS.AUTH.LOGIN, data });\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.DEPARTMENTS_FIELD_ID]: [],\n      errorCode: '',\n      disabled: true\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          getDepartments = _this$props.getDepartments,\n          page = _this$props.page;\n    const type = pageConfig[page];\n    getDepartments(type);\n  }\n\n  render() {\n    const page = this.props.page;\n    const pageTitle = pageConfig[page].pageTitle;\n    return React.createElement(\"div\", {\n      className: \"add-edit-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(AddEditUserForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleDepartments: this.handleDepartments,\n      firstNameFieldId: this.FIRST_NAME_FIELD_ID,\n      lastNameFieldId: this.LAST_NAME_FIELD_ID,\n      emailFieldId: this.EMAIL_FIELD_ID,\n      firstNameFieldValue: this.state[this.FIRST_NAME_FIELD_ID],\n      lastNameFieldValue: this.state[this.LAST_NAME_FIELD_ID],\n      emailFieldValue: this.state[this.EMAIL_FIELD_ID],\n      departmentsFieldValue: this.state[this.DEPARTMENTS_FIELD_ID],\n      departmentsFieldId: this.DEPARTMENTS_FIELD_ID,\n      formErrors: this.formErrors,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDepartments: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditUser));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx"],"names":["React","AddEditUserForm","connect","withRouter","checkEmail","PageHeader","pageConfig","getActionsFormate","AddEditUser","Component","constructor","props","FIRST_NAME_FIELD_ID","LAST_NAME_FIELD_ID","EMAIL_FIELD_ID","DEPARTMENTS_FIELD_ID","validateForm","state","emailValidity","emailErrors","formValidity","formErrors","setState","enableSubmit","email","firstName","lastName","departments","disabled","length","handleChange","event","target","id","value","handleDepartments","customEvent","handleSubmit","preventDefault","data","first_name","last_name","submit","errorCode","componentDidMount","getDepartments","page","type","render","pageTitle","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { checkEmail } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\n\nclass AddEditUser extends React.Component{\n\n    FIRST_NAME_FIELD_ID = \"aeu-fname\";\n    LAST_NAME_FIELD_ID = \"aeu-lname\";\n    EMAIL_FIELD_ID = \"aeu-email\";\n    DEPARTMENTS_FIELD_ID = \"select-departments\"\n    constructor(props){\n        super(props);\n        this.state={\n            formErrors:{},\n            formValidity:false,\n            [this.FIRST_NAME_FIELD_ID] : '',\n            [this.LAST_NAME_FIELD_ID] : '',\n            [this.EMAIL_FIELD_ID] : '',\n            [this.DEPARTMENTS_FIELD_ID]:[],\n            errorCode:'',\n            disabled:true\n        }\n    }\n\n  componentDidMount(){\n      const {getDepartments, page} = this.props;\n      const type = pageConfig[page];\n      getDepartments(type);\n  }\n\n\n  validateForm = () => {\n    const [emailValidity, emailErrors] = checkEmail(\n      this.state[this.EMAIL_FIELD_ID],\n      'Email'\n    );\n    const formValidity = emailValidity;\n    const formErrors = { ...emailErrors };\n\n    this.setState({ formValidity, formErrors });\n\n    return formValidity;\n  };\n\n  enableSubmit = (email, firstName, lastName, departments) => {\n    const disabled = !(email.length > 0 && firstName.length > 0 && lastName.length && departments.length);\n    this.setState({ disabled });\n  };\n\n    handleChange = event => {\n        this.setState(\n          {\n            [event.target.id]: event.target.value,\n            formErrors: {}\n          },\n          () =>\n            this.enableSubmit(\n              this.state[this.EMAIL_FIELD_ID],\n              this.state[this.FIRST_NAME_FIELD_ID],\n              this.state[this.LAST_NAME_FIELD_ID],\n              this.state[this.DEPARTMENTS_FIELD_ID]\n            )\n        );\n      };\n\n      handleDepartments = event =>{\n        let customEvent = {target:{\n          id:this.DEPARTMENTS_FIELD_ID,\n          value:event\n        }}\n        this.handleChange(customEvent);\n      }\n      handleSubmit = event => {\n        event.preventDefault();\n        // this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n        if (this.validateForm()) {\n          const data = {\n            email: this.state[this.EMAIL_FIELD_ID],\n            first_name: this.state[this.FIRST_NAME_FIELD_ID],\n            last_name: this.state[this.LAST_NAME_FIELD_ID]\n          };\n          this.submit(data);\n        }\n      };\n    \n      submit = data => {\n        // this.setState({ errorCode: '' });\n        // this.props.dispatch({ type: ACTIONS.AUTH.LOGIN, data });\n      };\n\n    render(){\n        const {page} = this.props;\n        const {pageTitle} = pageConfig[page];\n        return (\n          <div className=\"add-edit-user\">\n            <PageHeader title={pageTitle} />\n            <AddEditUserForm \n                handleSubmit={this.handleSubmit}\n                handleChange={this.handleChange}\n                handleDepartments={this.handleDepartments}\n                firstNameFieldId={this.FIRST_NAME_FIELD_ID}\n                lastNameFieldId={this.LAST_NAME_FIELD_ID}\n                emailFieldId={this.EMAIL_FIELD_ID}\n                firstNameFieldValue={this.state[this.FIRST_NAME_FIELD_ID]}\n                lastNameFieldValue={this.state[this.LAST_NAME_FIELD_ID]}\n                emailFieldValue={this.state[this.EMAIL_FIELD_ID]}\n                departmentsFieldValue={this.state[this.DEPARTMENTS_FIELD_ID]}\n                departmentsFieldId={this.DEPARTMENTS_FIELD_ID}\n                formErrors={this.formErrors}\n                disabled={this.state.disabled}\n            />\n          </div>  \n        );\n    }\n}\n\nconst mapStateToProps =(state)=>({\n    \n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDepartments: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditUser));"]},"metadata":{},"sourceType":"module"}