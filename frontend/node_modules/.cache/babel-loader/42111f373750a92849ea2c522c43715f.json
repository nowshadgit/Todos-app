{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport listReducerStore from './ListPage.reducer';\nimport DataCards from '../../components/DataCards/DataCards';\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          actionType = _this$props.actionType,\n          page = _this$props.page;\n\n    if (actionType) {\n      const type = pageConfig[page][actionType].type;\n      makeCall(type);\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          actionType = _this$props2.actionType,\n          page = _this$props2.page;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          actions = _pageConfig$page.actions;\n\n    const _ref = actionType ? pageConfig[page][actionType] : () => {},\n          handler = _ref.handler;\n\n    const cardData = this.props.cardData;\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(DataCards, {\n      data: {\n        cardData,\n        handler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\n;\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  actionType: PropTypes.string.isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  cardData: state.listReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","listReducerStore","DataCards","ListPage","Component","constructor","props","componentDidMount","makeCall","actionType","page","type","render","pageTitle","actions","handler","cardData","propTypes","string","isRequired","defaultProps","mapStateToProps","state","data","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAED;;AAEDC,EAAAA,iBAAiB,GAAE;AAAA,wBACoB,KAAKD,KADzB;AAAA,UACVE,QADU,eACVA,QADU;AAAA,UACAC,UADA,eACAA,UADA;AAAA,UACYC,IADZ,eACYA,IADZ;;AAEjB,QAAGD,UAAH,EAAc;AAAA,YACLE,IADK,GACGb,UAAU,CAACY,IAAD,CAAV,CAAiBD,UAAjB,CADH,CACLE,IADK;AAEZH,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACD;AAEF;;AAEDC,EAAAA,MAAM,GAAE;AAAA,yBACsB,KAAKN,KAD3B;AAAA,UACEG,UADF,gBACEA,UADF;AAAA,UACcC,IADd,gBACcA,IADd;AAAA,6BAEyBZ,UAAU,CAACY,IAAD,CAFnC;AAAA,UAEEG,SAFF,oBAEEA,SAFF;AAAA,UAEaC,OAFb,oBAEaA,OAFb;;AAAA,iBAGcL,UAAU,GAAGX,UAAU,CAACY,IAAD,CAAV,CAAiBD,UAAjB,CAAH,GAAgC,MAAI,CAAE,CAH9D;AAAA,UAGEM,OAHF,QAGEA,OAHF;;AAAA,UAIEC,QAJF,GAIe,KAAKV,KAJpB,CAIEU,QAJF;AAKN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEH,SAAnB;AAA8B,MAAA,OAAO,EAAEC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE;AAACE,QAAAA,QAAD;AAAWD,QAAAA;AAAX,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF;AAOD;;AA3BoC;;AA6BtC;AAEDZ,QAAQ,CAACc,SAAT,GAAqB;AACnBP,EAAAA,IAAI,EAAEf,SAAS,CAACuB,MAAV,CAAiBC,UADJ;AAEnBV,EAAAA,UAAU,EAAEd,SAAS,CAACuB,MAAV,CAAiBC;AAFV,CAArB;AAKAhB,QAAQ,CAACiB,YAAT,GAAwB,EAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCN,EAAAA,QAAQ,EAAEM,KAAK,CAACrB,gBAAN,CAAuBsB;AADD,CAAL,CAA7B;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAG;AACpC,SAAO;AACLjB,IAAAA,QAAQ,EAAG,CAACG,IAAD,EAAOY,IAAP,KAAc;AACvBE,MAAAA,QAAQ,CAACzB,iBAAiB,CAACW,IAAD,EAAMY,IAAN,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAe1B,UAAU,CAACD,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,QAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport listReducerStore from './ListPage.reducer';\nimport DataCards from '../../components/DataCards/DataCards';\n\nclass ListPage extends React.Component {\n  constructor(props){\n    super(props);\n\n  }\n\n  componentDidMount(){\n    const {makeCall, actionType, page} = this.props;\n    if(actionType){\n      const {type} = pageConfig[page][actionType];\n      makeCall(type);\n    }\n   \n  }\n\n  render(){\n    const { actionType, page} = this.props;\n    const { pageTitle, actions } = pageConfig[page];\n    const { handler } = actionType ? pageConfig[page][actionType]:()=>{};\n    const { cardData } = this.props;\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={actions} />\n        <DataCards data={{cardData, handler}} />\n        <div>Hello world</div>\n      </div>\n    );\n  }\n \n};\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  actionType: PropTypes.string.isRequired,\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  cardData: state.listReducerStore.data\n});\nconst mapDispatchToProps = dispatch =>{\n  return {\n    makeCall : (type, data)=>{\n      dispatch(getActionsFormate(type,data))\n    }\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));\n"]},"metadata":{},"sourceType":"module"}