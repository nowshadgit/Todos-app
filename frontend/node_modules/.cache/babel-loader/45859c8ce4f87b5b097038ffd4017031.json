{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { checkEmail } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { STORE } from '../../utils/constants';\n\nclass AddEditUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.FIRST_NAME_FIELD_ID = \"aeu-fname\";\n    this.LAST_NAME_FIELD_ID = \"aeu-lname\";\n    this.EMAIL_FIELD_ID = \"aeu-email\";\n    this.DEPARTMENTS_FIELD_ID = \"select-departments\";\n\n    this.validateForm = () => {\n      const _checkEmail = checkEmail(this.state[this.EMAIL_FIELD_ID], 'Email'),\n            _checkEmail2 = _slicedToArray(_checkEmail, 2),\n            emailValidity = _checkEmail2[0],\n            emailErrors = _checkEmail2[1];\n\n      const formValidity = emailValidity;\n\n      const formErrors = _objectSpread({}, emailErrors);\n\n      this.setState({\n        formValidity,\n        formErrors\n      });\n      return formValidity;\n    };\n\n    this.enableSubmit = (email, firstName, lastName, departments) => {\n      const disabled = !(email.length > 0 && firstName.length > 0 && lastName.length > 0 && departments.length > 0);\n      this.setState({\n        disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID]));\n    };\n\n    this.handleDepartments = event => {\n      this.setState({\n        [this.DEPARTMENTS_FIELD_ID]: event ? event : [],\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.DEPARTMENTS_FIELD_ID]));\n    };\n\n    this.getDepartmentIds = departments => {\n      let departIds = departments.map(depart => {\n        return depart.value;\n      });\n      return departIds;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n\n      if (this.validateForm()) {\n        const data = {\n          email: this.state[this.EMAIL_FIELD_ID],\n          first_name: this.state[this.FIRST_NAME_FIELD_ID],\n          last_name: this.state[this.LAST_NAME_FIELD_ID],\n          department: this.getDepartmentIds(this.state[this.DEPARTMENTS_FIELD_ID])\n        };\n        const type = pageConfig[this.props.page].actions.postData;\n        console.log(\"Data\", data, type);\n        this.props.submit(type, {\n          data,\n          props: _objectSpread({}, this.props)\n        });\n      }\n    };\n\n    this.getStateValues = () => {\n      const userData = this.props.userData;\n\n      if (userData.length > 0) {\n        const firstName = userData.first_name;\n        const lastName = userData.last_name;\n        const email = userData.email;\n        const deapartments = userData.department;\n      }\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.DEPARTMENTS_FIELD_ID]: [],\n      errorCode: '',\n      disabled: true\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          getDepartments = _this$props.getDepartments,\n          page = _this$props.page,\n          getUserData = _this$props.getUserData,\n          match = _this$props.match;\n    const dtype = pageConfig[page].actions.getDepartments;\n    getDepartments(dtype);\n    const utype = pageConfig[page].actions.fetchUser;\n\n    if (utype) {\n      const params = match.params;\n      getUserData(utype, _objectSpread({}, params));\n    }\n  }\n\n  render() {\n    const page = this.props.page;\n    const pageTitle = pageConfig[page].pageTitle;\n    const stateValues = this.getStateValues();\n    return React.createElement(\"div\", {\n      className: \"add-edit-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(AddEditUserForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleDepartments: this.handleDepartments,\n      firstNameFieldId: this.FIRST_NAME_FIELD_ID,\n      lastNameFieldId: this.LAST_NAME_FIELD_ID,\n      emailFieldId: this.EMAIL_FIELD_ID,\n      firstNameFieldValue: this.state[this.FIRST_NAME_FIELD_ID],\n      lastNameFieldValue: this.state[this.LAST_NAME_FIELD_ID],\n      emailFieldValue: this.state[this.EMAIL_FIELD_ID],\n      departmentsFieldValue: this.props.userDepartments,\n      departmentsFieldId: this.DEPARTMENTS_FIELD_ID,\n      formErrors: this.formErrors,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userDepartments: state.addEditUserReducerStore[STORE.GET_USER_DEPARTMENTS],\n  userData: state.userDetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDepartments: (dtype, data) => {\n      dispatch(getActionsFormate(dtype, data));\n    },\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditUser));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx"],"names":["React","AddEditUserForm","connect","withRouter","checkEmail","PageHeader","pageConfig","getActionsFormate","STORE","AddEditUser","Component","constructor","props","FIRST_NAME_FIELD_ID","LAST_NAME_FIELD_ID","EMAIL_FIELD_ID","DEPARTMENTS_FIELD_ID","validateForm","state","emailValidity","emailErrors","formValidity","formErrors","setState","enableSubmit","email","firstName","lastName","departments","disabled","length","handleChange","event","target","id","value","handleDepartments","getDepartmentIds","departIds","map","depart","handleSubmit","preventDefault","data","first_name","last_name","department","type","page","actions","postData","console","log","submit","getStateValues","userData","deapartments","errorCode","componentDidMount","getDepartments","getUserData","match","dtype","utype","fetchUser","params","render","pageTitle","stateValues","userDepartments","mapStateToProps","addEditUserReducerStore","GET_USER_DEPARTMENTS","userDetailsReducerStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { checkEmail } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { STORE } from '../../utils/constants';\n\nclass AddEditUser extends React.Component{\n\n    FIRST_NAME_FIELD_ID = \"aeu-fname\";\n    LAST_NAME_FIELD_ID = \"aeu-lname\";\n    EMAIL_FIELD_ID = \"aeu-email\";\n    DEPARTMENTS_FIELD_ID = \"select-departments\"\n    constructor(props){\n        super(props);\n        this.state={\n            formErrors:{},\n            formValidity:false,\n            [this.FIRST_NAME_FIELD_ID] : '',\n            [this.LAST_NAME_FIELD_ID] : '',\n            [this.EMAIL_FIELD_ID] : '',\n            [this.DEPARTMENTS_FIELD_ID]:[],\n            errorCode:'',\n            disabled:true\n        }\n    }\n\n  componentDidMount(){\n      const {getDepartments, page, getUserData, match} = this.props;\n      const dtype = pageConfig[page].actions.getDepartments;\n      getDepartments(dtype);\n      const utype = pageConfig[page].actions.fetchUser;\n      if(utype){\n        const { params } = match;\n        getUserData(utype, {...params});\n      }\n  }\n\n  validateForm = () => {\n    const [emailValidity, emailErrors] = checkEmail(\n      this.state[this.EMAIL_FIELD_ID],\n      'Email'\n    );\n    const formValidity = emailValidity;\n    const formErrors = { ...emailErrors };\n\n    this.setState({ formValidity, formErrors });\n\n    return formValidity;\n  };\n\n  enableSubmit = (email, firstName, lastName, departments) => {\n    const disabled = !(email.length > 0 && firstName.length > 0 && lastName.length >0 && departments.length > 0);\n    this.setState({ disabled });\n  };\n\n    handleChange = event => {\n        this.setState(\n          {\n            [event.target.id]: event.target.value,\n            formErrors: {}\n          },\n          () =>\n            this.enableSubmit(\n              this.state[this.EMAIL_FIELD_ID],\n              this.state[this.FIRST_NAME_FIELD_ID],\n              this.state[this.LAST_NAME_FIELD_ID],\n              this.state[this.DEPARTMENTS_FIELD_ID]\n            )\n        );\n      };\n\n      handleDepartments = (event) =>{\n          this.setState(\n            {\n              [this.DEPARTMENTS_FIELD_ID]: event?event:[],\n              formErrors: {}\n            },\n            () =>\n              this.enableSubmit(\n                this.state[this.EMAIL_FIELD_ID],\n                this.state[this.FIRST_NAME_FIELD_ID],\n                this.state[this.LAST_NAME_FIELD_ID],\n                this.state[this.DEPARTMENTS_FIELD_ID]\n              )\n          );\n      }\n\n      getDepartmentIds = (departments) =>{\n          let departIds = departments.map(depart=>{\n            return depart.value;\n          })\n          return departIds;\n      }\n\n      handleSubmit = event => {\n        event.preventDefault();\n        // this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n        if (this.validateForm()) {\n          const data = {\n            email: this.state[this.EMAIL_FIELD_ID],\n            first_name: this.state[this.FIRST_NAME_FIELD_ID],\n            last_name: this.state[this.LAST_NAME_FIELD_ID],\n            department: this.getDepartmentIds(this.state[this.DEPARTMENTS_FIELD_ID])\n          };\n          const type = pageConfig[this.props.page].actions.postData;\n          console.log(\"Data\", data, type);\n          \n          this.props.submit(type, {data, props:{...this.props}});\n        }\n      };\n\n    // getDepartment=()=>{\n      \n    //   const {userDepartments} = this.props;\n     \n\n    //   const localDepart = this.state[this.DEPARTMENTS_FIELD_ID];\n    //   let customDepart = [];\n    //   if(localDepart.length === 0){\n    //     customDepart = userDepartments;\n    //   }else if(localDepart.length === userDepartments.length){\n    //     customDepart = localDepart;\n    //   }else{\n    //      customDepart = localDepart;\n    //     for(let udepart of userDepartments){\n    //       let checkExistDepart = false;\n    //       for(let ldepart of localDepart){\n    //         if(ldepart.value === udepart.value){\n    //           checkExistDepart = true;\n    //         }\n    //       }\n    //       if(!checkExistDepart){\n    //         customDepart.push(udepart);\n    //       }\n    //     }\n    //   }\n    //   console.log(\"departments:\",customDepart );\n    //   return customDepart;\n    // }\n\n    getStateValues=()=>{\n        const {userData} = this.props;\n        if(userData.length>0){\n          const firstName = userData.first_name;\n          const lastName = userData.last_name;\n          const email = userData.email;\n          const deapartments = userData.department;\n        }\n    }\n\n    render(){\n        const {page} = this.props;\n        const {pageTitle} = pageConfig[page];\n        const stateValues = this.getStateValues();\n        return (\n          <div className=\"add-edit-user\">\n            <PageHeader title={pageTitle} />\n            <AddEditUserForm \n                handleSubmit={this.handleSubmit}\n                handleChange={this.handleChange}\n                handleDepartments={this.handleDepartments}\n                firstNameFieldId={this.FIRST_NAME_FIELD_ID}\n                lastNameFieldId={this.LAST_NAME_FIELD_ID}\n                emailFieldId={this.EMAIL_FIELD_ID}\n                firstNameFieldValue={this.state[this.FIRST_NAME_FIELD_ID]}\n                lastNameFieldValue={this.state[this.LAST_NAME_FIELD_ID]}\n                emailFieldValue={this.state[this.EMAIL_FIELD_ID]}\n                departmentsFieldValue={this.props.userDepartments}\n                departmentsFieldId={this.DEPARTMENTS_FIELD_ID}\n                formErrors={this.formErrors}\n                disabled={this.state.disabled}\n            />\n          </div>  \n        );\n    }\n}\n\nconst mapStateToProps =(state)=>({\n    userDepartments : state.addEditUserReducerStore[STORE.GET_USER_DEPARTMENTS],\n    userData: state.userDetailsReducerStore.data\n})\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDepartments: (dtype, data) => {\n      dispatch(getActionsFormate(dtype, data));\n    },\n    submit:(type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) =>{\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditUser));"]},"metadata":{},"sourceType":"module"}