{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* generateQrCodes(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.GENERATE_QR_CODES, action.data);\n\n    if (response.status === 201 || response.status === 200) {\n      yield put({\n        type: ACTIONS.QR_CODES.ADD_QR_CODES_SUCCESS,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.ADD_SUCCESS\n      });\n    } else {\n      yield put({\n        type: ACTIONS.QR_CODES.ADD_QR_CODES_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.QR_CODES.ADD_QR_CODES_FAIL,\n      payload: e\n    });\n  }\n}\n\nconst dummy = {};\nexport { generateQrCodes, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/GenerateQrCodes/GenerateQrCodes.saga.js"],"names":["call","put","ACTIONS","FOOTPRINTS_API","generateQrCodes","action","response","window","axios","postData","GENERATE_QR_CODES","data","status","type","QR_CODES","ADD_QR_CODES_SUCCESS","payload","ALERT_MESSAGE","ADD_SUCCESS","ADD_QR_CODES_FAIL","e","dummy"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,cAAT,QAA+B,4BAA/B;;AAEA,UAAUC,eAAV,CAA0BC,MAA1B,EAAkC;AAChC,MAAIC,QAAJ;;AACA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMN,IAAI,CACnBO,MAAM,CAACC,KAAP,CAAaC,QADM,EAEnBN,cAAc,CAACO,iBAFI,EAGnBL,MAAM,CAACM,IAHY,CAArB;;AAMA,QAAIL,QAAQ,CAACM,MAAT,KAAoB,GAApB,IAA2BN,QAAQ,CAACM,MAAT,KAAoB,GAAnD,EAAwD;AACtD,YAAMX,GAAG,CAAC;AACRY,QAAAA,IAAI,EAAEX,OAAO,CAACY,QAAR,CAAiBC,oBADf;AAERC,QAAAA,OAAO,EAAEV,QAAQ,CAACK;AAFV,OAAD,CAAT;AAIA,YAAMV,GAAG,CAAC;AACRY,QAAAA,IAAI,EAAEX,OAAO,CAACe,aAAR,CAAsBC;AADpB,OAAD,CAAT;AAGD,KARD,MAQO;AACL,YAAMjB,GAAG,CAAC;AACRY,QAAAA,IAAI,EAAEX,OAAO,CAACY,QAAR,CAAiBK,iBADf;AAERH,QAAAA,OAAO,EAAEV,QAAQ,CAACK;AAFV,OAAD,CAAT;AAID;AACF,GArBD,CAqBE,OAAOS,CAAP,EAAU;AACV,UAAMnB,GAAG,CAAC;AAAEY,MAAAA,IAAI,EAAEX,OAAO,CAACY,QAAR,CAAiBK,iBAAzB;AAA4CH,MAAAA,OAAO,EAAEI;AAArD,KAAD,CAAT;AACD;AACF;;AAED,MAAMC,KAAK,GAAG,EAAd;AAEA,SAASjB,eAAT,EAA0BiB,KAA1B","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* generateQrCodes(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.GENERATE_QR_CODES,\n      action.data\n    );\n\n    if (response.status === 201 || response.status === 200) {\n      yield put({\n        type: ACTIONS.QR_CODES.ADD_QR_CODES_SUCCESS,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.ADD_SUCCESS\n      });\n    } else {\n      yield put({\n        type: ACTIONS.QR_CODES.ADD_QR_CODES_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.QR_CODES.ADD_QR_CODES_FAIL, payload: e });\n  }\n}\n\nconst dummy = {};\n\nexport { generateQrCodes, dummy };\n"]},"metadata":{},"sourceType":"module"}