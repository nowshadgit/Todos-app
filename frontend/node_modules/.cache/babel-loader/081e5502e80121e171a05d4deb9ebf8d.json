{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page;\n    const type = pageConfig[page].actions.fetchList;\n    makeCall(type);\n  }\n\n  render() {\n    const page = this.props.page;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          headerActions = _pageConfig$page.headerActions;\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: headerActions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  dataCard: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => {\n  const page = this.props.page;\n  const respectedStore = pageConfig[page].store.storedList;\n  return {\n    dataCard: state.listReducerStore[respectedStore]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","ListPage","Component","componentDidMount","props","makeCall","page","type","actions","fetchList","render","pageTitle","headerActions","propTypes","string","isRequired","func","dataCard","oneOfType","array","object","defaultProps","mapStateToProps","state","respectedStore","store","storedList","listReducerStore","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,wBACS,KAAKC,KADd;AAAA,UACVC,QADU,eACVA,QADU;AAAA,UACAC,IADA,eACAA,IADA;AAElB,UAAMC,IAAI,GAAGT,UAAU,CAACQ,IAAD,CAAV,CAAiBE,OAAjB,CAAyBC,SAAtC;AACAJ,IAAAA,QAAQ,CAACE,IAAD,CAAR;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCJ,IADD,GACU,KAAKF,KADf,CACCE,IADD;AAAA,6BAE8BR,UAAU,CAACQ,IAAD,CAFxC;AAAA,UAECK,SAFD,oBAECA,SAFD;AAAA,UAEYC,aAFZ,oBAEYA,aAFZ;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAED,SAAnB;AAA8B,MAAA,OAAO,EAAEC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF;AAMD;;AAhBoC;;AAmBvCX,QAAQ,CAACY,SAAT,GAAqB;AACnBP,EAAAA,IAAI,EAAEX,SAAS,CAACmB,MAAV,CAAiBC,UADJ;AAEnBV,EAAAA,QAAQ,EAAEV,SAAS,CAACqB,IAAV,CAAeD,UAFN;AAGnBE,EAAAA,QAAQ,EAAEtB,SAAS,CAACuB,SAAV,CAAoB,CAC5BvB,SAAS,CAACwB,KADkB,EAE5BxB,SAAS,CAACyB,MAFkB,CAApB,EAGPL;AANgB,CAArB;AASAd,QAAQ,CAACoB,YAAT,GAAwB,EAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA,QACxBjB,IADwB,GAChB,KAAKF,KADW,CACxBE,IADwB;AAE/B,QAAMkB,cAAc,GAAG1B,UAAU,CAACQ,IAAD,CAAV,CAAiBmB,KAAjB,CAAuBC,UAA9C;AACA,SAAM;AACJT,IAAAA,QAAQ,EAAEM,KAAK,CAACI,gBAAN,CAAuBH,cAAvB;AADN,GAAN;AAGD,CAND;;AAQA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLxB,IAAAA,QAAQ,EAAE,CAACE,IAAD,EAAOuB,IAAP,KAAgB;AACxBD,MAAAA,QAAQ,CAAC7B,iBAAiB,CAACO,IAAD,EAAOuB,IAAP,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAejC,UAAU,CACvBD,OAAO,CACL0B,eADK,EAELM,kBAFK,CAAP,CAGE3B,QAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const { makeCall, page } = this.props;\n    const type = pageConfig[page].actions.fetchList;\n    makeCall(type);\n  }\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle, headerActions } = pageConfig[page];\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={headerActions} />\n        <div>Hello world</div>\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  dataCard: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object\n  ]).isRequired,\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => {\n  const {page} = this.props;\n  const respectedStore = pageConfig[page].store.storedList;\n  return{\n    dataCard: state.listReducerStore[respectedStore]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}