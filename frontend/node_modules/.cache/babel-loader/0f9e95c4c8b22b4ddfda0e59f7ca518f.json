{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getUserDetails(action) {\n  let response;\n\n  try {\n    const data = action.data;\n    const API_URL = FOOTPRINTS_API.USER + data.userId;\n    response = yield call(window.axios.getData, API_URL);\n    console.log(\"response:\", response);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.GET_USER_INFO_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetTypesDetails(action) {\n  let response;\n  const id = 1;\n\n  try {\n    response = yield call(window.axios.getData, reverse(FOOTPRINTS_API.ASSET_TYPES_DETAILS, {\n      id\n    }), action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetAttributesDetails(action) {\n  let response;\n  const id = 1;\n\n  try {\n    response = yield call(window.axios.getData, reverse(FOOTPRINTS_API.ASSET_ATTRIBUTES_DETAILS, {\n      id\n    }), action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_FAIL,\n      payload: e\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport { getUserDetails, getAssetTypesDetails, getAssetAttributesDetails, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Details/Details.saga.js"],"names":["call","put","reverse","ACTIONS","FOOTPRINTS_API","getUserDetails","action","response","data","API_URL","USER","userId","window","axios","getData","console","log","status","type","USERS","GET_USER_INFO_SUCCESS","payload","GET_USER_INFO_FAIL","e","getAssetTypesDetails","id","ASSET_TYPES_DETAILS","ASSET_TYPES","ASSET_TYPES_DETAILS_SUCCESS","ASSET_TYPES_DETAILS_FAIL","getAssetAttributesDetails","ASSET_ATTRIBUTES_DETAILS","ASSET_ATTRIBUTES","ASSET_ATTRIBUTES_DETAILS_SUCCESS","ASSET_ATTRIBUTES_DETAILS_FAIL","dummy"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\n\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getUserDetails(action) {\n  let response;\n  try {\n    const { data } = action;\n    const API_URL = FOOTPRINTS_API.USER + data.userId;\n    response = yield call(window.axios.getData, API_URL);\n    console.log(\"response:\", response);\n    \n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.GET_USER_INFO_FAIL, payload: e });\n  }\n}\n\nfunction* getAssetTypesDetails(action) {\n  let response;\n  const id = 1;\n  try {\n    response = yield call(\n      window.axios.getData,\n      reverse(FOOTPRINTS_API.ASSET_TYPES_DETAILS, { id }),\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetAttributesDetails(action) {\n  let response;\n  const id = 1;\n  try {\n    response = yield call(\n      window.axios.getData,\n      reverse(FOOTPRINTS_API.ASSET_ATTRIBUTES_DETAILS, { id }),\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_FAIL,\n      payload: e\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport {\n  getUserDetails,\n  getAssetTypesDetails,\n  getAssetAttributesDetails,\n  dummy\n};\n"]},"metadata":{},"sourceType":"module"}