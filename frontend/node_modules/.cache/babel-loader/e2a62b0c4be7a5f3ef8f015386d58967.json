{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/AlertMessage/AlertMessage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ERROR_CODES from '../../utils/errorCodes';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { ALERT_MESSAAGEs } from '../../utils/constants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getActionsFormate } from '../../utils/common';\n\nclass AlertMessage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.notify = () => {\n      const _this$props = this.props,\n            AlertMessageStore = _this$props.AlertMessageStore,\n            resetState = _this$props.resetState;\n      const status = AlertMessageStore.status,\n            errorCode = AlertMessageStore.errorCode,\n            page = AlertMessageStore.page;\n\n      if (status === ACTIONS.ALERT_MESSAGE.ADD_SUCCESS) {\n        toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n\n      if (status === ACTIONS.ALERT_MESSAGE.UPDATE_SUCCESS) {\n        toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n\n      if (status === ACTIONS.ALERT_MESSAGE.FAIL && page) {\n        toast.warn(ERROR_CODES[page][errorCode], {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n\n      const type = ACTIONS.ALERT_MESSAGE.RESET_STATE;\n      resetState(type);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.notify(), React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAlertMessage.propTypes = {\n  AlertMessageStore: PropTypes.func.isRequired,\n  resetState: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  AlertMessageStore: state.AlertMessageReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AlertMessage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/AlertMessage/AlertMessage.jsx"],"names":["React","PropTypes","ToastContainer","toast","ERROR_CODES","ACTIONS","ALERT_MESSAAGEs","connect","withRouter","getActionsFormate","AlertMessage","Component","notify","props","AlertMessageStore","resetState","status","errorCode","page","ALERT_MESSAGE","ADD_SUCCESS","success","position","POSITION","TOP_RIGHT","UPDATE_SUCCESS","FAIL","warn","type","RESET_STATE","render","propTypes","func","isRequired","mapStateToProps","state","AlertMessageReducerStore","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AACA,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACvCC,MADuC,GAC9B,MAAK;AAAA,0BACgC,KAAKC,KADrC;AAAA,YACFC,iBADE,eACFA,iBADE;AAAA,YACiBC,UADjB,eACiBA,UADjB;AAAA,YAEFC,MAFE,GAE0BF,iBAF1B,CAEFE,MAFE;AAAA,YAEMC,SAFN,GAE0BH,iBAF1B,CAEMG,SAFN;AAAA,YAEiBC,IAFjB,GAE0BJ,iBAF1B,CAEiBI,IAFjB;;AAGV,UAAGF,MAAM,KAAKX,OAAO,CAACc,aAAR,CAAsBC,WAApC,EAAgD;AAC5CjB,QAAAA,KAAK,CAACkB,OAAN,CAAcf,eAAe,CAACD,OAAO,CAACc,aAAR,CAAsBC,WAAvB,CAA7B,EAAkE;AAC9DE,UAAAA,QAAQ,EAAEnB,KAAK,CAACoB,QAAN,CAAeC;AADqC,SAAlE;AAGH;;AACD,UAAGR,MAAM,KAAKX,OAAO,CAACc,aAAR,CAAsBM,cAApC,EAAmD;AAC/CtB,QAAAA,KAAK,CAACkB,OAAN,CAAcf,eAAe,CAACD,OAAO,CAACc,aAAR,CAAsBC,WAAvB,CAA7B,EAAkE;AAC9DE,UAAAA,QAAQ,EAAEnB,KAAK,CAACoB,QAAN,CAAeC;AADqC,SAAlE;AAGH;;AACD,UAAGR,MAAM,KAAKX,OAAO,CAACc,aAAR,CAAsBO,IAAjC,IAAyCR,IAA5C,EAAiD;AAC7Cf,QAAAA,KAAK,CAACwB,IAAN,CAAWvB,WAAW,CAACc,IAAD,CAAX,CAAkBD,SAAlB,CAAX,EAAyC;AACrCK,UAAAA,QAAQ,EAAEnB,KAAK,CAACoB,QAAN,CAAeC;AADY,SAAzC;AAGH;;AACD,YAAMI,IAAI,GAAGvB,OAAO,CAACc,aAAR,CAAsBU,WAAnC;AACAd,MAAAA,UAAU,CAACa,IAAD,CAAV;AACH,KArBsC;AAAA;;AAsBvCE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,MAAL,EADL,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA7BsC;;AAiC3CF,YAAY,CAACqB,SAAb,GAAyB;AACrBjB,EAAAA,iBAAiB,EAACb,SAAS,CAAC+B,IAAV,CAAeC,UADZ;AAErBlB,EAAAA,UAAU,EAAEd,SAAS,CAAC+B,IAAV,CAAeC;AAFN,CAAzB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BrB,EAAAA,iBAAiB,EAAEqB,KAAK,CAACC;AADK,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACLvB,IAAAA,UAAU,EAAEa,IAAI,IAAI;AAClBU,MAAAA,QAAQ,CAAC7B,iBAAiB,CAACmB,IAAD,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CANH;;AAOA,eAAepB,UAAU,CACrBD,OAAO,CACL2B,eADK,EAELG,kBAFK,CAAP,CAGE3B,YAHF,CADqB,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ERROR_CODES from '../../utils/errorCodes';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { ALERT_MESSAAGEs } from '../../utils/constants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getActionsFormate } from '../../utils/common';\nclass AlertMessage extends React.Component {\n    notify = () =>{\n        const { AlertMessageStore, resetState } = this.props;\n        const { status, errorCode, page } = AlertMessageStore;\n        if(status === ACTIONS.ALERT_MESSAGE.ADD_SUCCESS){\n            toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n        if(status === ACTIONS.ALERT_MESSAGE.UPDATE_SUCCESS){\n            toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n        if(status === ACTIONS.ALERT_MESSAGE.FAIL && page){\n            toast.warn(ERROR_CODES[page][errorCode], {\n                position: toast.POSITION.TOP_RIGHT,\n            });\n        }\n        const type = ACTIONS.ALERT_MESSAGE.RESET_STATE;\n        resetState(type);\n    };\n    render() {\n        return (\n            <div>\n                {this.notify()}\n                <ToastContainer />\n            </div>\n        )\n    }\n}\n\n\nAlertMessage.propTypes = {\n    AlertMessageStore:PropTypes.func.isRequired,\n    resetState: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    AlertMessageStore: state.AlertMessageReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      resetState: type => {\n        dispatch(getActionsFormate(type));\n      }\n    };\n  };\nexport default withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(AlertMessage)\n  );"]},"metadata":{},"sourceType":"module"}