{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\n\nfunction* addOrgUnit(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.ORG_UNITS, action.data.data);\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.ORG_UNITS.LIST);\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* updateOrgUnit(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.patchData, FOOTPRINTS_API.UPDATE_ORG_UNIT, action.data.data);\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.ORG_UNITS.LIST);\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport { addOrgUnit, updateOrgUnit };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditOrgUnits/AddEditOrgUnits.saga.js"],"names":["call","put","ACTIONS","FOOTPRINTS_API","FOOTPRINTS_ROUTES","addOrgUnit","action","response","window","axios","postData","ORG_UNITS","data","status","props","history","push","LIST","type","ADD_ORG_UNIT_SUCCESS","payload","ADD_ORG_UNIT_FAIL","e","updateOrgUnit","patchData","UPDATE_ORG_UNIT"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAIC,QAAJ;;AACA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMP,IAAI,CACnBQ,MAAM,CAACC,KAAP,CAAaC,QADM,EAEnBP,cAAc,CAACQ,SAFI,EAGnBL,MAAM,CAACM,IAAP,CAAYA,IAHO,CAArB;;AAMA,QAAIL,QAAQ,CAACM,MAAT,KAAoB,GAApB,IAA2BN,QAAQ,CAACM,MAAT,KAAoB,GAAnD,EAAwD;AACtDP,MAAAA,MAAM,CAACM,IAAP,CAAYE,KAAZ,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BZ,iBAAiB,CAACO,SAAlB,CAA4BM,IAA3D;AACA,YAAMhB,GAAG,CAAC;AACRiB,QAAAA,IAAI,EAAEhB,OAAO,CAACS,SAAR,CAAkBQ,oBADhB;AAERC,QAAAA,OAAO,EAAEb,QAAQ,CAACK;AAFV,OAAD,CAAT;AAID,KAND,MAMO;AACL,YAAMX,GAAG,CAAC;AACRiB,QAAAA,IAAI,EAAEhB,OAAO,CAACS,SAAR,CAAkBU,iBADhB;AAERD,QAAAA,OAAO,EAAEb,QAAQ,CAACK;AAFV,OAAD,CAAT;AAID;AACF,GAnBD,CAmBE,OAAOU,CAAP,EAAU;AACV,UAAMrB,GAAG,CAAC;AAAEiB,MAAAA,IAAI,EAAEhB,OAAO,CAACS,SAAR,CAAkBU,iBAA1B;AAA6CD,MAAAA,OAAO,EAAEE;AAAtD,KAAD,CAAT;AACD;AACF;;AAED,UAAUC,aAAV,CAAwBjB,MAAxB,EAAgC;AAC9B,MAAIC,QAAJ;;AACA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMP,IAAI,CACnBQ,MAAM,CAACC,KAAP,CAAae,SADM,EAEnBrB,cAAc,CAACsB,eAFI,EAGnBnB,MAAM,CAACM,IAAP,CAAYA,IAHO,CAArB;;AAMA,QAAIL,QAAQ,CAACM,MAAT,KAAoB,GAApB,IAA2BN,QAAQ,CAACM,MAAT,KAAoB,GAAnD,EAAwD;AACtDP,MAAAA,MAAM,CAACM,IAAP,CAAYE,KAAZ,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BZ,iBAAiB,CAACO,SAAlB,CAA4BM,IAA3D;AACA,YAAMhB,GAAG,CAAC;AACRiB,QAAAA,IAAI,EAAEhB,OAAO,CAACS,SAAR,CAAkBQ,oBADhB;AAERC,QAAAA,OAAO,EAAEb,QAAQ,CAACK;AAFV,OAAD,CAAT;AAID,KAND,MAMO;AACL,YAAMX,GAAG,CAAC;AACRiB,QAAAA,IAAI,EAAEhB,OAAO,CAACS,SAAR,CAAkBU,iBADhB;AAERD,QAAAA,OAAO,EAAEb,QAAQ,CAACK;AAFV,OAAD,CAAT;AAID;AACF,GAnBD,CAmBE,OAAOU,CAAP,EAAU;AACV,UAAMrB,GAAG,CAAC;AAAEiB,MAAAA,IAAI,EAAEhB,OAAO,CAACS,SAAR,CAAkBU,iBAA1B;AAA6CD,MAAAA,OAAO,EAAEE;AAAtD,KAAD,CAAT;AACD;AACF;;AAED,SAASjB,UAAT,EAAqBkB,aAArB","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\n\nfunction* addOrgUnit(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.ORG_UNITS,\n      action.data.data\n    );\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.ORG_UNITS.LIST);\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL, payload: e });\n  }\n}\n\nfunction* updateOrgUnit(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.patchData,\n      FOOTPRINTS_API.UPDATE_ORG_UNIT,\n      action.data.data\n    );\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.ORG_UNITS.LIST);\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL, payload: e });\n  } \n}\n\nexport { addOrgUnit, updateOrgUnit };\n"]},"metadata":{},"sourceType":"module"}