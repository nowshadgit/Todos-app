{"ast":null,"code":"import { __extends, __read, __spread } from \"tslib\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AnalyticsReactContext } from './AnalyticsReactContext';\nvar ContextTypes = {\n  getAtlaskitAnalyticsEventHandlers: PropTypes.func\n};\n\nvar AnalyticsListener =\n/** @class */\nfunction (_super) {\n  __extends(AnalyticsListener, _super);\n\n  function AnalyticsListener() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.getChildContext = function () {\n      return {\n        getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers\n      };\n    };\n\n    _this.getAnalyticsEventHandlers = function () {\n      var _a = _this.props,\n          channel = _a.channel,\n          onEvent = _a.onEvent;\n      var getAtlaskitAnalyticsEventHandlers = _this.context.getAtlaskitAnalyticsEventHandlers;\n      var parentEventHandlers = typeof getAtlaskitAnalyticsEventHandlers === 'function' && getAtlaskitAnalyticsEventHandlers() || [];\n\n      var handler = function (event, eventChannel) {\n        if (channel === '*' || channel === eventChannel) {\n          onEvent(event, eventChannel);\n        }\n      };\n\n      return __spread([handler], parentEventHandlers);\n    };\n\n    return _this;\n  }\n\n  AnalyticsListener.prototype.render = function () {\n    var _a = this.context.getAtlaskitAnalyticsContext,\n        getAtlaskitAnalyticsContext = _a === void 0 ? function () {\n      return [];\n    } : _a;\n    var children = this.props.children;\n    return React.createElement(AnalyticsReactContext.Provider, {\n      value: {\n        getAtlaskitAnalyticsEventHandlers: this.getAnalyticsEventHandlers,\n        getAtlaskitAnalyticsContext: getAtlaskitAnalyticsContext\n      }\n    }, children);\n  };\n\n  AnalyticsListener.contextTypes = ContextTypes;\n  AnalyticsListener.childContextTypes = ContextTypes;\n  return AnalyticsListener;\n}(Component);\n\nexport default AnalyticsListener;","map":null,"metadata":{},"sourceType":"module"}