{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/BreadCrumb/BreadCrumb.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reverse } from 'named-urls';\nimport { getActionsFormate } from '../../utils/common';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_ROUTES } from '../../config';\nimport './BreadCrumb.scss';\n\nfunction BreadCrumb(props) {\n  useEffect(() => {\n    const makeCall = props.makeCall,\n          orgId = props.orgId;\n\n    if (orgId) {\n      makeCall(ACTIONS.BREADCRUMB.GET_BREADCRUMB, orgId);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.orgId]);\n\n  function breadcrumbItems(path) {\n    const pathList = [];\n\n    if (path.length > 0) {\n      for (let i = path.length - 1; i >= 0; i -= 1) {\n        pathList.push(React.createElement(Breadcrumb.Item, {\n          href: breadcrumbPath(path[i].id),\n          key: path[i].id,\n          active: i === 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, path[i].name));\n      }\n    }\n\n    return pathList;\n  }\n\n  function breadcrumbPath(orgUnitId) {\n    const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, {\n      orgUnitId\n    });\n    return url;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"bread-crumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Breadcrumb.Item, {\n    href: FOOTPRINTS_ROUTES.ORG_UNITS.LIST,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Department\"), props.data ? breadcrumbItems(props.data) : null));\n}\n\nBreadCrumb.propTypes = {\n  // eslint-disable-next-line react/require-default-props\n  orgId: PropTypes.number,\n  // eslint-disable-next-line react/require-default-props\n  data: PropTypes.array\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n    data: state.breadcrumbReducerStore.BREADCRUMB,\n    orgId: state.listReducerStore.orgId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, id) => {\n      dispatch(getActionsFormate(type, id));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BreadCrumb));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/BreadCrumb/BreadCrumb.jsx"],"names":["React","useEffect","PropTypes","Breadcrumb","withRouter","connect","reverse","getActionsFormate","ACTIONS","FOOTPRINTS_ROUTES","BreadCrumb","props","makeCall","orgId","BREADCRUMB","GET_BREADCRUMB","breadcrumbItems","path","pathList","length","i","push","breadcrumbPath","id","name","orgUnitId","url","ORG_UNITS","DETAIL","SHOW","LIST","data","propTypes","number","array","mapStateToProps","state","breadcrumbReducerStore","listReducerStore","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reverse } from 'named-urls';\nimport { getActionsFormate } from '../../utils/common';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_ROUTES } from '../../config';\nimport './BreadCrumb.scss';\n\nfunction BreadCrumb(props) {\n  useEffect(() => {\n    const { makeCall, orgId } = props;\n    if (orgId) {\n      makeCall(ACTIONS.BREADCRUMB.GET_BREADCRUMB, orgId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.orgId]);\n\n  function breadcrumbItems(path) {\n    const pathList = [];\n    if (path.length > 0) {\n      for (let i = path.length - 1; i >= 0; i -= 1) {\n        pathList.push(\n          <Breadcrumb.Item\n            href={breadcrumbPath(path[i].id)}\n            key={path[i].id}\n            active={i === 0}\n          >\n            {path[i].name}\n          </Breadcrumb.Item>\n        );\n      }\n    }\n    return pathList;\n  }\n\n  function breadcrumbPath(orgUnitId) {\n    const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, { orgUnitId });\n    return url;\n  }\n\n  return (\n    <div className=\"bread-crumb\">\n      <Breadcrumb>\n        <Breadcrumb.Item href={FOOTPRINTS_ROUTES.ORG_UNITS.LIST}>\n          Department\n        </Breadcrumb.Item>\n        {props.data ? breadcrumbItems(props.data) : null}\n      </Breadcrumb>\n    </div>\n  );\n}\n\nBreadCrumb.propTypes = {\n  // eslint-disable-next-line react/require-default-props\n  orgId: PropTypes.number,\n  // eslint-disable-next-line react/require-default-props\n  data: PropTypes.array\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n    data: state.breadcrumbReducerStore.BREADCRUMB,\n    orgId: state.listReducerStore.orgId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, id) => {\n      dispatch(getActionsFormate(type, id));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BreadCrumb)\n);\n"]},"metadata":{},"sourceType":"module"}