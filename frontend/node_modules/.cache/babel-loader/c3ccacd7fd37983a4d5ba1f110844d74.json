{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.map = factory();\n})(this, function () {\n  'use strict'; // a timeout function that can be flushed and cancelled\n\n  var flushable = function flushable(onComplete, delay) {\n    var timeoutId = setTimeout(function () {\n      timeoutId = null;\n      onComplete(false);\n    }, delay);\n\n    var clearTimer = function clearTimer() {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n    };\n\n    return {\n      cancel: clearTimer,\n      flush: function flush() {\n        if (!timeoutId) {\n          return;\n        }\n\n        clearTimer();\n        onComplete(true);\n      },\n      pending: function pending() {\n        return Boolean(timeoutId);\n      }\n    };\n  };\n\n  return flushable;\n});","map":null,"metadata":{},"sourceType":"script"}