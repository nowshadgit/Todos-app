{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getAssetsList(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, \"\".concat(FOOTPRINTS_API.ASSETS_LIST, \"?limit=\").concat(action.data.limit, \"&offset=\").concat(action.data.offset));\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSETS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSETS_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.GET_ASSETS_LIST_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport { getAssetsList, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Assets/Assets.saga.js"],"names":["call","put","ACTIONS","FOOTPRINTS_API","getAssetsList","action","response","window","axios","getData","ASSETS_LIST","data","limit","offset","status","type","ASSETS","GET_ASSETS_LIST_SUCCESS","payload","GET_ASSETS_LIST_FAIL","ALERT_MESSAGE","FAIL","e","dummy"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,cAAT,QAA+B,4BAA/B;;AAEA,UAAUC,aAAV,CAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,QAAJ;;AACA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMN,IAAI,CACnBO,MAAM,CAACC,KAAP,CAAaC,OADM,YAEhBN,cAAc,CAACO,WAFC,oBAEoBL,MAAM,CAACM,IAAP,CAAYC,KAFhC,qBAEgDP,MAAM,CAACM,IAAP,CAAYE,MAF5D,EAArB;;AAIA,QAAIP,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMb,GAAG,CAAC;AACRc,QAAAA,IAAI,EAAEb,OAAO,CAACc,MAAR,CAAeC,uBADb;AAERC,QAAAA,OAAO,EAAEZ,QAAQ,CAACK;AAFV,OAAD,CAAT;AAID,KALD,MAKO;AACL,YAAMV,GAAG,CAAC;AACRc,QAAAA,IAAI,EAAEb,OAAO,CAACc,MAAR,CAAeG,oBADb;AAERD,QAAAA,OAAO,EAAEZ,QAAQ,CAACK;AAFV,OAAD,CAAT;AAIA,YAAMV,GAAG,CAAC;AACRc,QAAAA,IAAI,EAAEb,OAAO,CAACkB,aAAR,CAAsBC,IADpB;AAERH,QAAAA,OAAO,oBAAOZ,QAAQ,CAACK,IAAhB,MAAyBN,MAAM,CAACM,IAAhC;AAFC,OAAD,CAAT;AAID;AACF,GApBD,CAoBE,OAAOW,CAAP,EAAU;AACV,UAAMrB,GAAG,CAAC;AAAEc,MAAAA,IAAI,EAAEb,OAAO,CAACiB,oBAAhB;AAAsCD,MAAAA,OAAO,EAAEI;AAA/C,KAAD,CAAT;AACA,UAAMrB,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAEb,OAAO,CAACkB,aAAR,CAAsBC,IADpB;AAERH,MAAAA,OAAO,oBAAOZ,QAAQ,CAACK,IAAhB,MAAyBN,MAAM,CAACM,IAAhC;AAFC,KAAD,CAAT;AAID;AACF;;AAED,MAAMY,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAASnB,aAAT,EAAwBmB,KAAxB","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getAssetsList(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      `${FOOTPRINTS_API.ASSETS_LIST}?limit=${action.data.limit}&offset=${action.data.offset}`\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSETS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSETS_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.GET_ASSETS_LIST_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport { getAssetsList, dummy };\n"]},"metadata":{},"sourceType":"module"}