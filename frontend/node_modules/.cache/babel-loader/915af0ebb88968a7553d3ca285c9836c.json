{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { STORE } from '../../utils/constants';\nimport { getBreadcrumbs } from '../../utils/utils';\nconst initialState = {\n  data: {},\n  inProgress: false\n};\n\nconst breadcrumbReducerStore = (stateParam, {\n  type,\n  payload\n}) => {\n  const state = stateParam || initialState;\n\n  switch (type) {\n    case ACTIONS.BREADCRUMB.GET_BREADCRUMB:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.BREADCRUMB.GET_BREADCRUMB_SUCCESS:\n      {\n        const data = getBreadcrumbs(payload);\n        return _objectSpread({}, state, {\n          [STORE.BREADCRUMB]: data,\n          inProgress: false\n        });\n      }\n\n    case ACTIONS.BREADCRUMB.GET_BREADCRUMB_FAIL:\n      return _objectSpread({}, state, {\n        inProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\n\nexport { breadcrumbReducerStore, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/BreadCrumb/BreadCrumb.reducer.js"],"names":["ACTIONS","STORE","getBreadcrumbs","initialState","data","inProgress","breadcrumbReducerStore","stateParam","type","payload","state","BREADCRUMB","GET_BREADCRUMB","GET_BREADCRUMB_SUCCESS","GET_BREADCRUMB_FAIL","dummy"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;AAKA,MAAMC,sBAAsB,GAAG,CAACC,UAAD,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AAChE,QAAMC,KAAK,GAAGH,UAAU,IAAIJ,YAA5B;;AACA,UAAQK,IAAR;AACE,SAAKR,OAAO,CAACW,UAAR,CAAmBC,cAAxB;AACE,+BAAYF,KAAZ;AAAmBL,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKL,OAAO,CAACW,UAAR,CAAmBE,sBAAxB;AAAgD;AAC9C,cAAMT,IAAI,GAAGF,cAAc,CAACO,OAAD,CAA3B;AACA,iCAAYC,KAAZ;AAAmB,WAACT,KAAK,CAACU,UAAP,GAAoBP,IAAvC;AAA6CC,UAAAA,UAAU,EAAE;AAAzD;AACD;;AACD,SAAKL,OAAO,CAACW,UAAR,CAAmBG,mBAAxB;AACE,+BAAYJ,KAAZ;AAAmBL,QAAAA,UAAU,EAAE;AAA/B;;AACF;AACE,aAAOK,KAAP;AAVJ;AAYD,CAdD;;AAgBA,MAAMK,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAAST,sBAAT,EAAiCS,KAAjC","sourcesContent":["import ACTIONS from '../../apiConfig/actions.constants';\nimport { STORE } from '../../utils/constants';\nimport { getBreadcrumbs } from '../../utils/utils';\n\nconst initialState = {\n  data: {},\n  inProgress: false\n};\n\nconst breadcrumbReducerStore = (stateParam, { type, payload }) => {\n  const state = stateParam || initialState;\n  switch (type) {\n    case ACTIONS.BREADCRUMB.GET_BREADCRUMB:\n      return { ...state, inProgress: true };\n    case ACTIONS.BREADCRUMB.GET_BREADCRUMB_SUCCESS: {\n      const data = getBreadcrumbs(payload);\n      return { ...state, [STORE.BREADCRUMB]: data, inProgress: false };\n    }\n    case ACTIONS.BREADCRUMB.GET_BREADCRUMB_FAIL:\n      return { ...state, inProgress: false };\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\n\nexport { breadcrumbReducerStore, dummy };\n"]},"metadata":{},"sourceType":"module"}