{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomLogs/CustomLogs.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFormatedDate } from '../../utils/common';\nimport { LOG_TYPE } from '../../utils/constants';\nimport DataNotFound from '../DataNotFound/DataNotFound';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './CustomLogs.scss';\n\nconst CustomLogs = props => {\n  const historyData = props.historyData;\n  let historyKey = 0;\n  const showHistory = historyData && historyData instanceof Array && historyData.map(eachLog => {\n    historyKey += 1;\n    const timestamp = eachLog.timestamp,\n          attributes = eachLog.attributes,\n          logType = eachLog.log_type,\n          agent = eachLog.agent,\n          OrgUnit = eachLog.org_unit,\n          assignee = eachLog.assignee,\n          notes = eachLog.notes;\n    let agentName = '';\n    let assigneeName = '';\n\n    if (agent) {\n      const firstName = agent.first_name,\n            lastName = agent.last_name;\n      agentName = \"\".concat(firstName, \" \").concat(lastName);\n    }\n\n    if (assignee) {\n      const firstName = assignee.first_name,\n            lastName = assignee.last_name;\n      assigneeName = \"\".concat(firstName, \" \").concat(lastName);\n    }\n\n    let logsAttributs = [];\n    let attributeKey = 0;\n\n    if (attributes) {\n      logsAttributs = attributes instanceof Array && attributes.map(eachAttr => {\n        const Attribute = eachAttr.attribute,\n              AttributeValue = eachAttr.attribute_value;\n        attributeKey += 1;\n        return React.createElement(\"div\", {\n          className: \"history-log-body-value row\",\n          key: attributeKey,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"font-weight-bold col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, Attribute.name), React.createElement(\"span\", {\n          className: \"font-weight-bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \":\"), React.createElement(\"span\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, AttributeValue.name));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"history-item row\",\n      key: historyKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-4 ml-xl-n2 ml-md-n1 ml-n2 date-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, getFormatedDate(timestamp)), React.createElement(\"div\", {\n      className: \"\".concat(historyKey === historyData.length ? 'item-data last' : 'item-data', \" w-100 col col-7\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"border p-1 item-data-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-title pl-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, LOG_TYPE[logType]), agentName && React.createElement(\"div\", {\n      className: \"asset-changed-by mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUser,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"font-weight-bold ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, agentName)), logsAttributs.length > 0 && {\n      logsAttributs\n    }, OrgUnit && React.createElement(\"div\", {\n      className: \"history-log-body-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faMapMarkerAlt,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"history-log-body-value ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, OrgUnit.name, ' ')), assigneeName && React.createElement(\"div\", {\n      className: \"history-log-body-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"assignee:\", ' ', React.createElement(\"div\", {\n      className: \"history-log-body-value ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, ' ', assigneeName, ' ')), notes && React.createElement(\"div\", {\n      className: \"history-log-body-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"notes:\", ' ', React.createElement(\"div\", {\n      className: \"history-log-body-value ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, notes)))));\n  });\n  return React.createElement(\"div\", {\n    className: \"asset-history-detials border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"events w-100 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, showHistory && showHistory.length > 0 ? showHistory : React.createElement(DataNotFound, {\n    name: \"History\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })));\n};\n\nCustomLogs.propTypes = {\n  historyData: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};\nCustomLogs.defaultProps = {\n  historyData: []\n};\nexport default CustomLogs;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomLogs/CustomLogs.jsx"],"names":["React","PropTypes","getFormatedDate","LOG_TYPE","DataNotFound","faUser","faMapMarkerAlt","FontAwesomeIcon","CustomLogs","props","historyData","historyKey","showHistory","Array","map","eachLog","timestamp","attributes","logType","log_type","agent","OrgUnit","org_unit","assignee","notes","agentName","assigneeName","firstName","first_name","lastName","last_name","logsAttributs","attributeKey","eachAttr","Attribute","attribute","AttributeValue","attribute_value","name","length","propTypes","oneOfType","array","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFormatedDate } from '../../utils/common';\nimport { LOG_TYPE } from '../../utils/constants';\nimport DataNotFound from '../DataNotFound/DataNotFound';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './CustomLogs.scss';\nconst CustomLogs =props=> {\n    const { historyData} = props;\n    let historyKey = 0;\n    const showHistory =\n      historyData &&\n      historyData instanceof Array &&\n      historyData.map(eachLog => {\n        historyKey += 1;\n        const {\n          timestamp,\n          attributes,\n          log_type: logType,\n          agent,\n          org_unit: OrgUnit,\n          assignee,\n          notes\n        } = eachLog;\n        let agentName = '';\n        let assigneeName = '';\n        if (agent) {\n          const { first_name: firstName, last_name: lastName } = agent;\n          agentName = `${firstName} ${lastName}`;\n        }\n\n        if (assignee) {\n          const { first_name: firstName, last_name: lastName } = assignee;\n          assigneeName = `${firstName} ${lastName}`;\n        }\n\n        let logsAttributs = [];\n        let attributeKey = 0;\n        if (attributes) {\n          logsAttributs =\n            attributes instanceof Array &&\n            attributes.map(eachAttr => {\n              const {\n                attribute: Attribute,\n                attribute_value: AttributeValue\n              } = eachAttr;\n              attributeKey += 1;\n              return (\n                <div className=\"history-log-body-value row\" key={attributeKey}>\n                  <span className=\"font-weight-bold col\">{Attribute.name}</span>\n                  <span className=\"font-weight-bold\">:</span>\n                  <span className=\"col\">{AttributeValue.name}</span>\n                </div>\n              );\n            });\n        }\n\n        return (\n          <div className=\"history-item row\" key={historyKey}>\n            <div className=\"col col-4 ml-xl-n2 ml-md-n1 ml-n2 date-time\">\n              {getFormatedDate(timestamp)}\n            </div>\n            <div\n              className={`${\n                historyKey === historyData.length\n                  ? 'item-data last'\n                  : 'item-data'\n              } w-100 col col-7`}\n            >\n              <div className=\"border p-1 item-data-type\">\n                <div className=\"card-title pl-1\">{LOG_TYPE[logType]}</div>\n                {agentName && (\n                  <div className=\"asset-changed-by mb-1\">\n                    <FontAwesomeIcon icon={faUser} size=\"lg\" />\n                    <span className=\"font-weight-bold ml-2\">{agentName}</span>\n                  </div>\n                )}\n                {logsAttributs.length > 0 && { logsAttributs }}\n                {OrgUnit && (\n                  <div className=\"history-log-body-key\">\n                    <FontAwesomeIcon icon={faMapMarkerAlt} size=\"lg\" />\n                    <span className=\"history-log-body-value ml-2\">\n                      {OrgUnit.name}{' '}\n                    </span>\n                  </div>\n                )}\n                {assigneeName && (\n                  <div className=\"history-log-body-key\">\n                    assignee:{' '}\n                    <div className=\"history-log-body-value ml-2\">\n                      {' '}\n                      {assigneeName}{' '}\n                    </div>\n                  </div>\n                )}\n                {notes && (\n                  <div className=\"history-log-body-key\">\n                    notes:{' '}\n                    <div className=\"history-log-body-value ml-2\">{notes}</div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n      });\n      return (\n          <div className=\"asset-history-detials border-0\">\n            <div className=\"events w-100 \">\n                {showHistory && showHistory.length > 0 ? (\n                showHistory\n                ) : (\n                <DataNotFound name=\"History\" />\n                )}\n            </div>\n            </div>\n      )\n}\nCustomLogs.propTypes = {\n    historyData: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};\n  \nCustomLogs.defaultProps = {\n    historyData: []\n};\nexport default CustomLogs;"]},"metadata":{},"sourceType":"module"}