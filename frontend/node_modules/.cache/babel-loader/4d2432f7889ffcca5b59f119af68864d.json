{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomLogs/CustomLogs.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFormatedDate } from '../../utils/common';\nimport { LOG_TYPE } from '../../utils/constants';\nimport DataNotFound from '../DataNotFound/DataNotFound';\nimport { faUser, faFileAlt } from '@fortawesome/free-regular-svg-icons';\nimport { faMapMarkerAlt, faCodeBranch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './CustomLogs.scss';\n\nconst CustomLogs = props => {\n  const historyData = props.historyData;\n  let historyKey = 0;\n  console.log(\"logs:\", historyData);\n  const showHistory = historyData && historyData.results && historyData.results instanceof Array && historyData.results.map(eachLog => {\n    historyKey += 1;\n    const timestamp = eachLog.timestamp,\n          attributes = eachLog.attributes,\n          logType = eachLog.log_type,\n          agent = eachLog.agent,\n          OrgUnit = eachLog.org_unit,\n          assignee = eachLog.assignee,\n          logs = eachLog.logs;\n    let agentName = '';\n    let assigneeName = '';\n\n    if (agent) {\n      const firstName = agent.first_name,\n            lastName = agent.last_name;\n      agentName = \"\".concat(firstName, \" \").concat(lastName);\n    }\n\n    if (assignee) {\n      const firstName = assignee.first_name,\n            lastName = assignee.last_name;\n      assigneeName = \"\".concat(firstName, \" \").concat(lastName);\n    }\n\n    let logsAttributs = [];\n    let attributeKey = 0;\n\n    if (attributes) {\n      logsAttributs = attributes instanceof Array && attributes.map(eachAttr => {\n        const Attribute = eachAttr.attribute,\n              AttributeValue = eachAttr.attribute_value;\n        attributeKey += 1;\n        return React.createElement(\"div\", {\n          className: \"history-log-body-value row\",\n          key: attributeKey,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"font-weight-bold col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, Attribute.name), React.createElement(\"span\", {\n          className: \"font-weight-bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \":\"), React.createElement(\"span\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, AttributeValue.name));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"history-item row \",\n      key: historyKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-4 ml-xl-n2 ml-md-n1 ml-n2 date-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, getFormatedDate(timestamp)), React.createElement(\"div\", {\n      className: \"\".concat(historyKey === historyData.length ? 'item-data last' : 'item-data', \" w-100 col col-7\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"border p-2 item-data-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"item-data-title mb-2 pb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, LOG_TYPE[logType]), agentName && React.createElement(\"div\", {\n      className: \"history-log-body-value mb-2 row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"col col-3\",\n      icon: faUser,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \" history-log-body-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, agentName)), logsAttributs.length > 0 && {\n      logsAttributs\n    }, OrgUnit && React.createElement(\"div\", {\n      className: \"history-log-body-key mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faMapMarkerAlt,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"history-log-body-value ml-2 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, OrgUnit.name, ' ')), assigneeName && React.createElement(\"div\", {\n      className: \"history-log-body-key mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUser,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"history-log-body-value ml-2 mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, assigneeName, ' ')), logs && logs.notes && React.createElement(\"div\", {\n      className: \"history-log-body-key mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faFileAlt,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"history-log-body-value ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, logs.notes)), logs && React.createElement(\"span\", {\n      className: \"history-log-body-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"\",\n      icon: faCodeBranch,\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), logs.notes && React.createElement(\"span\", {\n      className: \"history-log-body-value ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"A note has been added\"), logs.attributes && logs.attributes.map(eachAtrlog => {\n      const attribute = eachAtrlog.attribute,\n            oldAttVal = eachAtrlog.old_attribute_value,\n            newAttVal = eachAtrlog.new_attribute_value;\n      return React.createElement(\"div\", {\n        className: \"history-log-log-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"The \", \" \", React.createElement(\"span\", {\n        className: \"history-log-log-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, attribute || '\"-\"'), \" value\", \" \", \" changed from \", \" \", React.createElement(\"span\", {\n        className: \"history-log-log-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, oldAttVal || '\"-\"'), \" to \", \" \", React.createElement(\"span\", {\n        className: \"history-log-log-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, newAttVal || ' \"-\"'));\n    })))));\n  });\n  return React.createElement(\"div\", {\n    className: \"asset-history-detials border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"events w-100 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, showHistory && showHistory.length > 0 ? showHistory : React.createElement(DataNotFound, {\n    name: \"History\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })));\n};\n\nCustomLogs.propTypes = {\n  historyData: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};\nCustomLogs.defaultProps = {\n  historyData: {}\n};\nexport default CustomLogs;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomLogs/CustomLogs.jsx"],"names":["React","PropTypes","getFormatedDate","LOG_TYPE","DataNotFound","faUser","faFileAlt","faMapMarkerAlt","faCodeBranch","FontAwesomeIcon","CustomLogs","props","historyData","historyKey","console","log","showHistory","results","Array","map","eachLog","timestamp","attributes","logType","log_type","agent","OrgUnit","org_unit","assignee","logs","agentName","assigneeName","firstName","first_name","lastName","last_name","logsAttributs","attributeKey","eachAttr","Attribute","attribute","AttributeValue","attribute_value","name","length","notes","eachAtrlog","oldAttVal","old_attribute_value","newAttVal","new_attribute_value","propTypes","oneOfType","array","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFormatedDate } from '../../utils/common';\nimport { LOG_TYPE } from '../../utils/constants';\nimport DataNotFound from '../DataNotFound/DataNotFound';\nimport { faUser, faFileAlt } from '@fortawesome/free-regular-svg-icons';\nimport { faMapMarkerAlt, faCodeBranch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './CustomLogs.scss';\nconst CustomLogs =props=> {\n    const { historyData} = props;\n    let historyKey = 0;\n    console.log(\"logs:\", historyData)\n    const showHistory =\n      historyData &&  historyData.results &&\n      historyData.results instanceof Array &&\n      historyData.results.map(eachLog => {\n        historyKey += 1;\n        const {\n          timestamp,\n          attributes,\n          log_type: logType,\n          agent,\n          org_unit: OrgUnit,\n          assignee,\n          logs,\n        } = eachLog;\n        let agentName = '';\n        let assigneeName = '';\n        if (agent) {\n          const { first_name: firstName, last_name: lastName } = agent;\n          agentName = `${firstName} ${lastName}`;\n        }\n\n        if (assignee) {\n          const { first_name: firstName, last_name: lastName } = assignee;\n          assigneeName = `${firstName} ${lastName}`;\n        }\n\n        let logsAttributs = [];\n        let attributeKey = 0;\n        if (attributes) {\n          logsAttributs =\n            attributes instanceof Array &&\n            attributes.map(eachAttr => {\n              const {\n                attribute: Attribute,\n                attribute_value: AttributeValue\n              } = eachAttr;\n              attributeKey += 1;\n              return (\n                <div className=\"history-log-body-value row\" key={attributeKey}>\n                  <span className=\"font-weight-bold col\">{Attribute.name}</span>\n                  <span className=\"font-weight-bold\">:</span>\n                  <span className=\"col\">{AttributeValue.name}</span>\n                </div>\n              );\n            });\n        }\n\n        return (\n          <div className=\"history-item row \" key={historyKey}>\n            <div className=\"col col-4 ml-xl-n2 ml-md-n1 ml-n2 date-time\">\n              {getFormatedDate(timestamp)}\n            </div>\n            <div\n              className={`${\n                historyKey === historyData.length\n                  ? 'item-data last'\n                  : 'item-data'\n              } w-100 col col-7`}\n            >\n              <div className=\"border p-2 item-data-type\">\n                <div className=\"item-data-title mb-2 pb-1\">{LOG_TYPE[logType]}</div>\n                {agentName && (\n                  <div className=\"history-log-body-value mb-2 row\">\n                    <FontAwesomeIcon className=\"col col-3\" icon={faUser} size=\"lg\" />\n                    <span className=\" history-log-body-value\">{agentName}</span>\n                  </div>\n                )}\n                {logsAttributs.length > 0 && { logsAttributs }}\n                {OrgUnit && (\n                  <div className=\"history-log-body-key mb-2\">\n                    <FontAwesomeIcon icon={faMapMarkerAlt} size=\"lg\" />\n                    <span className=\"history-log-body-value ml-2 \">\n                      {OrgUnit.name}{' '}\n                    </span>\n                  </div>\n                )}\n                {assigneeName && (\n                  <div className=\"history-log-body-key mb-2\">\n                     <FontAwesomeIcon icon={faUser} size=\"lg\" />\n                    <span className=\"history-log-body-value ml-2 mb-1\">\n                      {assigneeName}{' '}\n                    </span>\n                  </div>\n                )}\n                {logs && logs.notes && (\n                  <div className=\"history-log-body-key mb-2\">\n                     <FontAwesomeIcon icon={faFileAlt} size=\"lg\" />\n                    <div className=\"history-log-body-value ml-2\">{logs.notes}</div>\n                  </div>\n                )}\n\n                {logs &&  (\n                <span className=\"history-log-body-key\">\n                    <FontAwesomeIcon className=\"\" icon={faCodeBranch} size=\"lg\" />\n                    {logs.notes && <span className=\"history-log-body-value ml-2\">A note has been added</span>}\n                    {logs.attributes && logs.attributes.map(eachAtrlog=>{\n                      const {attribute, old_attribute_value: oldAttVal, new_attribute_value: newAttVal} = eachAtrlog;\n                      return(\n                        <div className=\"history-log-log-header\">The {\" \"}\n                          <span className=\"history-log-log-value\">{attribute || '\"-\"'}</span> value{\" \"} changed from {\" \"}\n                          <span className=\"history-log-log-value\">{oldAttVal || '\"-\"' }</span> to {\" \"} \n                          <span className=\"history-log-log-value\">{newAttVal || ' \"-\"'}</span>\n                        </div>\n                       )\n                    })\n                     \n                    }\n                </span>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n      });\n      return (\n          <div className=\"asset-history-detials border-0\">\n            <div className=\"events w-100 \">\n                {showHistory && showHistory.length > 0 ? (\n                showHistory\n                ) : (\n                <DataNotFound name=\"History\" />\n                )}\n            </div>\n            </div>\n      )\n}\nCustomLogs.propTypes = {\n    historyData: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};\n  \nCustomLogs.defaultProps = {\n    historyData: {}\n};\nexport default CustomLogs;"]},"metadata":{},"sourceType":"module"}