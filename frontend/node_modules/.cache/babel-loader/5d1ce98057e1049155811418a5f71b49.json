{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { userSessionCookie } from '../../config';\nimport { setSession } from '../../utils/authService';\nimport ACTIONS from '../../apiConfig/actions.constants';\nconst initialState = {\n  data: {},\n  error: {\n    count: 0,\n    message: ''\n  },\n  inProgress: false\n};\n\nconst loginStore = (stateParam, {\n  type,\n  payload\n}) => {\n  const state = stateParam || initialState;\n\n  switch (type) {\n    case ACTIONS.AUTH.LOGIN:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.AUTH.LOGIN_SUCCESS:\n      setSession(_objectSpread({}, payload.data), userSessionCookie);\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.AUTH.LOGIN_FAIL:\n      return _objectSpread({}, state, {\n        error: {\n          errorCode: payload.error_code,\n          count: state.error.count + 1\n        },\n        inProgress: false\n      });\n\n    case ACTIONS.AUTH.RESET_STATE:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\n\nexport { loginStore, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/containers/Login/Login.reducer.js"],"names":["userSessionCookie","setSession","ACTIONS","initialState","data","error","count","message","inProgress","loginStore","stateParam","type","payload","state","AUTH","LOGIN","LOGIN_SUCCESS","LOGIN_FAIL","errorCode","error_code","RESET_STATE","dummy"],"mappings":";;;;;;AAAA,SAASA,iBAAT,QAAkC,cAAlC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,CADF;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAFY;AAMnBC,EAAAA,UAAU,EAAE;AANO,CAArB;;AASA,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AACpD,QAAMC,KAAK,GAAGH,UAAU,IAAIP,YAA5B;;AACA,UAAQQ,IAAR;AACE,SAAKT,OAAO,CAACY,IAAR,CAAaC,KAAlB;AACE,+BAAYF,KAAZ;AAAmBL,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKN,OAAO,CAACY,IAAR,CAAaE,aAAlB;AACEf,MAAAA,UAAU,mBAAMW,OAAO,CAACR,IAAd,GAAsBJ,iBAAtB,CAAV;AACA,+BAAYa,KAAZ;AAAmBT,QAAAA,IAAI,EAAEQ,OAAzB;AAAkCJ,QAAAA,UAAU,EAAE;AAA9C;;AACF,SAAKN,OAAO,CAACY,IAAR,CAAaG,UAAlB;AACE,+BACKJ,KADL;AAEER,QAAAA,KAAK,EAAE;AAAEa,UAAAA,SAAS,EAAEN,OAAO,CAACO,UAArB;AAAiCb,UAAAA,KAAK,EAAEO,KAAK,CAACR,KAAN,CAAYC,KAAZ,GAAoB;AAA5D,SAFT;AAGEE,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKN,OAAO,CAACY,IAAR,CAAaM,WAAlB;AACE,aAAOjB,YAAP;;AACF;AACE,aAAOU,KAAP;AAfJ;AAiBD,CAnBD;;AAqBA,MAAMQ,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAASZ,UAAT,EAAqBY,KAArB","sourcesContent":["import { userSessionCookie } from '../../config';\nimport { setSession } from '../../utils/authService';\nimport ACTIONS from '../../apiConfig/actions.constants';\n\nconst initialState = {\n  data: {},\n  error: {\n    count: 0,\n    message: ''\n  },\n  inProgress: false\n};\n\nconst loginStore = (stateParam, { type, payload }) => {\n  const state = stateParam || initialState;\n  switch (type) {\n    case ACTIONS.AUTH.LOGIN:\n      return { ...state, inProgress: true };\n    case ACTIONS.AUTH.LOGIN_SUCCESS:\n      setSession({ ...payload.data }, userSessionCookie);\n      return { ...state, data: payload, inProgress: false };\n    case ACTIONS.AUTH.LOGIN_FAIL:\n      return {\n        ...state,\n        error: { errorCode: payload.error_code, count: state.error.count + 1 },\n        inProgress: false\n      };\n    case ACTIONS.AUTH.RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\n\nexport { loginStore, dummy };\n"]},"metadata":{},"sourceType":"module"}