{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page; // const {fetchList} = pageConfig[page] && pageConfig[page].actions;\n    // fetchList && makeCall(fetchList);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          page = _this$props2.page,\n          dataCard = _this$props2.dataCard;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          headerActions = _pageConfig$page.headerActions,\n          handler = _pageConfig$page.handler;\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: headerActions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(DataCards, {\n      data: dataCard,\n      actions: handler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  dataCard: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const page = props.page;\n  const respectedStore = pageConfig[page].store && pageConfig[page].store.storedList;\n  return {\n    dataCard: state.listReducerStore[respectedStore]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","DataCards","ListPage","Component","componentDidMount","props","makeCall","page","render","dataCard","pageTitle","headerActions","handler","propTypes","string","isRequired","func","oneOfType","array","object","defaultProps","mapStateToProps","state","respectedStore","store","storedList","listReducerStore","mapDispatchToProps","dispatch","type","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,wBACS,KAAKC,KADd;AAAA,UACVC,QADU,eACVA,QADU;AAAA,UACAC,IADA,eACAA,IADA,EAElB;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBACoB,KAAKH,KADzB;AAAA,UACCE,IADD,gBACCA,IADD;AAAA,UACOE,QADP,gBACOA,QADP;AAAA,6BAEuCX,UAAU,CAACS,IAAD,CAFjD;AAAA,UAECG,SAFD,oBAECA,SAFD;AAAA,UAEYC,aAFZ,oBAEYA,aAFZ;AAAA,UAE2BC,OAF3B,oBAE2BA,OAF3B;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEF,SAAnB;AAA8B,MAAA,OAAO,EAAEC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEF,QAAjB;AAA2B,MAAA,OAAO,EAAEG,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF;AAOD;;AAjBoC;;AAoBvCV,QAAQ,CAACW,SAAT,GAAqB;AACnBN,EAAAA,IAAI,EAAEZ,SAAS,CAACmB,MAAV,CAAiBC,UADJ;AAEnBT,EAAAA,QAAQ,EAAEX,SAAS,CAACqB,IAAV,CAAeD,UAFN;AAGnBN,EAAAA,QAAQ,EAAEd,SAAS,CAACsB,SAAV,CAAoB,CAC5BtB,SAAS,CAACuB,KADkB,EAE5BvB,SAAS,CAACwB,MAFkB,CAApB,EAGPJ;AANgB,CAArB;AASAb,QAAQ,CAACkB,YAAT,GAAwB,EAAxB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQjB,KAAR,KAAkB;AAAA,QACjCE,IADiC,GAC1BF,KAD0B,CACjCE,IADiC;AAExC,QAAMgB,cAAc,GAAGzB,UAAU,CAACS,IAAD,CAAV,CAAiBiB,KAAjB,IAA0B1B,UAAU,CAACS,IAAD,CAAV,CAAiBiB,KAAjB,CAAuBC,UAAxE;AACA,SAAM;AACJhB,IAAAA,QAAQ,EAAEa,KAAK,CAACI,gBAAN,CAAuBH,cAAvB;AADN,GAAN;AAGD,CAND;;AAQA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLtB,IAAAA,QAAQ,EAAE,CAACuB,IAAD,EAAOC,IAAP,KAAgB;AACxBF,MAAAA,QAAQ,CAAC5B,iBAAiB,CAAC6B,IAAD,EAAOC,IAAP,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAejC,UAAU,CACvBD,OAAO,CACLyB,eADK,EAELM,kBAFK,CAAP,CAGEzB,QAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const { makeCall, page } = this.props;\n    // const {fetchList} = pageConfig[page] && pageConfig[page].actions;\n    // fetchList && makeCall(fetchList);\n  }\n\n  render() {\n    const { page, dataCard } = this.props;\n    const { pageTitle, headerActions, handler } = pageConfig[page];\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={headerActions} />\n        <DataCards data={dataCard} actions={handler}/>\n        <div>Hello world</div>\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  dataCard: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object\n  ]).isRequired,\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const {page} =props;\n  const respectedStore = pageConfig[page].store && pageConfig[page].store.storedList;\n  return{\n    dataCard: state.listReducerStore[respectedStore]\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}