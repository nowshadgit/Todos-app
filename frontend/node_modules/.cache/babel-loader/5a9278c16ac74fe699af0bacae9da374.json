{"ast":null,"code":"import { all, takeEvery, call, put } from 'redux-saga/effects';\nimport ACTIONS from './apiConfig/actions.constants';\nimport { loginSaga } from './containers/Login/Login.saga';\nimport { forgotPasswordSaga, passwordResetSaga, tokenVerifyRequest } from './containers/PasswordReset/PasswordReset.saga';\nimport { changePasswordSaga } from './containers/ChangePassword/ChangePassword.saga';\nimport { getUserList, getOrgUnitsList, getOrgDetails, getAssetAttributes, getAssetTypes } from './containers/ListPage/ListPage.saga';\nimport { getBreadcrumb } from './containers/BreadCrumb/BreadCrumb.saga';\nimport { getUserDetails, getAssetTypesDetails, getAssetAttributesDetails } from './containers/Details/Details.saga';\nimport { createUser, updateUser, getUserDepartments } from './containers/AddEditUser/AddEditUser.saga';\nimport { addOrgUnit, updateOrgUnit } from './containers/AddEditOrgUnits/AddEditOrgUnits.saga';\nimport { FOOTPRINTS_API } from './apiConfig/api.config';\nimport { getAssetsList } from './containers/Assets/Assets.saga';\n\nfunction* getAllOrgUnit(action) {\n  let response;\n\n  try {\n    const url = \"\".concat(FOOTPRINTS_API.ORG_UNIT_ALL, \"?flat_list=false\");\n    response = yield call(window.axios.getData, url, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport default (() => all([takeEvery(ACTIONS.AUTH.LOGIN, loginSaga), takeEvery(ACTIONS.PASSWORD_RESET.PASSWORD_RESET, passwordResetSaga), takeEvery(ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD, forgotPasswordSaga), takeEvery(ACTIONS.PROFILE.CHANGE_PASSWORD, changePasswordSaga), takeEvery(ACTIONS.PASSWORD_RESET.VERIFY_TOKEN, tokenVerifyRequest), takeEvery(ACTIONS.USERS.GET_USER_LIST, getUserList), takeEvery(ACTIONS.USERS.GET_USER_INFO, getUserDetails), takeEvery(ACTIONS.USERS.ADD_USER, createUser), takeEvery(ACTIONS.USERS.UPDATE_USER, updateUser), takeEvery(ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST, getOrgUnitsList), takeEvery(ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS, getOrgDetails), takeEvery(ACTIONS.USERS.GET_USER_DEPARTMENTS, getUserDepartments), takeEvery(ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES, getAssetAttributes), takeEvery(ACTIONS.ASSET_TYPES.GET_ASSET_TYPES, getAssetTypes), takeEvery(ACTIONS.ORG_UNITS.ADD_ORG_UNIT, addOrgUnit), takeEvery(ACTIONS.BREADCRUMB.GET_BREADCRUMB, getBreadcrumb), takeEvery(ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS, getAssetTypesDetails), takeEvery(ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS, getAssetAttributesDetails), takeEvery(ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT, getAllOrgUnit), takeEvery(ACTIONS.ORG_UNITS.UPDATE_ORG_UNIT, updateOrgUnit), takeEvery(ACTIONS.ASSETS.GET_ASSETS_LIST, getAssetsList)]));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/rootSaga.js"],"names":["all","takeEvery","call","put","ACTIONS","loginSaga","forgotPasswordSaga","passwordResetSaga","tokenVerifyRequest","changePasswordSaga","getUserList","getOrgUnitsList","getOrgDetails","getAssetAttributes","getAssetTypes","getBreadcrumb","getUserDetails","getAssetTypesDetails","getAssetAttributesDetails","createUser","updateUser","getUserDepartments","addOrgUnit","updateOrgUnit","FOOTPRINTS_API","getAssetsList","getAllOrgUnit","action","response","url","ORG_UNIT_ALL","window","axios","getData","data","status","type","ORG_UNITS","GET_ALL_ORG_UNIT_SUCCESS","payload","GET_ALL_ORG_UNIT_FAIL","e","AUTH","LOGIN","PASSWORD_RESET","FORGOT_PASSWORD","PROFILE","CHANGE_PASSWORD","VERIFY_TOKEN","USERS","GET_USER_LIST","GET_USER_INFO","ADD_USER","UPDATE_USER","GET_ORG_UNITS_LIST","GET_ORG_UNITS_DETAILS","GET_USER_DEPARTMENTS","ASSET_ATTRIBUTES","GET_ASSET_ATTRIBUTES","ASSET_TYPES","GET_ASSET_TYPES","ADD_ORG_UNIT","BREADCRUMB","GET_BREADCRUMB","ASSET_TYPES_DETAILS","ASSET_ATTRIBUTES_DETAILS","GET_ALL_ORG_UNIT","UPDATE_ORG_UNIT","ASSETS","GET_ASSETS_LIST"],"mappings":"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","sourcesContent":["import { all, takeEvery, call, put } from 'redux-saga/effects';\n\nimport ACTIONS from './apiConfig/actions.constants';\nimport { loginSaga } from './containers/Login/Login.saga';\nimport {\n  forgotPasswordSaga,\n  passwordResetSaga,\n  tokenVerifyRequest\n} from './containers/PasswordReset/PasswordReset.saga';\nimport { changePasswordSaga } from './containers/ChangePassword/ChangePassword.saga';\nimport {\n  getUserList,\n  getOrgUnitsList,\n  getOrgDetails,\n  getAssetAttributes,\n  getAssetTypes\n} from './containers/ListPage/ListPage.saga';\nimport { getBreadcrumb } from './containers/BreadCrumb/BreadCrumb.saga';\nimport {\n  getUserDetails,\n  getAssetTypesDetails,\n  getAssetAttributesDetails\n} from './containers/Details/Details.saga';\nimport {\n  createUser,\n  updateUser,\n  getUserDepartments\n} from './containers/AddEditUser/AddEditUser.saga';\nimport {\n  addOrgUnit,\n  updateOrgUnit\n} from './containers/AddEditOrgUnits/AddEditOrgUnits.saga';\nimport { FOOTPRINTS_API } from './apiConfig/api.config';\nimport { getAssetsList } from './containers/Assets/Assets.saga';\n\nfunction* getAllOrgUnit(action) {\n  let response;\n  try {\n    const url = `${FOOTPRINTS_API.ORG_UNIT_ALL}?flat_list=false`;\n    response = yield call(window.axios.getData, url, action.data);\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport default () =>\n  all([\n    takeEvery(ACTIONS.AUTH.LOGIN, loginSaga),\n    takeEvery(ACTIONS.PASSWORD_RESET.PASSWORD_RESET, passwordResetSaga),\n    takeEvery(ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD, forgotPasswordSaga),\n    takeEvery(ACTIONS.PROFILE.CHANGE_PASSWORD, changePasswordSaga),\n    takeEvery(ACTIONS.PASSWORD_RESET.VERIFY_TOKEN, tokenVerifyRequest),\n    takeEvery(ACTIONS.USERS.GET_USER_LIST, getUserList),\n    takeEvery(ACTIONS.USERS.GET_USER_INFO, getUserDetails),\n    takeEvery(ACTIONS.USERS.ADD_USER, createUser),\n    takeEvery(ACTIONS.USERS.UPDATE_USER, updateUser),\n    takeEvery(ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST, getOrgUnitsList),\n    takeEvery(ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS, getOrgDetails),\n    takeEvery(ACTIONS.USERS.GET_USER_DEPARTMENTS, getUserDepartments),\n    takeEvery(\n      ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES,\n      getAssetAttributes\n    ),\n    takeEvery(ACTIONS.ASSET_TYPES.GET_ASSET_TYPES, getAssetTypes),\n    takeEvery(ACTIONS.ORG_UNITS.ADD_ORG_UNIT, addOrgUnit),\n    takeEvery(ACTIONS.BREADCRUMB.GET_BREADCRUMB, getBreadcrumb),\n    takeEvery(ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS, getAssetTypesDetails),\n    takeEvery(\n      ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS,\n      getAssetAttributesDetails\n    ),\n    takeEvery(ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT, getAllOrgUnit),\n    takeEvery(ACTIONS.ORG_UNITS.UPDATE_ORG_UNIT, updateOrgUnit),\n    takeEvery(ACTIONS.ASSETS.GET_ASSETS_LIST, getAssetsList)\n  ]);\n"]},"metadata":{},"sourceType":"module"}