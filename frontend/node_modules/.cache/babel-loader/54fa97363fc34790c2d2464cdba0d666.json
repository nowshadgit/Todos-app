{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Tooltip from '@atlaskit/tooltip';\nimport Select, { components } from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n  if (props.isHidden) {\n    return React.createElement(components.Input, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    content: \"Custom Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(components.Input, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }))));\n};\n\nconst colourStyles = {\n  control: styles => _objectSpread({}, styles, {\n    backgroundColor: 'white',\n    border: 'none',\n    borderBottom: '1px solid #b9b9b9',\n    borderRadius: '0px'\n  }),\n  option: styles => _objectSpread({}, styles),\n  input: styles => _objectSpread({}, styles),\n  placeholder: styles => _objectSpread({}, styles),\n  singleValue: styles => _objectSpread({}, styles)\n};\n\nconst CustomSelect = props => {\n  return (// <div className=\"col col-6\">\n    React.createElement(Select, {\n      closeMenuOnSelect: false,\n      components: {\n        Input\n      },\n      onChange: props.onChange,\n      options: props.departmentsFieldValue,\n      isMulti: true,\n      placeholder: \"Roles\",\n      styles: colourStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }) // </div>\n\n  );\n};\n\nCustomSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  departmentsFieldValue: PropTypes.string.isRequired\n};\nInput.propTypes = {\n  isHidden: PropTypes.bool.isRequired\n};\nCustomSelect.defaultProps = {};\nexport default CustomSelect;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx"],"names":["React","Tooltip","Select","components","PropTypes","Input","props","isHidden","colourStyles","control","styles","backgroundColor","border","borderBottom","borderRadius","option","input","placeholder","singleValue","CustomSelect","onChange","departmentsFieldValue","propTypes","func","isRequired","string","bool","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,MAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,WAAO,oBAAC,UAAD,CAAY,KAAZ,oBAAsBD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,CAAY,KAAZ,oBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD,CAXD;;AAaA,MAAME,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAEC,MAAM,sBAAUA,MAAV;AAAkBC,IAAAA,eAAe,EAAE,OAAnC;AAA4CC,IAAAA,MAAM,EAAC,MAAnD;AACdC,IAAAA,YAAY,EAAC,mBADC;AACoBC,IAAAA,YAAY,EAAC;AADjC,IADI;AAGnBC,EAAAA,MAAM,EAAEL,MAAM,sBAAQA,MAAR,CAHK;AAInBM,EAAAA,KAAK,EAAEN,MAAM,sBAAUA,MAAV,CAJM;AAKnBO,EAAAA,WAAW,EAAEP,MAAM,sBAAUA,MAAV,CALA;AAMnBQ,EAAAA,WAAW,EAAGR,MAAD,sBAAkBA,MAAlB;AANM,CAArB;;AASA,MAAMS,YAAY,GAAGb,KAAK,IAAI;AAC5B,SACE;AACA,wBAAC,MAAD;AACE,MAAA,iBAAiB,EAAE,KADrB;AAEE,MAAA,UAAU,EAAE;AAAED,QAAAA;AAAF,OAFd;AAGE,MAAA,QAAQ,EAAEC,KAAK,CAACc,QAHlB;AAIE,MAAA,OAAO,EAAEd,KAAK,CAACe,qBAJjB;AAKE,MAAA,OAAO,MALT;AAME,MAAA,WAAW,EAAC,OANd;AAOE,MAAA,MAAM,EAAEb,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAWE;;AAXF;AAaD,CAdD;;AAeAW,YAAY,CAACG,SAAb,GAAyB;AACvBF,EAAAA,QAAQ,EAAEhB,SAAS,CAACmB,IAAV,CAAeC,UADF;AAEvBH,EAAAA,qBAAqB,EAAEjB,SAAS,CAACqB,MAAV,CAAiBD;AAFjB,CAAzB;AAIAnB,KAAK,CAACiB,SAAN,GAAkB;AAChBf,EAAAA,QAAQ,EAAEH,SAAS,CAACsB,IAAV,CAAeF;AADT,CAAlB;AAGAL,YAAY,CAACQ,YAAb,GAA4B,EAA5B;AAEA,eAAeR,YAAf","sourcesContent":["import React from 'react';\nimport Tooltip from '@atlaskit/tooltip';\nimport Select, { components } from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n  if (props.isHidden) {\n    return <components.Input {...props} />;\n  }\n  return (\n    <div>\n      <Tooltip content=\"Custom Input\">\n        <components.Input {...props} />\n      </Tooltip>\n    </div>\n  );\n};\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white', border:'none',\n   borderBottom:'1px solid #b9b9b9', borderRadius:'0px' }),\n  option: styles=>({ ...styles }),\n  input: styles => ({ ...styles }),\n  placeholder: styles => ({ ...styles }),\n  singleValue: (styles) => ({ ...styles }),\n};\n\nconst CustomSelect = props => {\n  return (\n    // <div className=\"col col-6\">\n    <Select\n      closeMenuOnSelect={false}\n      components={{ Input }}\n      onChange={props.onChange}\n      options={props.departmentsFieldValue}\n      isMulti\n      placeholder=\"Roles\"\n      styles={colourStyles}\n    />\n    // </div>\n  );\n};\nCustomSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  departmentsFieldValue: PropTypes.string.isRequired\n};\nInput.propTypes = {\n  isHidden: PropTypes.bool.isRequired\n};\nCustomSelect.defaultProps = {};\n\nexport default CustomSelect;\n"]},"metadata":{},"sourceType":"module"}