{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail, getErrorResMsg } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate, getOrgUnitIds, getNormalId, getSelectedRolesFormate } from '../../utils/common';\nimport { ROLES, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport PageLoader from '../../components/PageLoader/PageLoader';\n\nclass AddEditUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.FIRST_NAME_FIELD_ID = 'aeu-fname';\n    this.LAST_NAME_FIELD_ID = 'aeu-lname';\n    this.EMAIL_FIELD_ID = 'aeu-email';\n    this.ORG_UNITS_FIELD_ID = 'select-org-units';\n    this.USER_ROLES_ID = 'user-roles';\n    this.PRE_ORG_UNITS = 'selected-org-units';\n    this.PRE_ROLES = 'selected-roles';\n\n    this.validateForm = () => {\n      const _checkEmail = checkEmail(this.state[this.EMAIL_FIELD_ID], 'Email'),\n            _checkEmail2 = _slicedToArray(_checkEmail, 2),\n            emailValidity = _checkEmail2[0],\n            emailErrors = _checkEmail2[1];\n\n      const formValidity = emailValidity;\n\n      const formErrors = _objectSpread({}, emailErrors);\n\n      this.setState({\n        formValidity,\n        formErrors\n      });\n      return formValidity;\n    };\n\n    this.enableSubmit = (email, firstName, lastName, departments, userRoles) => {\n      const disabled = !(email.length > 0 && firstName.length > 0 && lastName.length > 0 && departments.length > 0 && userRoles.length > 0);\n\n      if (this.props.errorCode) {\n        const type = ACTIONS.USERS.RESET_STATE;\n        this.props.resetState(type);\n        this.setState({\n          errorCode: ''\n        });\n      }\n\n      this.setState({\n        disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.ORG_UNITS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.handleOrgUnit = (currentNode, selectedNodes) => {\n      this.setState({\n        [this.ORG_UNITS_FIELD_ID]: getOrgUnitIds(selectedNodes),\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.ORG_UNITS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.handleRoles = event => {\n      this.setState({\n        [this.USER_ROLES_ID]: event || [],\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.ORG_UNITS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.getUserRoleIds = userRoles => {\n      const userRolesIds = userRoles.map(role => {\n        return role.value;\n      });\n      return userRolesIds;\n    };\n\n    this.getRolesFormate = () => {\n      let id = 0;\n      const userRoles = Object.values(ROLES).map(role => {\n        id += 1;\n        return {\n          value: id,\n          label: role\n        };\n      });\n      return userRoles;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.validateForm()) {\n        const data = this.props.page === PAGE.ADD_USER ? {\n          email: this.state[this.EMAIL_FIELD_ID],\n          first_name: this.state[this.FIRST_NAME_FIELD_ID],\n          last_name: this.state[this.LAST_NAME_FIELD_ID],\n          department: this.state[this.ORG_UNITS_FIELD_ID],\n          user_roles: this.getUserRoleIds(this.state[this.USER_ROLES_ID])\n        } : {\n          first_name: this.state[this.FIRST_NAME_FIELD_ID],\n          last_name: this.state[this.LAST_NAME_FIELD_ID]\n        };\n        const type = pageConfig[this.props.page].actions.postData;\n        this.props.submit(type, {\n          data,\n          props: _objectSpread({}, this.props)\n        });\n      }\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.ORG_UNITS_FIELD_ID]: [],\n      [this.USER_ROLES_ID]: [],\n      [this.PRE_ORG_UNITS]: [],\n      [this.PRE_ROLES]: [],\n      errorCode: '',\n      disabled: true,\n      departmentMode: 'multiSelect',\n      firstRender: true\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          page = _this$props.page,\n          getUserData = _this$props.getUserData,\n          match = _this$props.match;\n    const utype = pageConfig[page].actions.fetchUser;\n\n    if (utype) {\n      const params = match.params;\n      getUserData(utype, _objectSpread({}, params, {\n        page\n      }));\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const errorCode = nextProps.errorCode;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_USER);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    if (nextProps.page === PAGE.UPDATE_USER && prevState.firstRender && nextProps.userData && Object.values(nextProps.userData).length > 0) {\n      const _nextProps$userData = nextProps.userData,\n            email = _nextProps$userData.email,\n            firstName = _nextProps$userData.first_name,\n            lastName = _nextProps$userData.last_name,\n            orgUnits = _nextProps$userData.org_units,\n            groups = _nextProps$userData.groups;\n      return {\n        'aeu-fname': firstName,\n        'aeu-lname': lastName,\n        'aeu-email': email,\n        'selected-org-units': orgUnits,\n        'select-org-units': getNormalId(orgUnits),\n        'user-roles': getSelectedRolesFormate(groups),\n        firstRender: false\n      };\n    }\n\n    return prevState;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          page = _this$props2.page,\n          inProgress = _this$props2.inProgress;\n    const pageTitle = pageConfig[page].pageTitle;\n    const showPageLoader = inProgress && this.state.disabled && page === PAGE.UPDATE_USER;\n    console.log(\"Ids:\", this.state[this.USER_ROLES_ID]);\n    return React.createElement(\"div\", {\n      className: \"add-edit-user\",\n      id: \"add-edit-user-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(PageLoader, {\n      inProgress: showPageLoader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(AddEditUserForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleOrgUnit: this.handleOrgUnit,\n      firstNameFieldId: this.FIRST_NAME_FIELD_ID,\n      lastNameFieldId: this.LAST_NAME_FIELD_ID,\n      emailFieldId: this.EMAIL_FIELD_ID,\n      firstNameFieldValue: this.state[this.FIRST_NAME_FIELD_ID],\n      lastNameFieldValue: this.state[this.LAST_NAME_FIELD_ID],\n      emailFieldValue: this.state[this.EMAIL_FIELD_ID],\n      handleChangeRoles: this.handleRoles,\n      userRolesId: this.USER_ROLES_ID,\n      userRoleValues: this.getRolesFormate(),\n      formErrors: this.state.formErrors,\n      disabled: this.state.disabled,\n      page: page,\n      mode: this.state.departmentMode,\n      selectedOrgUnits: this.state[this.PRE_ORG_UNITS],\n      inProgress: inProgress,\n      existedValues: this.state[this.USER_ROLES_ID],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  match: PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  resetState: PropTypes.func.isRequired,\n  userData: PropTypes.array.isRequired,\n  inProgress: PropTypes.bool.isRequired\n};\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditUserReducerStore.errorCode,\n  userData: state.DetailsReducerStore.data,\n  inProgress: state.addEditUserReducerStore.inProgress || state.addEditUserReducerStore.inProgress\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditUser));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx"],"names":["React","connect","withRouter","PropTypes","AddEditUserForm","checkEmail","getErrorResMsg","PageHeader","pageConfig","getActionsFormate","getOrgUnitIds","getNormalId","getSelectedRolesFormate","ROLES","PAGE","ACTIONS","PageLoader","AddEditUser","Component","constructor","props","FIRST_NAME_FIELD_ID","LAST_NAME_FIELD_ID","EMAIL_FIELD_ID","ORG_UNITS_FIELD_ID","USER_ROLES_ID","PRE_ORG_UNITS","PRE_ROLES","validateForm","state","emailValidity","emailErrors","formValidity","formErrors","setState","enableSubmit","email","firstName","lastName","departments","userRoles","disabled","length","errorCode","type","USERS","RESET_STATE","resetState","handleChange","event","target","id","value","handleOrgUnit","currentNode","selectedNodes","handleRoles","getUserRoleIds","userRolesIds","map","role","getRolesFormate","Object","values","label","handleSubmit","preventDefault","data","page","ADD_USER","first_name","last_name","department","user_roles","actions","postData","submit","departmentMode","firstRender","componentDidMount","getUserData","match","utype","fetchUser","params","getDerivedStateFromProps","nextProps","prevState","errMsg","UPDATE_USER","userData","orgUnits","org_units","groups","render","inProgress","pageTitle","showPageLoader","console","log","propTypes","string","isRequired","object","func","oneOfType","number","array","bool","defaultProps","mapStateToProps","addEditUserReducerStore","DetailsReducerStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail, getErrorResMsg } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport {\n  getActionsFormate,\n  getOrgUnitIds,\n  getNormalId,\n  getSelectedRolesFormate\n} from '../../utils/common';\nimport { ROLES, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport PageLoader from '../../components/PageLoader/PageLoader';\n\nclass AddEditUser extends React.Component {\n  FIRST_NAME_FIELD_ID = 'aeu-fname';\n\n  LAST_NAME_FIELD_ID = 'aeu-lname';\n\n  EMAIL_FIELD_ID = 'aeu-email';\n\n  ORG_UNITS_FIELD_ID = 'select-org-units';\n\n  USER_ROLES_ID = 'user-roles';\n\n  PRE_ORG_UNITS = 'selected-org-units';\n\n  PRE_ROLES = 'selected-roles';\n  \n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.ORG_UNITS_FIELD_ID]: [],\n      [this.USER_ROLES_ID]: [],\n      [this.PRE_ORG_UNITS]: [],\n      [this.PRE_ROLES]: [],\n      errorCode: '',\n      disabled: true,\n      departmentMode: 'multiSelect',\n      firstRender: true\n    };\n  }\n\n  componentDidMount() {\n    const { page, getUserData, match } = this.props;\n    const utype = pageConfig[page].actions.fetchUser;\n    if (utype) {\n      const { params } = match;\n      getUserData(utype, { ...params, page });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { errorCode } = nextProps;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_USER);\n      return { formErrors: errMsg, errorCode };\n    }\n\n    if (\n      nextProps.page === PAGE.UPDATE_USER &&\n      prevState.firstRender &&\n      nextProps.userData &&\n      Object.values(nextProps.userData).length > 0\n    ) {\n      const {\n        email,\n        first_name: firstName,\n        last_name: lastName,\n        org_units: orgUnits,\n        groups\n      } = nextProps.userData;\n      return {\n        'aeu-fname': firstName,\n        'aeu-lname': lastName,\n        'aeu-email': email,\n        'selected-org-units': orgUnits,\n        'select-org-units': getNormalId(orgUnits),\n        'user-roles': getSelectedRolesFormate(groups),\n        firstRender: false\n      };\n    }\n\n    return prevState;\n  }\n\n  validateForm = () => {\n    const [emailValidity, emailErrors] = checkEmail(\n      this.state[this.EMAIL_FIELD_ID],\n      'Email'\n    );\n    const formValidity = emailValidity;\n    const formErrors = { ...emailErrors };\n\n    this.setState({ formValidity, formErrors });\n\n    return formValidity;\n  };\n\n  enableSubmit = (email, firstName, lastName, departments, userRoles) => {\n    const disabled = !(\n      email.length > 0 &&\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      departments.length > 0 &&\n      userRoles.length > 0\n    );\n\n    if (this.props.errorCode) {\n      const type = ACTIONS.USERS.RESET_STATE;\n      this.props.resetState(type);\n      this.setState({ errorCode: '' });\n    }\n    this.setState({ disabled });\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.ORG_UNITS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  handleOrgUnit = (currentNode, selectedNodes) => {\n    this.setState(\n      {\n        [this.ORG_UNITS_FIELD_ID]: getOrgUnitIds(selectedNodes),\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.ORG_UNITS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  handleRoles = event => {\n    this.setState(\n      {\n        [this.USER_ROLES_ID]: event || [],\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.ORG_UNITS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  getUserRoleIds = userRoles => {\n    const userRolesIds = userRoles.map(role => {\n      return role.value;\n    });\n    return userRolesIds;\n  };\n\n  getRolesFormate = () => {\n    let id = 0;\n    const userRoles = Object.values(ROLES).map(role => {\n      id += 1;\n      return { value: id, label: role };\n    });\n    return userRoles;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.validateForm()) {\n      const data =\n        this.props.page === PAGE.ADD_USER\n          ? {\n              email: this.state[this.EMAIL_FIELD_ID],\n              first_name: this.state[this.FIRST_NAME_FIELD_ID],\n              last_name: this.state[this.LAST_NAME_FIELD_ID],\n              department: this.state[this.ORG_UNITS_FIELD_ID],\n              user_roles: this.getUserRoleIds(this.state[this.USER_ROLES_ID])\n            }\n          : {\n              first_name: this.state[this.FIRST_NAME_FIELD_ID],\n              last_name: this.state[this.LAST_NAME_FIELD_ID]\n            };\n\n      const type = pageConfig[this.props.page].actions.postData;\n      this.props.submit(type, { data, props: { ...this.props } });\n    }\n  };\n\n  render() {\n    const { page, inProgress } = this.props;\n    const { pageTitle } = pageConfig[page];\n    const showPageLoader =\n      inProgress && this.state.disabled && page === PAGE.UPDATE_USER;\n    \n    console.log(\"Ids:\", this.state[this.USER_ROLES_ID]);\n    \n    return (\n      <div className=\"add-edit-user\" id=\"add-edit-user-page\">\n        <PageLoader inProgress={showPageLoader} />\n        <PageHeader title={pageTitle} />\n        <AddEditUserForm\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          handleOrgUnit={this.handleOrgUnit}\n          firstNameFieldId={this.FIRST_NAME_FIELD_ID}\n          lastNameFieldId={this.LAST_NAME_FIELD_ID}\n          emailFieldId={this.EMAIL_FIELD_ID}\n          firstNameFieldValue={this.state[this.FIRST_NAME_FIELD_ID]}\n          lastNameFieldValue={this.state[this.LAST_NAME_FIELD_ID]}\n          emailFieldValue={this.state[this.EMAIL_FIELD_ID]}\n          handleChangeRoles={this.handleRoles}\n          userRolesId={this.USER_ROLES_ID}\n          userRoleValues={this.getRolesFormate()}\n          formErrors={this.state.formErrors}\n          disabled={this.state.disabled}\n          page={page}\n          mode={this.state.departmentMode}\n          selectedOrgUnits={this.state[this.PRE_ORG_UNITS]}\n          inProgress={inProgress}\n          existedValues={this.state[this.USER_ROLES_ID]}\n        />\n      </div>\n    );\n  }\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  match: PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  resetState: PropTypes.func.isRequired,\n  userData: PropTypes.array.isRequired,\n  inProgress: PropTypes.bool.isRequired\n};\n\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditUserReducerStore.errorCode,\n  userData: state.DetailsReducerStore.data,\n  inProgress:\n    state.addEditUserReducerStore.inProgress ||\n    state.addEditUserReducerStore.inProgress\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddEditUser)\n);\n"]},"metadata":{},"sourceType":"module"}