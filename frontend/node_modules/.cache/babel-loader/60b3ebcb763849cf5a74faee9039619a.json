{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { STORE } from '../../utils/constants';\nconst initialState = {\n  [STORE.GET_ASSETS_COUNT_WRT_ASSET_TYPE]: [],\n  [STORE.GET_GENERIC_ASSETS_COUNT]: {},\n  errorCode: '',\n  inProgress: false\n};\n\nconst analyticsReducerStore = (stateParam, {\n  type,\n  payload\n}) => {\n  const state = stateParam || initialState;\n\n  switch (type) {\n    case ACTIONS.ASSETS.GET_ASSETS_COUNT:\n    case ACTIONS.ASSET_TYPES.GET_ASSETS_COUNT:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: true\n      });\n\n    case ACTIONS.ASSET_TYPES.GET_ASSETS_COUNT_SUCCESS:\n      return _objectSpread({}, state, {\n        [STORE.GET_ASSETS_COUNT_WRT_ASSET_TYPE]: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.ASSET_TYPES.GET_ASSETS_COUNT_FAIL:\n      {\n        return _objectSpread({}, state, {\n          errorCode: payload.error_code,\n          inProgress: false\n        });\n      }\n\n    case ACTIONS.ASSETS.GET_ASSETS_COUNT_SUCCESS:\n      return _objectSpread({}, state, {\n        [STORE.GET_GENERIC_ASSETS_COUNT]: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.ASSETS.GET_ASSETS_COUNT_FAIL:\n      {\n        return _objectSpread({}, state, {\n          errorCode: payload.error_code,\n          inProgress: false\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\n\nexport { analyticsReducerStore, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.reducer.js"],"names":["ACTIONS","STORE","initialState","GET_ASSETS_COUNT_WRT_ASSET_TYPE","GET_GENERIC_ASSETS_COUNT","errorCode","inProgress","analyticsReducerStore","stateParam","type","payload","state","ASSETS","GET_ASSETS_COUNT","ASSET_TYPES","data","GET_ASSETS_COUNT_SUCCESS","GET_ASSETS_COUNT_FAIL","error_code","dummy"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,MAAMC,YAAY,GAAG;AACnB,GAACD,KAAK,CAACE,+BAAP,GAAyC,EADtB;AAEnB,GAACF,KAAK,CAACG,wBAAP,GAAkC,EAFf;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;;AAOA,MAAMC,qBAAqB,GAAG,CAACC,UAAD,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AAC/D,QAAMC,KAAK,GAAGH,UAAU,IAAIN,YAA5B;;AACA,UAAQO,IAAR;AACE,SAAKT,OAAO,CAACY,MAAR,CAAeC,gBAApB;AACA,SAAKb,OAAO,CAACc,WAAR,CAAoBD,gBAAzB;AACE,+BAAYF,KAAZ;AAAmBI,QAAAA,IAAI,EAAEL,OAAzB;AAAkCJ,QAAAA,UAAU,EAAE;AAA9C;;AACF,SAAKN,OAAO,CAACc,WAAR,CAAoBE,wBAAzB;AACE,+BACKL,KADL;AAEE,SAACV,KAAK,CAACE,+BAAP,GAAyCO,OAF3C;AAGEJ,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKN,OAAO,CAACc,WAAR,CAAoBG,qBAAzB;AAAgD;AAC9C,iCAAYN,KAAZ;AAAmBN,UAAAA,SAAS,EAAEK,OAAO,CAACQ,UAAtC;AAAkDZ,UAAAA,UAAU,EAAE;AAA9D;AACD;;AAED,SAAKN,OAAO,CAACY,MAAR,CAAeI,wBAApB;AACE,+BACKL,KADL;AAEE,SAACV,KAAK,CAACG,wBAAP,GAAkCM,OAFpC;AAGEJ,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKN,OAAO,CAACY,MAAR,CAAeK,qBAApB;AAA2C;AACzC,iCAAYN,KAAZ;AAAmBN,UAAAA,SAAS,EAAEK,OAAO,CAACQ,UAAtC;AAAkDZ,UAAAA,UAAU,EAAE;AAA9D;AACD;;AAED;AACE,aAAOK,KAAP;AAzBJ;AA2BD,CA7BD;;AA+BA,MAAMQ,KAAK,GAAG,MAAM,CAAE,CAAtB;;AACA,SAASZ,qBAAT,EAAgCY,KAAhC","sourcesContent":["import ACTIONS from '../../apiConfig/actions.constants';\nimport { STORE } from '../../utils/constants';\n\nconst initialState = {\n  [STORE.GET_ASSETS_COUNT_WRT_ASSET_TYPE]: [],\n  [STORE.GET_GENERIC_ASSETS_COUNT]: {},\n  errorCode: '',\n  inProgress: false\n};\n\nconst analyticsReducerStore = (stateParam, { type, payload }) => {\n  const state = stateParam || initialState;\n  switch (type) {\n    case ACTIONS.ASSETS.GET_ASSETS_COUNT:\n    case ACTIONS.ASSET_TYPES.GET_ASSETS_COUNT:\n      return { ...state, data: payload, inProgress: true };\n    case ACTIONS.ASSET_TYPES.GET_ASSETS_COUNT_SUCCESS:\n      return {\n        ...state,\n        [STORE.GET_ASSETS_COUNT_WRT_ASSET_TYPE]: payload,\n        inProgress: false\n      };\n    case ACTIONS.ASSET_TYPES.GET_ASSETS_COUNT_FAIL: {\n      return { ...state, errorCode: payload.error_code, inProgress: false };\n    }\n\n    case ACTIONS.ASSETS.GET_ASSETS_COUNT_SUCCESS:\n      return {\n        ...state,\n        [STORE.GET_GENERIC_ASSETS_COUNT]: payload,\n        inProgress: false\n      };\n    case ACTIONS.ASSETS.GET_ASSETS_COUNT_FAIL: {\n      return { ...state, errorCode: payload.error_code, inProgress: false };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\nexport { analyticsReducerStore, dummy };\n"]},"metadata":{},"sourceType":"module"}