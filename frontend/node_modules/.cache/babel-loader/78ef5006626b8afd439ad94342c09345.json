{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport loginStore from './containers/Login/Login.reducer';\nimport passwordResetStore from './containers/PasswordReset/PasswordReset.reducer';\nimport changePasswordStore from './containers/ChangePassword/ChangePassword.reducer';\nimport listReducerStore from './containers/ListPage/ListPage.reducer';\nimport breadcrumbReducerStore from './containers/BreadCrumb/BreadCrumb.reducer';\nimport addEditUserReducerStore from './containers/AddEditUser/AddEditUser.reducer';\nimport DetailsReducerStore from './containers/Details/Details.reducer';\nimport addEditOrgUnitReducerStore from './containers/AddEditOrgUnits/AddEditOrgUnits.reducer';\nimport AssetsReducerStore from './containers/Assets/Assets.reducer';\nimport { STORE } from './utils/constants';\nimport ACTIONS from './apiConfig/actions.constants';\nconst initialState = {\n  [STORE.ALL_ORG_UNIT]: {},\n  data: {},\n  errorCode: ''\n};\n\nconst commonReducerStore = (stateParam, {\n  type,\n  payload\n}) => {\n  const state = stateParam || initialState;\n\n  switch (type) {\n    case ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_SUCCESS:\n      return _objectSpread({}, state, {\n        [STORE.ALL_ORG_UNIT]: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL:\n      return _objectSpread({}, state, {\n        errorCode: payload.error_code,\n        inProgress: false\n      });\n\n    case ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_SUCCESS:\n      return _objectSpread({}, state, {\n        data: payload,\n        inProgress: false\n      });\n\n    case ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_FAIL:\n      return _objectSpread({}, state, {\n        errorCode: payload.error_code,\n        inProgress: false\n      });\n\n    default:\n      return state;\n  }\n};\n/* Import all the reducers and combine them here */\n\n\nconst rootReducer = combineReducers({\n  loginStore,\n  passwordResetStore,\n  changePasswordStore,\n  listReducerStore,\n  breadcrumbReducerStore,\n  addEditUserReducerStore,\n  DetailsReducerStore,\n  addEditOrgUnitReducerStore,\n  commonReducerStore,\n  AssetsReducerStore\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/rootReducer.js"],"names":["combineReducers","loginStore","passwordResetStore","changePasswordStore","listReducerStore","breadcrumbReducerStore","addEditUserReducerStore","DetailsReducerStore","addEditOrgUnitReducerStore","AssetsReducerStore","STORE","ACTIONS","initialState","ALL_ORG_UNIT","data","errorCode","commonReducerStore","stateParam","type","payload","state","ORG_UNITS","GET_ALL_ORG_UNIT","inProgress","GET_ALL_ORG_UNIT_SUCCESS","GET_ALL_ORG_UNIT_FAIL","error_code","TRAKING_LOGS","GET_TRACKING_LOGS","GET_TRACKING_LOGS_SUCCESS","GET_TRACKING_LOGS_FAIL","rootReducer"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,kBAAP,MAA+B,kDAA/B;AACA,OAAOC,mBAAP,MAAgC,oDAAhC;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,sBAAP,MAAmC,4CAAnC;AACA,OAAOC,uBAAP,MAAoC,8CAApC;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,0BAAP,MAAuC,sDAAvC;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,MAAMC,YAAY,GAAG;AACnB,GAACF,KAAK,CAACG,YAAP,GAAsB,EADH;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,UAAD,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AAC5D,QAAMC,KAAK,GAAGH,UAAU,IAAIL,YAA5B;;AACA,UAAQM,IAAR;AACE,SAAKP,OAAO,CAACU,SAAR,CAAkBC,gBAAvB;AACE,+BAAYF,KAAZ;AAAmBG,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKZ,OAAO,CAACU,SAAR,CAAkBG,wBAAvB;AACE,+BAAYJ,KAAZ;AAAmB,SAACV,KAAK,CAACG,YAAP,GAAsBM,OAAzC;AAAkDI,QAAAA,UAAU,EAAE;AAA9D;;AACF,SAAKZ,OAAO,CAACU,SAAR,CAAkBI,qBAAvB;AACE,+BAAYL,KAAZ;AAAmBL,QAAAA,SAAS,EAAEI,OAAO,CAACO,UAAtC;AAAkDH,QAAAA,UAAU,EAAE;AAA9D;;AAEF,SAAKZ,OAAO,CAACgB,YAAR,CAAqBC,iBAA1B;AACE,+BAAYR,KAAZ;AAAmBG,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKZ,OAAO,CAACgB,YAAR,CAAqBE,yBAA1B;AACE,+BAAYT,KAAZ;AAAmBN,QAAAA,IAAI,EAAEK,OAAzB;AAAkCI,QAAAA,UAAU,EAAE;AAA9C;;AACF,SAAKZ,OAAO,CAACgB,YAAR,CAAqBG,sBAA1B;AACE,+BAAYV,KAAZ;AAAmBL,QAAAA,SAAS,EAAEI,OAAO,CAACO,UAAtC;AAAkDH,QAAAA,UAAU,EAAE;AAA9D;;AAEF;AACE,aAAOH,KAAP;AAhBJ;AAkBD,CApBD;AAsBA;;;AACA,MAAMW,WAAW,GAAG/B,eAAe,CAAC;AAClCC,EAAAA,UADkC;AAElCC,EAAAA,kBAFkC;AAGlCC,EAAAA,mBAHkC;AAIlCC,EAAAA,gBAJkC;AAKlCC,EAAAA,sBALkC;AAMlCC,EAAAA,uBANkC;AAOlCC,EAAAA,mBAPkC;AAQlCC,EAAAA,0BARkC;AASlCQ,EAAAA,kBATkC;AAUlCP,EAAAA;AAVkC,CAAD,CAAnC;AAaA,eAAesB,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport loginStore from './containers/Login/Login.reducer';\nimport passwordResetStore from './containers/PasswordReset/PasswordReset.reducer';\nimport changePasswordStore from './containers/ChangePassword/ChangePassword.reducer';\nimport listReducerStore from './containers/ListPage/ListPage.reducer';\nimport breadcrumbReducerStore from './containers/BreadCrumb/BreadCrumb.reducer';\nimport addEditUserReducerStore from './containers/AddEditUser/AddEditUser.reducer';\nimport DetailsReducerStore from './containers/Details/Details.reducer';\nimport addEditOrgUnitReducerStore from './containers/AddEditOrgUnits/AddEditOrgUnits.reducer';\nimport AssetsReducerStore from './containers/Assets/Assets.reducer';\nimport { STORE } from './utils/constants';\nimport ACTIONS from './apiConfig/actions.constants';\n\nconst initialState = {\n  [STORE.ALL_ORG_UNIT]: {},\n  data: {},\n  errorCode: ''\n};\n\nconst commonReducerStore = (stateParam, { type, payload }) => {\n  const state = stateParam || initialState;\n  switch (type) {\n    case ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT:\n      return { ...state, inProgress: true };\n    case ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_SUCCESS:\n      return { ...state, [STORE.ALL_ORG_UNIT]: payload, inProgress: false };\n    case ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL:\n      return { ...state, errorCode: payload.error_code, inProgress: false };\n\n    case ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS:\n      return { ...state, inProgress: true };\n    case ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_SUCCESS:\n      return { ...state, data: payload, inProgress: false };\n    case ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_FAIL:\n      return { ...state, errorCode: payload.error_code, inProgress: false };\n\n    default:\n      return state;\n  }\n};\n\n/* Import all the reducers and combine them here */\nconst rootReducer = combineReducers({\n  loginStore,\n  passwordResetStore,\n  changePasswordStore,\n  listReducerStore,\n  breadcrumbReducerStore,\n  addEditUserReducerStore,\n  DetailsReducerStore,\n  addEditOrgUnitReducerStore,\n  commonReducerStore,\n  AssetsReducerStore\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}