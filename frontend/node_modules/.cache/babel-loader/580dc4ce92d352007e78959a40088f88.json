{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx\";\n// import React from 'react';\n// import Tooltip from '@atlaskit/tooltip';\n// import Select, { components } from 'react-select';\n// import PropTypes from 'prop-types';\n// const Input = props => {\n//   if (props.isHidden) {\n//     return <components.Input {...props} />;\n//   }\n//   return (\n//     <div>\n//       <Tooltip content=\"Custom Input\" className=\"pl-0\">\n//         <components.Input className=\"pl-0\" {...props} />\n//       </Tooltip>\n//     </div>\n//   );\n// };\n// const colourStyles = {\n//   control: styles => ({\n//     ...styles,\n//     backgroundColor: 'transparant',\n//     border: 'none',\n//     borderBottom: '1px solid #b9b9b9',\n//     borderRadius: '0px',\n//     width: '31.333333%'\n//   }),\n//   option: styles => ({ padding: '0px', ...styles }),\n//   input: styles => ({ padding: '0px', ...styles }),\n//   placeholder: styles => ({ padding: '0px', ...styles })\n// };\n// const CustomSelect = props => {\n//   return (\n//     <Select\n//       closeMenuOnSelect={false}\n//       components={{ Input }}\n//       onChange={props.onChange}\n//       options={props.fieldValues}\n//       isMulti\n//       placeholder=\"Roles\"\n//       styles={colourStyles}\n//     />\n//   );\n// };\n// CustomSelect.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n//   fieldValues: PropTypes.string.isRequired\n// };\n// Input.propTypes = {\n//   isHidden: PropTypes.bool.isRequired\n// };\nimport 'rc-tree-select/assets/index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'rc-dialog/assets/index.css';\nimport Dialog from 'rc-dialog';\nimport TreeSelect, { TreeNode, SHOW_PARENT } from 'rc-tree-select'; // import { gData } from './util';\n// import './demo.less';\n\nfunction isLeaf(value) {\n  if (!value) {\n    return false;\n  }\n\n  let queues = [...gData];\n\n  while (queues.length) {\n    // BFS\n    const item = queues.shift();\n\n    if (item.value === value) {\n      if (!item.children) {\n        return true;\n      }\n\n      return false;\n    }\n\n    if (item.children) {\n      queues = queues.concat(item.children);\n    }\n  }\n\n  return false;\n}\n\nfunction findPath(value, data) {\n  const sel = [];\n\n  function loop(selected, children) {\n    for (let i = 0; i < children.length; i++) {\n      const item = children[i];\n\n      if (selected === item.value) {\n        sel.push(item);\n        return;\n      }\n\n      if (item.children) {\n        loop(selected, item.children, item);\n\n        if (sel.length) {\n          sel.push(item);\n          return;\n        }\n      }\n    }\n  }\n\n  loop(value, data);\n  return sel;\n}\n\nclass CustomSelect extends React.Component {\n  constructor(..._args) {\n    super(..._args);\n    this.state = {\n      tsOpen: false,\n      visible: false,\n      searchValue: '0-0-0-label',\n      value: '0-0-0-value1',\n      // value: ['0-0-0-0-value', '0-0-0-1-value', '0-0-0-2-value'],\n      lv: {\n        value: '0-0-0-value',\n        label: 'spe label'\n      },\n      multipleValue: [],\n      simpleSearchValue: 'test111',\n      simpleTreeData: [{\n        key: 1,\n        pId: 0,\n        label: 'test1',\n        value: 'test1'\n      }, {\n        key: 121,\n        pId: 0,\n        label: 'test2',\n        value: 'test2'\n      }, {\n        key: 11,\n        pId: 1,\n        label: 'test11',\n        value: 'test11'\n      }, {\n        key: 12,\n        pId: 1,\n        label: 'test12',\n        value: 'test12'\n      }, {\n        key: 111,\n        pId: 11,\n        label: 'test111',\n        value: 'test111'\n      }],\n      treeDataSimpleMode: {\n        id: 'key',\n        rootPId: 0\n      }\n    };\n\n    this.onClick = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.onSearch = (value, ...args) => {\n      console.log('Do Search:', value, ...args);\n      this.setState({\n        searchValue: value\n      });\n    };\n\n    this.onChange = (value, ...rest) => {\n      console.log('onChange', value, ...rest);\n      this.setState({\n        value\n      });\n    };\n\n    this.onChangeChildren = (...args) => {\n      const preValue = this.state.value;\n      console.log('onChangeChildren', ...args);\n      const value = args[0];\n      const pre = value ? preValue : undefined;\n      this.setState({\n        value: isLeaf(value) ? value : pre\n      });\n    };\n\n    this.onChangeLV = (value, ...args) => {\n      console.log('labelInValue', value, ...args);\n\n      if (!value) {\n        this.setState({\n          lv: undefined\n        });\n        return;\n      }\n\n      const path = findPath(value.value, gData).map(i => i.label).reverse().join(' > ');\n      this.setState({\n        lv: {\n          value: value.value,\n          label: path\n        }\n      });\n    };\n\n    this.onMultipleChange = value => {\n      console.log('onMultipleChange', value);\n      this.setState({\n        multipleValue: value\n      });\n    };\n\n    this.onSelect = (...args) => {\n      // use onChange instead\n      console.log(args);\n    };\n\n    this.onDropdownVisibleChange = (visible, info) => {\n      const value = this.state.value;\n      console.log(visible, value, info);\n\n      if (Array.isArray(value) && value.length > 1 && value.length < 3) {\n        window.alert('please select more than two item or less than one item.');\n        return false;\n      }\n\n      return true;\n    };\n\n    this.filterTreeNode = (input, child) => {\n      return String(child.props.title).indexOf(input) === 0;\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          visible = _this$state.visible,\n          value = _this$state.value,\n          searchValue = _this$state.searchValue,\n          tsOpen = _this$state.tsOpen,\n          multipleValue = _this$state.multipleValue,\n          lv = _this$state.lv,\n          simpleTreeData = _this$state.simpleTreeData,\n          simpleSearchValue = _this$state.simpleSearchValue,\n          treeDataSimpleMode = _this$state.treeDataSimpleMode;\n    return React.createElement(\"div\", {\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"tree-select in dialog\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"show dialog\"), visible ? React.createElement(Dialog, {\n      visible: visible,\n      animation: \"zoom\",\n      maskAnimation: \"fade\",\n      onClose: this.onClose,\n      style: {\n        width: 600,\n        height: 400,\n        overflow: 'auto'\n      },\n      id: \"area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: 600,\n        paddingTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(TreeSelect, {\n      getPopupContainer: triggerNode => triggerNode.parentNode,\n      style: {\n        width: 300\n      },\n      transitionName: \"rc-tree-select-dropdown-slide-up\",\n      choiceTransitionName: \"rc-tree-select-selection__choice-zoom\",\n      dropdownStyle: {\n        maxHeight: 200,\n        overflow: 'auto',\n        zIndex: 1500\n      },\n      placeholder: React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"\\u8BF7\\u4E0B\\u62C9\\u9009\\u62E9\"),\n      searchPlaceholder: \"please search\",\n      showSearch: true,\n      allowClear: true,\n      treeLine: true,\n      value: value,\n      treeData: gData,\n      treeNodeFilterProp: \"label\",\n      filterTreeNode: false,\n      onSearch: this.onSearch,\n      onChange: this.onChange,\n      onSelect: this.onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }))) : null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"single select\"), React.createElement(TreeSelect, {\n      style: {\n        width: 300\n      },\n      transitionName: \"rc-tree-select-dropdown-slide-up\",\n      choiceTransitionName: \"rc-tree-select-selection__choice-zoom\",\n      dropdownStyle: {\n        maxHeight: 200,\n        overflow: 'auto'\n      },\n      placeholder: React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"\\u8BF7\\u4E0B\\u62C9\\u9009\\u62E9\"),\n      searchPlaceholder: \"please search\",\n      showSearch: true,\n      allowClear: true,\n      treeLine: true,\n      searchValue: searchValue,\n      value: value,\n      treeData: gData,\n      treeNodeFilterProp: \"label\",\n      filterTreeNode: false,\n      onSearch: this.onSearch,\n      open: tsOpen,\n      onChange: (val, ...args) => {\n        console.log('onChange', val, ...args);\n\n        if (val === '0-0-0-0-value') {\n          this.setState({\n            tsOpen: true\n          });\n        } else {\n          this.setState({\n            tsOpen: false\n          });\n        }\n\n        this.setState({\n          value: val\n        });\n      },\n      onDropdownVisibleChange: (v, info) => {\n        console.log('single onDropdownVisibleChange', v, info); // document clicked\n\n        if (info.documentClickClose && value === '0-0-0-0-value') {\n          return false;\n        }\n\n        this.setState({\n          tsOpen: v\n        });\n        return true;\n      },\n      onSelect: this.onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"single select (just select children)\"), React.createElement(TreeSelect, {\n      style: {\n        width: 300\n      },\n      transitionName: \"rc-tree-select-dropdown-slide-up\",\n      choiceTransitionName: \"rc-tree-select-selection__choice-zoom\",\n      dropdownStyle: {\n        maxHeight: 200,\n        overflow: 'auto'\n      },\n      placeholder: React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"\\u8BF7\\u4E0B\\u62C9\\u9009\\u62E9\"),\n      searchPlaceholder: \"please search\",\n      showSearch: true,\n      allowClear: true,\n      treeLine: true,\n      value: value,\n      treeData: gData,\n      treeNodeFilterProp: \"label\",\n      filterTreeNode: false,\n      onChange: this.onChangeChildren,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"multiple select\"), React.createElement(TreeSelect, {\n      style: {\n        width: 300\n      },\n      transitionName: \"rc-tree-select-dropdown-slide-up\",\n      choiceTransitionName: \"rc-tree-select-selection__choice-zoom\",\n      dropdownStyle: {\n        maxHeight: 200,\n        overflow: 'auto'\n      },\n      placeholder: React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"\\u8BF7\\u4E0B\\u62C9\\u9009\\u62E9\"),\n      searchPlaceholder: \"please search\",\n      multiple: true,\n      value: multipleValue,\n      treeData: gData,\n      treeNodeFilterProp: \"title\",\n      onChange: this.onMultipleChange,\n      onSelect: this.onSelect,\n      allowClear: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"check select\"), React.createElement(TreeSelect, {\n      className: \"check-select\",\n      transitionName: \"rc-tree-select-dropdown-slide-up\",\n      choiceTransitionName: \"rc-tree-select-selection__choice-zoom\",\n      dropdownStyle: {\n        height: 200,\n        overflow: 'auto'\n      },\n      dropdownPopupAlign: {\n        overflow: {\n          adjustY: 0,\n          adjustX: 0\n        },\n        offset: [0, 2]\n      },\n      onDropdownVisibleChange: this.onDropdownVisibleChange,\n      placeholder: React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"\\u8BF7\\u4E0B\\u62C9\\u9009\\u62E9\"),\n      searchPlaceholder: \"please search\",\n      treeLine: true,\n      maxTagTextLength: 10,\n      value: value,\n      autoClearSearchValue: true,\n      treeData: gData,\n      treeNodeFilterProp: \"title\",\n      treeCheckable: true,\n      showCheckedStrategy: SHOW_PARENT,\n      onChange: this.onChange,\n      onSelect: this.onSelect,\n      maxTagCount: 2,\n      maxTagPlaceholder: valueList => {\n        console.log('Max Tag Rest Value:', valueList);\n        return \"\".concat(valueList.length, \" rest...\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"labelInValue & show path\"), React.createElement(TreeSelect, {\n      style: {\n        width: 500\n      },\n      transitionName: \"rc-tree-select-dropdown-slide-up\",\n      choiceTransitionName: \"rc-tree-select-selection__choice-zoom\",\n      dropdownStyle: {\n        maxHeight: 200,\n        overflow: 'auto'\n      },\n      placeholder: React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"\\u8BF7\\u4E0B\\u62C9\\u9009\\u62E9\"),\n      searchPlaceholder: \"please search\",\n      showSearch: true,\n      allowClear: true,\n      treeLine: true,\n      value: lv,\n      labelInValue: true,\n      treeData: gData,\n      treeNodeFilterProp: \"label\",\n      filterTreeNode: false,\n      onChange: this.onChangeLV,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"use treeDataSimpleMode\"), React.createElement(TreeSelect, {\n      style: {\n        width: 300\n      },\n      dropdownStyle: {\n        maxHeight: 200,\n        overflow: 'auto'\n      },\n      placeholder: React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"\\u8BF7\\u4E0B\\u62C9\\u9009\\u62E9\"),\n      searchPlaceholder: \"please search\",\n      treeLine: true,\n      maxTagTextLength: 10,\n      searchValue: simpleSearchValue,\n      onSearch: val => {\n        this.setState({\n          simpleSearchValue: val\n        });\n      },\n      value: value,\n      treeData: simpleTreeData,\n      treeNodeFilterProp: \"title\",\n      treeDataSimpleMode: treeDataSimpleMode,\n      treeCheckable: true,\n      showCheckedStrategy: SHOW_PARENT,\n      onChange: this.onChange,\n      onSelect: this.onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Testing in extreme conditions (Boundary conditions test) \"), React.createElement(TreeSelect, {\n      style: {\n        width: 200\n      },\n      dropdownStyle: {\n        maxHeight: 200,\n        overflow: 'auto'\n      },\n      defaultValue: \"leaf1\",\n      multiple: true,\n      treeCheckable: true,\n      showCheckedStrategy: SHOW_PARENT,\n      treeDefaultExpandAll: true,\n      treeData: [{\n        key: '',\n        value: '',\n        label: 'empty value',\n        children: []\n      }, {\n        key: '0',\n        value: '0',\n        label: '0 label',\n        children: [{\n          key: '00',\n          value: '00',\n          label: '00 label',\n          children: []\n        }, {\n          key: '01',\n          value: '01',\n          label: '01 label',\n          children: []\n        }]\n      }],\n      onChange: (val, ...args) => console.log(val, ...args),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"use TreeNode Component (not recommend)\"), React.createElement(TreeSelect, {\n      style: {\n        width: 200\n      },\n      dropdownStyle: {\n        maxHeight: 200,\n        overflow: 'auto'\n      },\n      defaultValue: \"leaf1\",\n      treeDefaultExpandAll: true,\n      treeNodeFilterProp: \"title\",\n      filterTreeNode: this.filterTreeNode,\n      onChange: (val, ...args) => console.log(val, ...args),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"\",\n      title: \"parent 1\",\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"parent 1-0\",\n      title: \"parent 1-0\",\n      key: \"0-1-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"leaf1\",\n      title: \"my leaf\",\n      key: \"random\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }), React.createElement(TreeNode, {\n      value: \"leaf2\",\n      title: \"your leaf\",\n      key: \"random1\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    })), React.createElement(TreeNode, {\n      value: \"parent 1-1\",\n      title: \"parent 1-1\",\n      key: \"0-1-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"sss\",\n      title: React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, \"sss\"),\n      key: \"random3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }), React.createElement(TreeNode, {\n      value: \"same value1\",\n      title: \"same txtle\",\n      key: \"0-1-1-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"same value10\",\n      title: \"same titlexd\",\n      key: \"0-1-1-1-0\",\n      style: {\n        color: 'red',\n        background: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    })))), React.createElement(TreeNode, {\n      value: \"same value2\",\n      title: \"same title\",\n      key: \"0-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"2same value\",\n      title: \"2same title\",\n      key: \"0-2-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    })), React.createElement(TreeNode, {\n      value: \"same value3\",\n      title: \"same title\",\n      key: \"0-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CustomSelect;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx"],"names":["React","ReactDOM","Dialog","TreeSelect","TreeNode","SHOW_PARENT","isLeaf","value","queues","gData","length","item","shift","children","concat","findPath","data","sel","loop","selected","i","push","CustomSelect","Component","state","tsOpen","visible","searchValue","lv","label","multipleValue","simpleSearchValue","simpleTreeData","key","pId","treeDataSimpleMode","id","rootPId","onClick","setState","onClose","onSearch","args","console","log","onChange","rest","onChangeChildren","preValue","pre","undefined","onChangeLV","path","map","reverse","join","onMultipleChange","onSelect","onDropdownVisibleChange","info","Array","isArray","window","alert","filterTreeNode","input","child","String","props","title","indexOf","render","margin","width","height","overflow","paddingTop","triggerNode","parentNode","maxHeight","zIndex","val","v","documentClickClose","adjustY","adjustX","offset","valueList","color","background"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import Tooltip from '@atlaskit/tooltip';\n// import Select, { components } from 'react-select';\n// import PropTypes from 'prop-types';\n\n// const Input = props => {\n//   if (props.isHidden) {\n//     return <components.Input {...props} />;\n//   }\n//   return (\n//     <div>\n//       <Tooltip content=\"Custom Input\" className=\"pl-0\">\n//         <components.Input className=\"pl-0\" {...props} />\n//       </Tooltip>\n//     </div>\n//   );\n// };\n\n// const colourStyles = {\n//   control: styles => ({\n//     ...styles,\n//     backgroundColor: 'transparant',\n//     border: 'none',\n//     borderBottom: '1px solid #b9b9b9',\n//     borderRadius: '0px',\n//     width: '31.333333%'\n//   }),\n//   option: styles => ({ padding: '0px', ...styles }),\n//   input: styles => ({ padding: '0px', ...styles }),\n//   placeholder: styles => ({ padding: '0px', ...styles })\n// };\n\n// const CustomSelect = props => {\n//   return (\n//     <Select\n//       closeMenuOnSelect={false}\n//       components={{ Input }}\n//       onChange={props.onChange}\n//       options={props.fieldValues}\n//       isMulti\n//       placeholder=\"Roles\"\n//       styles={colourStyles}\n//     />\n//   );\n// };\n// CustomSelect.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n//   fieldValues: PropTypes.string.isRequired\n// };\n// Input.propTypes = {\n//   isHidden: PropTypes.bool.isRequired\n// };\nimport 'rc-tree-select/assets/index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'rc-dialog/assets/index.css';\nimport Dialog from 'rc-dialog';\nimport TreeSelect, { TreeNode, SHOW_PARENT } from 'rc-tree-select';\n// import { gData } from './util';\n// import './demo.less';\n\nfunction isLeaf(value) {\n  if (!value) {\n    return false;\n  }\n  let queues = [...gData];\n  while (queues.length) {\n    // BFS\n    const item = queues.shift();\n    if (item.value === value) {\n      if (!item.children) {\n        return true;\n      }\n      return false;\n    }\n    if (item.children) {\n      queues = queues.concat(item.children);\n    }\n  }\n  return false;\n}\n\nfunction findPath(value, data) {\n  const sel = [];\n  function loop(selected, children) {\n    for (let i = 0; i < children.length; i++) {\n      const item = children[i];\n      if (selected === item.value) {\n        sel.push(item);\n        return;\n      }\n      if (item.children) {\n        loop(selected, item.children, item);\n        if (sel.length) {\n          sel.push(item);\n          return;\n        }\n      }\n    }\n  }\n  loop(value, data);\n  return sel;\n}\n\nclass CustomSelect extends React.Component {\n  state = {\n    tsOpen: false,\n    visible: false,\n    searchValue: '0-0-0-label',\n    value: '0-0-0-value1',\n    // value: ['0-0-0-0-value', '0-0-0-1-value', '0-0-0-2-value'],\n    lv: { value: '0-0-0-value', label: 'spe label' },\n    multipleValue: [],\n    simpleSearchValue: 'test111',\n    simpleTreeData: [\n      { key: 1, pId: 0, label: 'test1', value: 'test1' },\n      { key: 121, pId: 0, label: 'test2', value: 'test2' },\n      { key: 11, pId: 1, label: 'test11', value: 'test11' },\n      { key: 12, pId: 1, label: 'test12', value: 'test12' },\n      { key: 111, pId: 11, label: 'test111', value: 'test111' },\n    ],\n    treeDataSimpleMode: {\n      id: 'key',\n      rootPId: 0,\n    },\n  };\n\n  onClick = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  onSearch = (value, ...args) => {\n    console.log('Do Search:', value, ...args);\n    this.setState({ searchValue: value });\n  };\n\n  onChange = (value, ...rest) => {\n    console.log('onChange', value, ...rest);\n    this.setState({ value });\n  };\n\n  onChangeChildren = (...args) => {\n    const { value: preValue } = this.state;\n    console.log('onChangeChildren', ...args);\n    const value = args[0];\n    const pre = value ? preValue : undefined;\n    this.setState({ value: isLeaf(value) ? value : pre });\n  };\n\n  onChangeLV = (value, ...args) => {\n    console.log('labelInValue', value, ...args);\n    if (!value) {\n      this.setState({ lv: undefined });\n      return;\n    }\n    const path = findPath(value.value, gData)\n      .map(i => i.label)\n      .reverse()\n      .join(' > ');\n    this.setState({ lv: { value: value.value, label: path } });\n  };\n\n  onMultipleChange = value => {\n    console.log('onMultipleChange', value);\n    this.setState({ multipleValue: value });\n  };\n\n  onSelect = (...args) => {\n    // use onChange instead\n    console.log(args);\n  };\n\n  onDropdownVisibleChange = (visible, info) => {\n    const { value } = this.state;\n    console.log(visible, value, info);\n    if (Array.isArray(value) && value.length > 1 && value.length < 3) {\n      window.alert('please select more than two item or less than one item.');\n      return false;\n    }\n    return true;\n  };\n\n  filterTreeNode = (input, child) => {\n    return String(child.props.title).indexOf(input) === 0;\n  };\n\n  render() {\n    const {\n      visible,\n      value,\n      searchValue,\n      tsOpen,\n      multipleValue,\n      lv,\n      simpleTreeData,\n      simpleSearchValue,\n      treeDataSimpleMode,\n    } = this.state;\n    return (\n      <div style={{ margin: 20 }}>\n        <h2>tree-select in dialog</h2>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={this.onClick}>\n          show dialog\n        </button>\n        {visible ? (\n          <Dialog\n            visible={visible}\n            animation=\"zoom\"\n            maskAnimation=\"fade\"\n            onClose={this.onClose}\n            style={{ width: 600, height: 400, overflow: 'auto' }}\n            id=\"area\"\n          >\n            <div style={{ height: 600, paddingTop: 100 }}>\n              <TreeSelect\n                getPopupContainer={triggerNode => triggerNode.parentNode}\n                style={{ width: 300 }}\n                transitionName=\"rc-tree-select-dropdown-slide-up\"\n                choiceTransitionName=\"rc-tree-select-selection__choice-zoom\"\n                dropdownStyle={{ maxHeight: 200, overflow: 'auto', zIndex: 1500 }}\n                placeholder={<i>请下拉选择</i>}\n                searchPlaceholder=\"please search\"\n                showSearch\n                allowClear\n                treeLine\n                value={value}\n                treeData={gData}\n                treeNodeFilterProp=\"label\"\n                filterTreeNode={false}\n                onSearch={this.onSearch}\n                onChange={this.onChange}\n                onSelect={this.onSelect}\n              />\n            </div>\n          </Dialog>\n        ) : null}\n        <h2>single select</h2>\n        <TreeSelect\n          style={{ width: 300 }}\n          transitionName=\"rc-tree-select-dropdown-slide-up\"\n          choiceTransitionName=\"rc-tree-select-selection__choice-zoom\"\n          dropdownStyle={{ maxHeight: 200, overflow: 'auto' }}\n          placeholder={<i>请下拉选择</i>}\n          searchPlaceholder=\"please search\"\n          showSearch\n          allowClear\n          treeLine\n          searchValue={searchValue}\n          value={value}\n          treeData={gData}\n          treeNodeFilterProp=\"label\"\n          filterTreeNode={false}\n          onSearch={this.onSearch}\n          open={tsOpen}\n          onChange={(val, ...args) => {\n            console.log('onChange', val, ...args);\n            if (val === '0-0-0-0-value') {\n              this.setState({ tsOpen: true });\n            } else {\n              this.setState({ tsOpen: false });\n            }\n            this.setState({ value: val });\n          }}\n          onDropdownVisibleChange={(v, info) => {\n            console.log('single onDropdownVisibleChange', v, info);\n            // document clicked\n            if (info.documentClickClose && value === '0-0-0-0-value') {\n              return false;\n            }\n            this.setState({\n              tsOpen: v,\n            });\n            return true;\n          }}\n          onSelect={this.onSelect}\n        />\n\n        <h2>single select (just select children)</h2>\n        <TreeSelect\n          style={{ width: 300 }}\n          transitionName=\"rc-tree-select-dropdown-slide-up\"\n          choiceTransitionName=\"rc-tree-select-selection__choice-zoom\"\n          dropdownStyle={{ maxHeight: 200, overflow: 'auto' }}\n          placeholder={<i>请下拉选择</i>}\n          searchPlaceholder=\"please search\"\n          showSearch\n          allowClear\n          treeLine\n          value={value}\n          treeData={gData}\n          treeNodeFilterProp=\"label\"\n          filterTreeNode={false}\n          onChange={this.onChangeChildren}\n        />\n\n        <h2>multiple select</h2>\n        <TreeSelect\n          style={{ width: 300 }}\n          transitionName=\"rc-tree-select-dropdown-slide-up\"\n          choiceTransitionName=\"rc-tree-select-selection__choice-zoom\"\n          dropdownStyle={{ maxHeight: 200, overflow: 'auto' }}\n          placeholder={<i>请下拉选择</i>}\n          searchPlaceholder=\"please search\"\n          multiple\n          value={multipleValue}\n          treeData={gData}\n          treeNodeFilterProp=\"title\"\n          onChange={this.onMultipleChange}\n          onSelect={this.onSelect}\n          allowClear\n        />\n\n        <h2>check select</h2>\n        <TreeSelect\n          className=\"check-select\"\n          transitionName=\"rc-tree-select-dropdown-slide-up\"\n          choiceTransitionName=\"rc-tree-select-selection__choice-zoom\"\n          dropdownStyle={{ height: 200, overflow: 'auto' }}\n          dropdownPopupAlign={{ overflow: { adjustY: 0, adjustX: 0 }, offset: [0, 2] }}\n          onDropdownVisibleChange={this.onDropdownVisibleChange}\n          placeholder={<i>请下拉选择</i>}\n          searchPlaceholder=\"please search\"\n          treeLine\n          maxTagTextLength={10}\n          value={value}\n          autoClearSearchValue\n          treeData={gData}\n          treeNodeFilterProp=\"title\"\n          treeCheckable\n          showCheckedStrategy={SHOW_PARENT}\n          onChange={this.onChange}\n          onSelect={this.onSelect}\n          maxTagCount={2}\n          maxTagPlaceholder={valueList => {\n            console.log('Max Tag Rest Value:', valueList);\n            return `${valueList.length} rest...`;\n          }}\n        />\n\n        <h2>labelInValue & show path</h2>\n        <TreeSelect\n          style={{ width: 500 }}\n          transitionName=\"rc-tree-select-dropdown-slide-up\"\n          choiceTransitionName=\"rc-tree-select-selection__choice-zoom\"\n          dropdownStyle={{ maxHeight: 200, overflow: 'auto' }}\n          placeholder={<i>请下拉选择</i>}\n          searchPlaceholder=\"please search\"\n          showSearch\n          allowClear\n          treeLine\n          value={lv}\n          labelInValue\n          treeData={gData}\n          treeNodeFilterProp=\"label\"\n          filterTreeNode={false}\n          onChange={this.onChangeLV}\n        />\n\n        <h2>use treeDataSimpleMode</h2>\n        <TreeSelect\n          style={{ width: 300 }}\n          dropdownStyle={{ maxHeight: 200, overflow: 'auto' }}\n          placeholder={<i>请下拉选择</i>}\n          searchPlaceholder=\"please search\"\n          treeLine\n          maxTagTextLength={10}\n          searchValue={simpleSearchValue}\n          onSearch={val => {\n            this.setState({ simpleSearchValue: val });\n          }}\n          value={value}\n          treeData={simpleTreeData}\n          treeNodeFilterProp=\"title\"\n          treeDataSimpleMode={treeDataSimpleMode}\n          treeCheckable\n          showCheckedStrategy={SHOW_PARENT}\n          onChange={this.onChange}\n          onSelect={this.onSelect}\n        />\n\n        <h2>Testing in extreme conditions (Boundary conditions test) </h2>\n        <TreeSelect\n          style={{ width: 200 }}\n          dropdownStyle={{ maxHeight: 200, overflow: 'auto' }}\n          defaultValue=\"leaf1\"\n          multiple\n          treeCheckable\n          showCheckedStrategy={SHOW_PARENT}\n          treeDefaultExpandAll\n          treeData={[\n            { key: '', value: '', label: 'empty value', children: [] },\n            {\n              key: '0',\n              value: '0',\n              label: '0 label',\n              children: [\n                { key: '00', value: '00', label: '00 label', children: [] },\n                { key: '01', value: '01', label: '01 label', children: [] },\n              ],\n            },\n          ]}\n          onChange={(val, ...args) => console.log(val, ...args)}\n        />\n\n        <h2>use TreeNode Component (not recommend)</h2>\n        <TreeSelect\n          style={{ width: 200 }}\n          dropdownStyle={{ maxHeight: 200, overflow: 'auto' }}\n          defaultValue=\"leaf1\"\n          treeDefaultExpandAll\n          treeNodeFilterProp=\"title\"\n          filterTreeNode={this.filterTreeNode}\n          onChange={(val, ...args) => console.log(val, ...args)}\n        >\n          <TreeNode value=\"\" title=\"parent 1\" key=\"\">\n            <TreeNode value=\"parent 1-0\" title=\"parent 1-0\" key=\"0-1-0\">\n              <TreeNode value=\"leaf1\" title=\"my leaf\" key=\"random\" />\n              <TreeNode value=\"leaf2\" title=\"your leaf\" key=\"random1\" disabled />\n            </TreeNode>\n            <TreeNode value=\"parent 1-1\" title=\"parent 1-1\" key=\"0-1-1\">\n              <TreeNode\n                value=\"sss\"\n                title={<span style={{ color: 'red' }}>sss</span>}\n                key=\"random3\"\n              />\n              <TreeNode value=\"same value1\" title=\"same txtle\" key=\"0-1-1-1\">\n                <TreeNode\n                  value=\"same value10\"\n                  title=\"same titlexd\"\n                  key=\"0-1-1-1-0\"\n                  style={{ color: 'red', background: 'green' }}\n                />\n              </TreeNode>\n            </TreeNode>\n          </TreeNode>\n          <TreeNode value=\"same value2\" title=\"same title\" key=\"0-2\">\n            <TreeNode value=\"2same value\" title=\"2same title\" key=\"0-2-0\" />\n          </TreeNode>\n          <TreeNode value=\"same value3\" title=\"same title\" key=\"0-3\" />\n        </TreeSelect>\n      </div>\n    );\n  }\n}\n\nexport default CustomSelect;\n"]},"metadata":{},"sourceType":"module"}