{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport * as colors from '../colors';\nimport { createTheme } from '../utils/createTheme';\n\nvar orTextColor = function orTextColor(preferred) {\n  return function (p) {\n    return p[preferred] || p.textColor;\n  };\n};\n\nvar Div = styled.div.withConfig({\n  displayName: \"Reset__Div\",\n  componentId: \"sc-15i6ali-0\"\n})([\"\\n  \", \";\\n\"], function (p) {\n  return css([\"\\n    background-color: \", \";\\n    color: \", \";\\n\\n    a {\\n      color: \", \";\\n    }\\n    a:hover {\\n      color: \", \";\\n    }\\n    a:active {\\n      color: \", \";\\n    }\\n    a:focus {\\n      outline-color: \", \";\\n    }\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5 {\\n      color: \", \";\\n    }\\n    h6 {\\n      color: \", \";\\n    }\\n    small {\\n      color: \", \";\\n    }\\n  \"], p.backgroundColor, p.textColor, orTextColor('linkColor'), orTextColor('linkColorHover'), orTextColor('linkColorActive'), orTextColor('linkColorOutline'), orTextColor('headingColor'), orTextColor('subtleHeadingColor'), orTextColor('subtleTextColor'));\n});\nexport var ResetTheme = createTheme(function () {\n  return {\n    backgroundColor: colors.N0,\n    linkColor: colors.B400,\n    linkColorHover: colors.B300,\n    linkColorActive: colors.B500,\n    linkColorOutline: colors.B100,\n    headingColor: colors.N800,\n    subtleHeadingColor: colors.N200,\n    subtleTextColor: colors.N200,\n    textColor: colors.N900\n  };\n});\nexport function Reset(props) {\n  return React.createElement(ResetTheme.Provider, {\n    value: props.theme\n  }, React.createElement(ResetTheme.Consumer, null, function (tokens) {\n    return React.createElement(Div, _extends({}, _objectSpread({}, tokens, {\n      mode: undefined\n    }), props), props.children);\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}