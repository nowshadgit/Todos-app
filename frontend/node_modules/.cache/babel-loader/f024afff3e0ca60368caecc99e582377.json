{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomButton/CustomButton.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport './CustomButton.scss';\n\nconst CustomButton = props => {\n  const disabled = props.disabled,\n        isLoading = props.isLoading,\n        submitFunction = props.submitFunction,\n        text = props.text,\n        id = props.id,\n        type = props.type,\n        className = props.className;\n  const isDisabled = disabled || isLoading;\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Button // block\n  , {\n    id: id,\n    type: type,\n    className: className,\n    disabled: isDisabled,\n    onClick: eve => submitFunction(eve),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, isLoading && React.createElement(ButtonLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), !isLoading && text));\n};\n\nCustomButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  submitFunction: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired\n};\nexport default CustomButton;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomButton/CustomButton.jsx"],"names":["React","PropTypes","Button","ButtonLoader","CustomButton","props","disabled","isLoading","submitFunction","text","id","type","className","isDisabled","eve","propTypes","bool","isRequired","func","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,QAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,QACnBC,QADmB,GAC+CD,KAD/C,CACnBC,QADmB;AAAA,QACTC,SADS,GAC+CF,KAD/C,CACTE,SADS;AAAA,QACEC,cADF,GAC+CH,KAD/C,CACEG,cADF;AAAA,QACkBC,IADlB,GAC+CJ,KAD/C,CACkBI,IADlB;AAAA,QACwBC,EADxB,GAC+CL,KAD/C,CACwBK,EADxB;AAAA,QAC4BC,IAD5B,GAC+CN,KAD/C,CAC4BM,IAD5B;AAAA,QACkCC,SADlC,GAC+CP,KAD/C,CACkCO,SADlC;AAE1B,QAAMC,UAAU,GAAGP,QAAQ,IAAIC,SAA/B;AACA,SACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD,CACA;AADA;AAEA,IAAA,EAAE,EAAEG,EAFJ;AAGA,IAAA,IAAI,EAAEC,IAHN;AAIA,IAAA,SAAS,EAAEC,SAJX;AAKA,IAAA,QAAQ,EAAEC,UALV;AAMA,IAAA,OAAO,EAAEC,GAAG,IAAEN,cAAc,CAACM,GAAD,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKP,SAAS,IAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARlB,EASK,CAACA,SAAD,IAAcE,IATnB,CADJ,CADJ;AAeH,CAlBD;;AAoBAL,YAAY,CAACW,SAAb,GAAyB;AACtBT,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeC,UADH;AAEtBV,EAAAA,SAAS,EAAEN,SAAS,CAACe,IAAV,CAAeC,UAFJ;AAGtBT,EAAAA,cAAc,EAAEP,SAAS,CAACiB,IAAV,CAAeD,UAHT;AAItBR,EAAAA,IAAI,EAAER,SAAS,CAACkB,MAAV,CAAiBF,UAJD;AAKtBP,EAAAA,EAAE,EAAET,SAAS,CAACkB,MAAV,CAAiBF,UALC;AAMtBN,EAAAA,IAAI,EAAEV,SAAS,CAACkB,MAAV,CAAiBF,UAND;AAOtBL,EAAAA,SAAS,EAAEX,SAAS,CAACkB,MAAV,CAAiBF;AAPN,CAAzB;AAUA,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button } from 'react-bootstrap';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport './CustomButton.scss';\n\nconst CustomButton = props => {\n    const {disabled, isLoading, submitFunction, text, id, type, className} = props;\n    const isDisabled = disabled || isLoading;\n    return (\n        <div className=\"\" >\n            <Button\n            // block\n            id={id}\n            type={type}\n            className={className}\n            disabled={isDisabled}\n            onClick={eve=>submitFunction(eve)}\n            >\n                {isLoading && <ButtonLoader />}\n                {!isLoading && text}\n            </Button>\n      </div>\n    )\n}\n\nCustomButton.propTypes = {\n   disabled: PropTypes.bool.isRequired,\n   isLoading: PropTypes.bool.isRequired,\n   submitFunction: PropTypes.func.isRequired,\n   text: PropTypes.string.isRequired,\n   id: PropTypes.string.isRequired,\n   type: PropTypes.string.isRequired,\n   className: PropTypes.string.isRequired\n};\n\nexport default CustomButton;"]},"metadata":{},"sourceType":"module"}