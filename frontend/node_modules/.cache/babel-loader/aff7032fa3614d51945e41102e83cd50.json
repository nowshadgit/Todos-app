{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CALL_STATUS, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { getErrorResMsg } from '../../utils/formValidations';\nconst initialState = {\n  data: {},\n  inProgress: false,\n  callStatus: CALL_STATUS.PENDING,\n  errorCode: '',\n  errorMsg: {}\n};\n\nconst passwordResetStore = (stateParam, {\n  type,\n  payload\n}) => {\n  const state = stateParam || initialState;\n\n  switch (type) {\n    case ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD:\n      return _objectSpread({}, state, {\n        inProgress: true\n      });\n\n    case ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_SUCCESS:\n      return _objectSpread({}, state, {\n        inProgress: false,\n        callStatus: CALL_STATUS.RESPONDED\n      });\n\n    case ACTIONS.PASSWORD_RESET.EMAIL_SEND_FAIL:\n      return _objectSpread({}, state, {\n        inProgress: false,\n        callStatus: CALL_STATUS.RESEND\n      });\n\n    case ACTIONS.PASSWORD_RESET.RESET_STATE:\n      return _objectSpread({}, state, {\n        errorCode: '',\n        errorMsg: {},\n        callStatus: payload ? payload.callStatus : CALL_STATUS.PENDING\n      });\n\n    case ACTIONS.PASSWORD_RESET.PASSWORD_RESET:\n      return _objectSpread({}, state, {\n        inProgress: true,\n        data: payload\n      });\n\n    case ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_SUCCESS:\n      return _objectSpread({}, state, {\n        inProgress: false,\n        callStatus: CALL_STATUS.TOKEN_RESPONDED\n      });\n\n    case ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_FAIL:\n      return _objectSpread({}, state, {\n        inProgress: false,\n        callStatus: CALL_STATUS.TOKEN_ERROR,\n        errorMsg: getErrorResMsg(payload.error_code, PAGE.RESET_PASSWORD)\n      });\n\n    case ACTIONS.PASSWORD_RESET.PASSWORD_RESET_SUCCESS:\n      return _objectSpread({}, state, {\n        inProgress: false,\n        callStatus: CALL_STATUS.RESPONDED\n      });\n\n    case ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_FAIL:\n    case ACTIONS.PASSWORD_RESET.PASSWORD_RESET_FAIL:\n      return _objectSpread({}, state, {\n        inProgress: false,\n        callStatus: CALL_STATUS.ERROR,\n        errorCode: payload.error_code\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\n\nexport { passwordResetStore, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/PasswordReset/PasswordReset.reducer.js"],"names":["CALL_STATUS","PAGE","ACTIONS","getErrorResMsg","initialState","data","inProgress","callStatus","PENDING","errorCode","errorMsg","passwordResetStore","stateParam","type","payload","state","PASSWORD_RESET","FORGOT_PASSWORD","FORGOT_PASSWORD_SUCCESS","RESPONDED","EMAIL_SEND_FAIL","RESEND","RESET_STATE","VERIFY_TOKEN_SUCCESS","TOKEN_RESPONDED","VERIFY_TOKEN_FAIL","TOKEN_ERROR","error_code","RESET_PASSWORD","PASSWORD_RESET_SUCCESS","FORGOT_PASSWORD_FAIL","PASSWORD_RESET_FAIL","ERROR","dummy"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,IAAtB,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,UAAU,EAAEP,WAAW,CAACQ,OAHL;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,QAAQ,EAAE;AALS,CAArB;;AAQA,MAAMC,kBAAkB,GAAG,CAACC,UAAD,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AAC5D,QAAMC,KAAK,GAAGH,UAAU,IAAIR,YAA5B;;AACA,UAAQS,IAAR;AACE,SAAKX,OAAO,CAACc,cAAR,CAAuBC,eAA5B;AACE,+BAAYF,KAAZ;AAAmBT,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKJ,OAAO,CAACc,cAAR,CAAuBE,uBAA5B;AACE,+BAAYH,KAAZ;AAAmBT,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,UAAU,EAAEP,WAAW,CAACmB;AAA9D;;AAEF,SAAKjB,OAAO,CAACc,cAAR,CAAuBI,eAA5B;AACE,+BACKL,KADL;AAEET,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,UAAU,EAAEP,WAAW,CAACqB;AAH1B;;AAKF,SAAKnB,OAAO,CAACc,cAAR,CAAuBM,WAA5B;AACE,+BACKP,KADL;AAEEN,QAAAA,SAAS,EAAE,EAFb;AAGEC,QAAAA,QAAQ,EAAE,EAHZ;AAIEH,QAAAA,UAAU,EAAEO,OAAO,GAAGA,OAAO,CAACP,UAAX,GAAwBP,WAAW,CAACQ;AAJzD;;AAOF,SAAKN,OAAO,CAACc,cAAR,CAAuBA,cAA5B;AACE,+BAAYD,KAAZ;AAAmBT,QAAAA,UAAU,EAAE,IAA/B;AAAqCD,QAAAA,IAAI,EAAES;AAA3C;;AAEF,SAAKZ,OAAO,CAACc,cAAR,CAAuBO,oBAA5B;AACE,+BACKR,KADL;AAEET,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,UAAU,EAAEP,WAAW,CAACwB;AAH1B;;AAKF,SAAKtB,OAAO,CAACc,cAAR,CAAuBS,iBAA5B;AACE,+BACKV,KADL;AAEET,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,UAAU,EAAEP,WAAW,CAAC0B,WAH1B;AAIEhB,QAAAA,QAAQ,EAAEP,cAAc,CAACW,OAAO,CAACa,UAAT,EAAqB1B,IAAI,CAAC2B,cAA1B;AAJ1B;;AAMF,SAAK1B,OAAO,CAACc,cAAR,CAAuBa,sBAA5B;AACE,+BAAYd,KAAZ;AAAmBT,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,UAAU,EAAEP,WAAW,CAACmB;AAA9D;;AAEF,SAAKjB,OAAO,CAACc,cAAR,CAAuBc,oBAA5B;AACA,SAAK5B,OAAO,CAACc,cAAR,CAAuBe,mBAA5B;AACE,+BACKhB,KADL;AAEET,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,UAAU,EAAEP,WAAW,CAACgC,KAH1B;AAIEvB,QAAAA,SAAS,EAAEK,OAAO,CAACa;AAJrB;;AAMF;AACE,aAAOZ,KAAP;AAhDJ;AAkDD,CApDD;;AAsDA,MAAMkB,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAAStB,kBAAT,EAA6BsB,KAA7B","sourcesContent":["import { CALL_STATUS, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { getErrorResMsg } from '../../utils/formValidations';\n\nconst initialState = {\n  data: {},\n  inProgress: false,\n  callStatus: CALL_STATUS.PENDING,\n  errorCode: '',\n  errorMsg: {}\n};\n\nconst passwordResetStore = (stateParam, { type, payload }) => {\n  const state = stateParam || initialState;\n  switch (type) {\n    case ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD:\n      return { ...state, inProgress: true };\n    case ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_SUCCESS:\n      return { ...state, inProgress: false, callStatus: CALL_STATUS.RESPONDED };\n\n    case ACTIONS.PASSWORD_RESET.EMAIL_SEND_FAIL:\n      return {\n        ...state,\n        inProgress: false,\n        callStatus: CALL_STATUS.RESEND\n      };\n    case ACTIONS.PASSWORD_RESET.RESET_STATE:\n      return {\n        ...state,\n        errorCode: '',\n        errorMsg: {},\n        callStatus: payload ? payload.callStatus : CALL_STATUS.PENDING\n      };\n\n    case ACTIONS.PASSWORD_RESET.PASSWORD_RESET:\n      return { ...state, inProgress: true, data: payload };\n\n    case ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_SUCCESS:\n      return {\n        ...state,\n        inProgress: false,\n        callStatus: CALL_STATUS.TOKEN_RESPONDED\n      };\n    case ACTIONS.PASSWORD_RESET.VERIFY_TOKEN_FAIL:\n      return {\n        ...state,\n        inProgress: false,\n        callStatus: CALL_STATUS.TOKEN_ERROR,\n        errorMsg: getErrorResMsg(payload.error_code, PAGE.RESET_PASSWORD)\n      };\n    case ACTIONS.PASSWORD_RESET.PASSWORD_RESET_SUCCESS:\n      return { ...state, inProgress: false, callStatus: CALL_STATUS.RESPONDED };\n\n    case ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD_FAIL:\n    case ACTIONS.PASSWORD_RESET.PASSWORD_RESET_FAIL:\n      return {\n        ...state,\n        inProgress: false,\n        callStatus: CALL_STATUS.ERROR,\n        errorCode: payload.error_code\n      };\n    default:\n      return state;\n  }\n};\n\nconst dummy = () => {};\n\nexport { passwordResetStore, dummy };\n"]},"metadata":{},"sourceType":"module"}