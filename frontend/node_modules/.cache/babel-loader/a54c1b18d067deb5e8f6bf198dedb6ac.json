{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/utils/utils.js\";\nimport React from 'react';\nimport { reverse } from 'named-urls';\nimport { FOOTPRINTS_ROUTES } from '../config';\n\nconst showUserDetails = (userId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.USERS.DETAIL.SHOW, {\n    userId\n  });\n  props.history.push(url);\n  return true;\n};\n\nconst getUserCard = data => {\n  const userCard = Object.values(data).map(userData => {\n    const Id = userData.id;\n    const title = userData.first_name && userData.last_name ? \"\".concat(userData.first_name, \" \").concat(userData.last_name) : 'User';\n    const body = React.createElement(\"div\", {\n      className: \"card-data-body user-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Email: \", userData.email);\n    return {\n      title,\n      body,\n      Id\n    };\n  });\n  return userCard;\n};\n\nconst getOrgUnits = data => {\n  const orgCard = Object.values(data).map(orgData => {\n    const Id = orgData.id;\n    const title = orgData.name;\n    const disable = !orgData.has_children;\n    const body = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"testing\");\n    return {\n      title,\n      body,\n      Id,\n      disable\n    };\n  });\n  return orgCard;\n};\n\nconst getOrgUnitsNext = (orgUnitId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, {\n    orgUnitId\n  });\n  props.history.push(url);\n};\n\nconst getOrgUnitUrl = orgUnitId => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, {\n    orgUnitId\n  });\n  return url;\n};\n\nconst getAssetAttributes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const userId = assetData.id;\n    const title = assetData.name;\n    const body = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, assetData);\n    return {\n      title,\n      body,\n      userId\n    };\n  });\n  return assetCard;\n};\n\nconst getAssetTypes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const userId = assetData.id;\n    const title = assetData.name;\n    const body = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, assetData.color);\n    return {\n      title,\n      body,\n      userId\n    };\n  });\n  return assetCard;\n};\n\nconst getBreadcrumbs = actions => {\n  const path = [];\n  path.push({\n    id: actions.id,\n    name: actions.name\n  });\n  let parent = actions.parent;\n\n  while (Object.keys(parent).length !== 0) {\n    path.push({\n      id: parent.id,\n      name: parent.name\n    });\n    parent = parent.parent;\n  }\n\n  return path;\n};\n\nconst redirect = (props, url) => {\n  props.history.push(url);\n};\n\nconst getFormatOfdData = dData => {\n  const format = dData.map(department => {\n    return {\n      value: department.id,\n      label: department.name\n    };\n  });\n  return format;\n};\n\nconst redirectToDepartments = () => {\n  return true;\n};\n\nconst dummy = () => {};\n\nexport { getUserCard, showUserDetails, getOrgUnits, getOrgUnitsNext, redirect, getFormatOfdData, redirectToDepartments, getAssetAttributes, getAssetTypes, getBreadcrumbs, getOrgUnitUrl, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/utils/utils.js"],"names":["React","reverse","FOOTPRINTS_ROUTES","showUserDetails","userId","props","url","USERS","DETAIL","SHOW","history","push","getUserCard","data","userCard","Object","values","map","userData","Id","id","title","first_name","last_name","body","email","getOrgUnits","orgCard","orgData","name","disable","has_children","getOrgUnitsNext","orgUnitId","ORG_UNITS","getOrgUnitUrl","getAssetAttributes","assetCard","assetData","getAssetTypes","color","getBreadcrumbs","actions","path","parent","keys","length","redirect","getFormatOfdData","dData","format","department","value","label","redirectToDepartments","dummy"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { reverse } from 'named-urls';\nimport { FOOTPRINTS_ROUTES } from '../config';\n\nconst showUserDetails = (userId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.USERS.DETAIL.SHOW, { userId });\n  props.history.push(url);\n  return true;\n};\n\nconst getUserCard = data => {\n  const userCard = Object.values(data).map(userData => {\n    const Id = userData.id;\n    const title =\n      userData.first_name && userData.last_name\n        ? `${userData.first_name} ${userData.last_name}`\n        : 'User';\n\n    const body = (\n      <div className=\"card-data-body user-email\">Email: {userData.email}</div>\n    );\n    return { title, body, Id };\n  });\n\n  return userCard;\n};\n\nconst getOrgUnits = data => {\n  const orgCard = Object.values(data).map(orgData => {\n    const Id = orgData.id;\n    const title = orgData.name;\n    const disable = !orgData.has_children;\n    const body = <div>testing</div>;\n    return { title, body, Id, disable };\n  });\n  return orgCard;\n};\n\nconst getOrgUnitsNext = (orgUnitId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, { orgUnitId });\n  props.history.push(url);\n};\n\nconst getOrgUnitUrl = orgUnitId => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, { orgUnitId });\n  return url;\n};\nconst getAssetAttributes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const userId = assetData.id;\n    const title = assetData.name;\n    const body = <div>{assetData}</div>;\n    return { title, body, userId };\n  });\n  return assetCard;\n};\n\nconst getAssetTypes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const userId = assetData.id;\n    const title = assetData.name;\n    const body = <div>{assetData.color}</div>;\n    return { title, body, userId };\n  });\n  return assetCard;\n};\n\nconst getBreadcrumbs = actions => {\n  const path = [];\n  path.push({ id: actions.id, name: actions.name });\n  let { parent } = actions;\n  while (Object.keys(parent).length !== 0) {\n    path.push({ id: parent.id, name: parent.name });\n    parent = parent.parent;\n  }\n  return path;\n};\n\nconst redirect = (props, url) => {\n  props.history.push(url);\n};\n\nconst getFormatOfdData = dData => {\n  const format = dData.map(department => {\n    return { value: department.id, label: department.name };\n  });\n  return format;\n};\n\nconst redirectToDepartments = () => {\n  return true;\n};\nconst dummy = () => {};\nexport {\n  getUserCard,\n  showUserDetails,\n  getOrgUnits,\n  getOrgUnitsNext,\n  redirect,\n  getFormatOfdData,\n  redirectToDepartments,\n  getAssetAttributes,\n  getAssetTypes,\n  getBreadcrumbs,\n  getOrgUnitUrl,\n  dummy\n};\n"]},"metadata":{},"sourceType":"module"}