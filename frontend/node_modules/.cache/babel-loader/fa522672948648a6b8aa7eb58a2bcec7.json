{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomTreeSelect/CustomTreeSelect.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport 'react-dropdown-tree-select/dist/styles.css';\nimport './CustomTreeSelect.scss';\nimport DropdownTreeSelect from 'react-dropdown-tree-select';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants';\nimport { getActionsFormate } from '../../utils/common';\n\nclass CustomTreeSelect extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          getData = _this$props.getData,\n          page = _this$props.page;\n    const dtype = pageConfig[page].actions.getAllOrgUnit;\n    getData(dtype);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          allOrgUnit = _this$props2.allOrgUnit,\n          onChange = _this$props2.onChange,\n          mode = _this$props2.mode,\n          defaultValues = _this$props2.defaultValues,\n          page = _this$props2.page,\n          placeholder = _this$props2.placeholder;\n    const getFormate = pageConfig[page].formate;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-drop-down \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(DropdownTreeSelect, {\n      texts: {\n        placeholder\n      },\n      data: getFormate(allOrgUnit, defaultValues),\n      onChange: onChange,\n      mode: mode,\n      id: \"custom-tree-select\",\n      className: allOrgUnit.length > 0 ? 'col col-10' : 'no-data col col-10',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nCustomTreeSelect.propTypes = {\n  page: PropTypes.string,\n  getData: PropTypes.func,\n  allOrgUnit: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  onChange: PropTypes.func,\n  mode: PropTypes.string,\n  defaultValues: PropTypes.array,\n  placeholder: PropTypes.string\n};\nCustomTreeSelect.defaultProps = {\n  allOrgUnit: []\n};\n\nconst mapStateToProps = state => {\n  return {\n    errorCode: state.addEditOrgUnitReducerStore.errorCode,\n    allOrgUnit: state.commonReducerStore[STORE.ALL_ORG_UNIT]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CustomTreeSelect));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomTreeSelect/CustomTreeSelect.jsx"],"names":["React","connect","withRouter","PropTypes","DropdownTreeSelect","pageConfig","STORE","getActionsFormate","CustomTreeSelect","Component","componentDidMount","props","getData","page","dtype","actions","getAllOrgUnit","render","allOrgUnit","onChange","mode","defaultValues","placeholder","getFormate","formate","length","propTypes","string","func","oneOfType","array","object","defaultProps","mapStateToProps","state","errorCode","addEditOrgUnitReducerStore","commonReducerStore","ALL_ORG_UNIT","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,4CAAP;AACA,OAAO,yBAAP;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAEA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAC7CC,EAAAA,iBAAiB,GAAG;AAAA,wBACQ,KAAKC,KADb;AAAA,UACVC,OADU,eACVA,OADU;AAAA,UACDC,IADC,eACDA,IADC;AAElB,UAAMC,KAAK,GAAGT,UAAU,CAACQ,IAAD,CAAV,CAAiBE,OAAjB,CAAyBC,aAAvC;AACAJ,IAAAA,OAAO,CAACE,KAAD,CAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,yBAQH,KAAKN,KARF;AAAA,UAELO,UAFK,gBAELA,UAFK;AAAA,UAGLC,QAHK,gBAGLA,QAHK;AAAA,UAILC,IAJK,gBAILA,IAJK;AAAA,UAKLC,aALK,gBAKLA,aALK;AAAA,UAMLR,IANK,gBAMLA,IANK;AAAA,UAOLS,WAPK,gBAOLA,WAPK;AASP,UAAMC,UAAU,GAAGlB,UAAU,CAACQ,IAAD,CAAV,CAAiBW,OAApC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAE;AAAEF,QAAAA;AAAF,OADT;AAEE,MAAA,IAAI,EAAEC,UAAU,CAACL,UAAD,EAAaG,aAAb,CAFlB;AAGE,MAAA,QAAQ,EAAEF,QAHZ;AAIE,MAAA,IAAI,EAAEC,IAJR;AAKE,MAAA,EAAE,EAAC,oBALL;AAME,MAAA,SAAS,EACPF,UAAU,CAACO,MAAX,GAAoB,CAApB,GAAwB,YAAxB,GAAuC,oBAP3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AAkBD;;AAnC4C;;AAsC/CjB,gBAAgB,CAACkB,SAAjB,GAA6B;AAC3Bb,EAAAA,IAAI,EAAEV,SAAS,CAACwB,MADW;AAE3Bf,EAAAA,OAAO,EAAET,SAAS,CAACyB,IAFQ;AAG3BV,EAAAA,UAAU,EAAEf,SAAS,CAAC0B,SAAV,CAAoB,CAAC1B,SAAS,CAAC2B,KAAX,EAAkB3B,SAAS,CAAC4B,MAA5B,CAApB,CAHe;AAI3BZ,EAAAA,QAAQ,EAAEhB,SAAS,CAACyB,IAJO;AAK3BR,EAAAA,IAAI,EAAEjB,SAAS,CAACwB,MALW;AAM3BN,EAAAA,aAAa,EAAElB,SAAS,CAAC2B,KANE;AAO3BR,EAAAA,WAAW,EAAEnB,SAAS,CAACwB;AAPI,CAA7B;AAUAnB,gBAAgB,CAACwB,YAAjB,GAAgC;AAC9Bd,EAAAA,UAAU,EAAE;AADkB,CAAhC;;AAIA,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACE,0BAAN,CAAiCD,SADvC;AAELjB,IAAAA,UAAU,EAAEgB,KAAK,CAACG,kBAAN,CAAyB/B,KAAK,CAACgC,YAA/B;AAFP,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACL5B,IAAAA,OAAO,EAAE6B,IAAI,IAAI;AACfD,MAAAA,QAAQ,CAACjC,iBAAiB,CAACkC,IAAD,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAevC,UAAU,CACvBD,OAAO,CACLgC,eADK,EAELM,kBAFK,CAAP,CAGE/B,gBAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport 'react-dropdown-tree-select/dist/styles.css';\nimport './CustomTreeSelect.scss';\nimport DropdownTreeSelect from 'react-dropdown-tree-select';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants';\nimport { getActionsFormate } from '../../utils/common';\n\nclass CustomTreeSelect extends React.Component {\n  componentDidMount() {\n    const { getData, page } = this.props;\n    const dtype = pageConfig[page].actions.getAllOrgUnit;\n    getData(dtype);\n  }\n\n  render() {\n    const {\n      allOrgUnit,\n      onChange,\n      mode,\n      defaultValues,\n      page,\n      placeholder\n    } = this.props;\n    const getFormate = pageConfig[page].formate;\n    return (\n      <div>\n        <div className=\"custom-drop-down \">\n          <div className=\"row\">\n            <DropdownTreeSelect\n              texts={{ placeholder }}\n              data={getFormate(allOrgUnit, defaultValues)}\n              onChange={onChange}\n              mode={mode}\n              id=\"custom-tree-select\"\n              className={\n                allOrgUnit.length > 0 ? 'col col-10' : 'no-data col col-10'\n              }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCustomTreeSelect.propTypes = {\n  page: PropTypes.string,\n  getData: PropTypes.func,\n  allOrgUnit: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  onChange: PropTypes.func,\n  mode: PropTypes.string,\n  defaultValues: PropTypes.array,\n  placeholder: PropTypes.string\n};\n\nCustomTreeSelect.defaultProps = {\n  allOrgUnit: []\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    errorCode: state.addEditOrgUnitReducerStore.errorCode,\n    allOrgUnit: state.commonReducerStore[STORE.ALL_ORG_UNIT]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CustomTreeSelect)\n);\n"]},"metadata":{},"sourceType":"module"}