{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ChangePassword/ChangePassword.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { PASSWORDS_NO_MATCH } from '../../utils/errorMessages';\nimport { checkPasswordStrength, getErrorResMsg } from '../../utils/formValidations';\nimport { CHANGE_PASSWORD_HEADER, PAGE, CALL_STATUS } from '../../utils/constants';\nimport ChangePasswordForm from '../../components/ChangePasswordForm';\nimport ModalWrapper from '../../components/ModalWrapper/ModalWrapper';\nimport { logout } from '../../utils/authService';\nimport { userSessionCookie, rememberUserCookie } from '../../config';\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.NEW_PASSWORD_FIELD_ID = 'new-password';\n    this.CURRENT_PASSWORD_FIELD_ID = 'current-password';\n    this.CONFIRM_NEW_PASSWORD_FIELD_ID = 'confirm-new-password';\n\n    this.enableSubmit = () => {\n      const currentPassword = this.state[this.CURRENT_PASSWORD_FIELD_ID];\n      const newPassword = this.state[this.NEW_PASSWORD_FIELD_ID];\n      const conformNewPassword = this.state[this.CONFIRM_NEW_PASSWORD_FIELD_ID];\n      const disabled = !(currentPassword.length > 0 && newPassword.length > 0 && conformNewPassword.length > 0);\n      this.setState({\n        submitDisabled: disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit());\n    };\n\n    this.validateForm = () => {\n      const _checkPasswordStrengt = checkPasswordStrength(this.state[this.NEW_PASSWORD_FIELD_ID], 'Password'),\n            _checkPasswordStrengt2 = _slicedToArray(_checkPasswordStrengt, 2),\n            newPasswordValidity = _checkPasswordStrengt2[0],\n            newPasswordErr = _checkPasswordStrengt2[1];\n\n      const formErrors = {};\n      const isEqual = this.state[this.NEW_PASSWORD_FIELD_ID] === this.state[this.CONFIRM_NEW_PASSWORD_FIELD_ID];\n      const formValidity = newPasswordValidity && isEqual;\n\n      if (!isEqual) {\n        formErrors[this.CONFIRM_NEW_PASSWORD_FIELD_ID] = [PASSWORDS_NO_MATCH];\n      }\n\n      this.setState({\n        formErrors: _objectSpread({}, newPasswordErr, {}, formErrors)\n      });\n      return formValidity;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.dispatch({\n        type: ACTIONS.PROFILE.RESET_STATE\n      });\n\n      if (this.validateForm()) {\n        const data = {\n          old_password: this.state[this.CURRENT_PASSWORD_FIELD_ID],\n          new_password: this.state[this.NEW_PASSWORD_FIELD_ID],\n          confirm_password: this.state[this.CONFIRM_NEW_PASSWORD_FIELD_ID]\n        };\n        this.submit(data);\n      }\n    };\n\n    this.submit = data => {\n      this.setState({\n        errorCode: ''\n      });\n      this.props.dispatch({\n        type: ACTIONS.PROFILE.CHANGE_PASSWORD,\n        data\n      });\n    };\n\n    this.closeModal = () => {\n      this.props.dispatch({\n        type: ACTIONS.PROFILE.HIDE_CHANGE_PASSWORD\n      });\n      this.setState({\n        submitDisabled: true,\n        [this.NEW_PASSWORD_FIELD_ID]: '',\n        [this.CURRENT_PASSWORD_FIELD_ID]: '',\n        [this.CONFIRM_NEW_PASSWORD_FIELD_ID]: '',\n        formErrors: {}\n      });\n    };\n\n    this.state = {\n      submitDisabled: true,\n      [this.NEW_PASSWORD_FIELD_ID]: '',\n      [this.CURRENT_PASSWORD_FIELD_ID]: '',\n      [this.CONFIRM_NEW_PASSWORD_FIELD_ID]: '',\n      formErrors: {},\n      errorCode: ''\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    const errorCode = nextProps.changePassword.errorCode;\n\n    if (errorCode && errorCode !== state.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.CHANGE_PASSWORD);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    const _this$props = this.props,\n          changePassword = _this$props.changePassword,\n          inProgress = _this$props.inProgress;\n    const show = changePassword.show;\n    let common = React.createElement(ChangePasswordForm, {\n      disabled: this.state.submitDisabled,\n      handleSubmit: this.handleSubmit,\n      formErrors: this.state.formErrors,\n      currentPasswordId: this.CURRENT_PASSWORD_FIELD_ID,\n      currentPasswordValue: this.state[this.CURRENT_PASSWORD_FIELD_ID],\n      newPasswordId: this.NEW_PASSWORD_FIELD_ID,\n      newPasswordValue: this.state[this.NEW_PASSWORD_FIELD_ID],\n      confirmPasswordId: this.CONFIRM_NEW_PASSWORD_FIELD_ID,\n      confirmPasswordValue: this.state[this.CONFIRM_NEW_PASSWORD_FIELD_ID],\n      handleChange: this.handleChange,\n      inProgress: inProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    });\n    const changePasswordSucc = React.createElement(\"div\", {\n      className: \"card-text text-left\",\n      id: \"change-password-suc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Password has been set, redirecting to login ...\");\n\n    if (this.props.changePassword.callStatus === CALL_STATUS.RESPONDED) {\n      common = changePasswordSucc;\n      setTimeout(() => {\n        logout(userSessionCookie, rememberUserCookie);\n      }, 5000);\n    }\n\n    const wrapper = React.createElement(ModalWrapper, {\n      title: CHANGE_PASSWORD_HEADER,\n      onClose: this.closeModal,\n      show: show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, common);\n    return React.createElement(\"div\", {\n      className: \"change-password-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, wrapper);\n  }\n\n}\n\nChangePassword.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  changePassword: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  changePassword: state.changePasswordStore\n});\n\nexport default withRouter(connect(mapStateToProps)(ChangePassword));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ChangePassword/ChangePassword.jsx"],"names":["React","PropTypes","connect","withRouter","ACTIONS","PASSWORDS_NO_MATCH","checkPasswordStrength","getErrorResMsg","CHANGE_PASSWORD_HEADER","PAGE","CALL_STATUS","ChangePasswordForm","ModalWrapper","logout","userSessionCookie","rememberUserCookie","ChangePassword","Component","constructor","props","NEW_PASSWORD_FIELD_ID","CURRENT_PASSWORD_FIELD_ID","CONFIRM_NEW_PASSWORD_FIELD_ID","enableSubmit","currentPassword","state","newPassword","conformNewPassword","disabled","length","setState","submitDisabled","handleChange","event","target","id","value","formErrors","validateForm","newPasswordValidity","newPasswordErr","isEqual","formValidity","handleSubmit","preventDefault","dispatch","type","PROFILE","RESET_STATE","data","old_password","new_password","confirm_password","submit","errorCode","CHANGE_PASSWORD","closeModal","HIDE_CHANGE_PASSWORD","getDerivedStateFromProps","nextProps","changePassword","errMsg","render","inProgress","show","common","changePasswordSucc","callStatus","RESPONDED","setTimeout","wrapper","propTypes","func","isRequired","object","mapStateToProps","changePasswordStore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { PASSWORDS_NO_MATCH } from '../../utils/errorMessages';\nimport {\n  checkPasswordStrength,\n  getErrorResMsg\n} from '../../utils/formValidations';\nimport {\n  CHANGE_PASSWORD_HEADER,\n  PAGE,\n  CALL_STATUS\n} from '../../utils/constants';\nimport ChangePasswordForm from '../../components/ChangePasswordForm';\nimport ModalWrapper from '../../components/ModalWrapper/ModalWrapper';\nimport { logout } from '../../utils/authService';\nimport { userSessionCookie, rememberUserCookie } from '../../config';\n\nclass ChangePassword extends React.Component {\n  NEW_PASSWORD_FIELD_ID = 'new-password';\n\n  CURRENT_PASSWORD_FIELD_ID = 'current-password';\n\n  CONFIRM_NEW_PASSWORD_FIELD_ID = 'confirm-new-password';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitDisabled: true,\n      [this.NEW_PASSWORD_FIELD_ID]: '',\n      [this.CURRENT_PASSWORD_FIELD_ID]: '',\n      [this.CONFIRM_NEW_PASSWORD_FIELD_ID]: '',\n      formErrors: {},\n      errorCode: ''\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    const { errorCode } = nextProps.changePassword;\n    if (errorCode && errorCode !== state.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.CHANGE_PASSWORD);\n\n      return { formErrors: errMsg, errorCode };\n    }\n    return {};\n  }\n\n  enableSubmit = () => {\n    const currentPassword = this.state[this.CURRENT_PASSWORD_FIELD_ID];\n    const newPassword = this.state[this.NEW_PASSWORD_FIELD_ID];\n    const conformNewPassword = this.state[this.CONFIRM_NEW_PASSWORD_FIELD_ID];\n    const disabled = !(\n      currentPassword.length > 0 &&\n      newPassword.length > 0 &&\n      conformNewPassword.length > 0\n    );\n    this.setState({ submitDisabled: disabled });\n  };\n\n  handleChange = event => {\n    this.setState(\n      { [event.target.id]: event.target.value, formErrors: {} },\n      () => this.enableSubmit()\n    );\n  };\n\n  validateForm = () => {\n    const [newPasswordValidity, newPasswordErr] = checkPasswordStrength(\n      this.state[this.NEW_PASSWORD_FIELD_ID],\n      'Password'\n    );\n\n    const formErrors = {};\n    const isEqual =\n      this.state[this.NEW_PASSWORD_FIELD_ID] ===\n      this.state[this.CONFIRM_NEW_PASSWORD_FIELD_ID];\n    const formValidity = newPasswordValidity && isEqual;\n\n    if (!isEqual) {\n      formErrors[this.CONFIRM_NEW_PASSWORD_FIELD_ID] = [PASSWORDS_NO_MATCH];\n    }\n\n    this.setState({ formErrors: { ...newPasswordErr, ...formErrors } });\n\n    return formValidity;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.dispatch({ type: ACTIONS.PROFILE.RESET_STATE });\n    if (this.validateForm()) {\n      const data = {\n        old_password: this.state[this.CURRENT_PASSWORD_FIELD_ID],\n        new_password: this.state[this.NEW_PASSWORD_FIELD_ID],\n        confirm_password: this.state[this.CONFIRM_NEW_PASSWORD_FIELD_ID]\n      };\n      this.submit(data);\n    }\n  };\n\n  submit = data => {\n    this.setState({ errorCode: '' });\n    this.props.dispatch({\n      type: ACTIONS.PROFILE.CHANGE_PASSWORD,\n      data\n    });\n  };\n\n  closeModal = () => {\n    this.props.dispatch({ type: ACTIONS.PROFILE.HIDE_CHANGE_PASSWORD });\n    this.setState({\n      submitDisabled: true,\n      [this.NEW_PASSWORD_FIELD_ID]: '',\n      [this.CURRENT_PASSWORD_FIELD_ID]: '',\n      [this.CONFIRM_NEW_PASSWORD_FIELD_ID]: '',\n      formErrors: {}\n    });\n  };\n\n  render() {\n    const { changePassword, inProgress } = this.props;\n    const { show } = changePassword;\n    let common = (\n      <ChangePasswordForm\n        disabled={this.state.submitDisabled}\n        handleSubmit={this.handleSubmit}\n        formErrors={this.state.formErrors}\n        currentPasswordId={this.CURRENT_PASSWORD_FIELD_ID}\n        currentPasswordValue={this.state[this.CURRENT_PASSWORD_FIELD_ID]}\n        newPasswordId={this.NEW_PASSWORD_FIELD_ID}\n        newPasswordValue={this.state[this.NEW_PASSWORD_FIELD_ID]}\n        confirmPasswordId={this.CONFIRM_NEW_PASSWORD_FIELD_ID}\n        confirmPasswordValue={this.state[this.CONFIRM_NEW_PASSWORD_FIELD_ID]}\n        handleChange={this.handleChange}\n        inProgress={inProgress}\n      />\n    );\n    const changePasswordSucc = (\n      <div className=\"card-text text-left\" id=\"change-password-suc\">\n        Password has been set, redirecting to login ...\n      </div>\n    );\n    if (this.props.changePassword.callStatus === CALL_STATUS.RESPONDED) {\n      common = changePasswordSucc;\n      setTimeout(() => {\n        logout(userSessionCookie, rememberUserCookie);\n      }, 5000);\n    }\n    const wrapper = (\n      <ModalWrapper\n        title={CHANGE_PASSWORD_HEADER}\n        onClose={this.closeModal}\n        show={show}\n      >\n        {common}\n      </ModalWrapper>\n    );\n\n    return <div className=\"change-password-container\">{wrapper}</div>;\n  }\n}\n\nChangePassword.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  changePassword: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  changePassword: state.changePasswordStore\n});\n\nexport default withRouter(connect(mapStateToProps)(ChangePassword));\n"]},"metadata":{},"sourceType":"module"}