{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { TODOS } from '../../apiConfig/api.config';\nimport { reverse } from 'named-urls';\n\nfunction* getTodos(action) {\n  let response;\n\n  try {\n    const _action$data = action.data,\n          limit = _action$data.limit,\n          offset = _action$data.offset,\n          location = _action$data.location; // const url = `${\n    //   TODOS.GET_TODOS\n    // }\n    // ?limit=${limit}&offset=${offset} ${\n    //   location ? `&location=${location}` : ''\n    // }`;\n\n    response = yield call(window.axios.getData, reverse(TODOS.GET_TODOS));\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.QR_CODES.GET_QR_CODES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.QR_CODES.GET_QR_CODES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.QR_CODES.GET_QR_CODES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport { getTodos, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/containers/Todos/Todos.saga.js"],"names":["call","put","ACTIONS","TODOS","reverse","getTodos","action","response","data","limit","offset","location","window","axios","getData","GET_TODOS","status","type","QR_CODES","GET_QR_CODES_SUCCESS","payload","GET_QR_CODES_FAIL","ALERT_MESSAGE","FAIL","e","dummy"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,UAAUC,QAAV,CAAmBC,MAAnB,EAA2B;AACzB,MAAIC,QAAJ;;AACA,MAAI;AAAA,yBACkCD,MAAM,CAACE,IADzC;AAAA,UACMC,KADN,gBACMA,KADN;AAAA,UACaC,MADb,gBACaA,MADb;AAAA,UACqBC,QADrB,gBACqBA,QADrB,EAEF;AACA;AACA;AACA;AACA;AACA;;AACAJ,IAAAA,QAAQ,GAAG,MAAMP,IAAI,CAACY,MAAM,CAACC,KAAP,CAAaC,OAAd,EAAuBV,OAAO,CAACD,KAAK,CAACY,SAAP,CAA9B,CAArB;;AACA,QAAIR,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMf,GAAG,CAAC;AACRgB,QAAAA,IAAI,EAAEf,OAAO,CAACgB,QAAR,CAAiBC,oBADf;AAERC,QAAAA,OAAO,EAAEb,QAAQ,CAACC;AAFV,OAAD,CAAT;AAID,KALD,MAKO;AACL,YAAMP,GAAG,CAAC;AACRgB,QAAAA,IAAI,EAAEf,OAAO,CAACgB,QAAR,CAAiBG,iBADf;AAERD,QAAAA,OAAO,EAAEb,QAAQ,CAACC;AAFV,OAAD,CAAT;AAIA,YAAMP,GAAG,CAAC;AACRgB,QAAAA,IAAI,EAAEf,OAAO,CAACoB,aAAR,CAAsBC,IADpB;AAERH,QAAAA,OAAO,oBAAOb,QAAQ,CAACC,IAAhB,MAAyBF,MAAM,CAACE,IAAhC;AAFC,OAAD,CAAT;AAID;AACF,GAxBD,CAwBE,OAAOgB,CAAP,EAAU;AACV,UAAMvB,GAAG,CAAC;AAAEgB,MAAAA,IAAI,EAAEf,OAAO,CAACgB,QAAR,CAAiBG,iBAAzB;AAA4CD,MAAAA,OAAO,EAAEI;AAArD,KAAD,CAAT;AACA,UAAMvB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEf,OAAO,CAACoB,aAAR,CAAsBC,IADpB;AAERH,MAAAA,OAAO,oBAAOb,QAAQ,CAACC,IAAhB,MAAyBF,MAAM,CAACE,IAAhC;AAFC,KAAD,CAAT;AAID;AACF;;AAED,MAAMiB,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAASpB,QAAT,EAAmBoB,KAAnB","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { TODOS } from '../../apiConfig/api.config';\nimport { reverse } from 'named-urls';\n\nfunction* getTodos(action) {\n  let response;\n  try {\n    const { limit, offset, location } = action.data;\n    // const url = `${\n    //   TODOS.GET_TODOS\n    // }\n    // ?limit=${limit}&offset=${offset} ${\n    //   location ? `&location=${location}` : ''\n    // }`;\n    response = yield call(window.axios.getData, reverse(TODOS.GET_TODOS));\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.QR_CODES.GET_QR_CODES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.QR_CODES.GET_QR_CODES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.QR_CODES.GET_QR_CODES_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport { getTodos, dummy };\n"]},"metadata":{},"sourceType":"module"}