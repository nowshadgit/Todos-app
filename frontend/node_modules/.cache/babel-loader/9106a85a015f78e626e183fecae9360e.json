{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Todo/frontend/src/containers/AddEditTodo/AddEditTodo.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { reverse } from 'named-urls';\nimport AddEditTodoForm from '../../components/AddEditTodoForm/AddEditTodoForm';\nimport { PAGE, STORE } from '../../utils/constants';\nimport { getErrorResMsg } from '../../utils/formValidations';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { redirect } from '../../utils/utils';\nimport { FOOTPRINTS_ROUTES } from '../../config';\nimport './AddEditTodo.scss';\n\nclass AddEditTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.TODO_TITLE = 'todo-title';\n    this.TODO_DESCRIPTION = 'todo-description';\n\n    this.fetchTodoDetails = () => {\n      const _this$props = this.props,\n            page = _this$props.page,\n            getTodoDetails = _this$props.getTodoDetails,\n            match = _this$props.match;\n\n      if (page === PAGE.UPDATE_TODO) {\n        console.log(\"page:\", page, match.params);\n        getTodoDetails(ACTIONS.TODOS.GET_TODO_DETAILS, _objectSpread({}, match.params));\n      }\n    };\n\n    this.enableSubmit = (title, description) => {\n      const disabled = !(title.length > 0 && description.length > 0);\n\n      if (this.props.addEditTodoReducerStore.errorCode) {\n        const type = ACTIONS.TODOS.RESET_STATE;\n        this.props.resetState(type);\n        this.setState({\n          errorCode: ''\n        });\n      }\n\n      this.setState({\n        disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.TODO_TITLE], this.state[this.TODO_DESCRIPTION]));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const data = {\n        title: this.state[this.TODO_TITLE],\n        description: this.state[this.TODO_DESCRIPTION]\n      };\n      const type = pageConfig[this.props.page].actions.postData;\n      this.props.submit(type, {\n        data,\n        props: this.props\n      });\n      this.enableSubmit(this.state[this.TODO_TITLE], this.state[this.TODO_DESCRIPTION]);\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.ASSET_TYPE_FIELD_ID]: '',\n      [this.TODO_DESCRIPTION]: '',\n      errorCode: '',\n      disabled: true,\n      firstRender: true\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const addEditTodoReducerStore = nextProps.addEditTodoReducerStore,\n          page = nextProps.page;\n    const errorCode = addEditTodoReducerStore.errorCode;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, page);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    if (nextProps.page === PAGE.UPDATE_TODO && prevState.firstRender && addEditTodoReducerStore.data && addEditTodoReducerStore.data.length > 0) {\n      const todoTitle = addEditTodoReducerStore.data[0].title;\n      const todoDesc = addEditTodoReducerStore.data[0].description;\n      const disabled = !(todoTitle.length > 0 && todoDesc.length > 0);\n      return {\n        ['todo-title']: todoTitle,\n        ['todo-description']: todoDesc,\n        disabled: disabled,\n        firstRender: false\n      };\n    }\n\n    return prevState;\n  }\n\n  componentDidMount() {\n    this.fetchTodoDetails();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPage !== prevState.currentPage) {\n      this.fetchTodoDetails();\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          addEditTodoReducerStore = _this$props2.addEditTodoReducerStore,\n          page = _this$props2.page;\n    const inProgress = addEditTodoReducerStore.inProgress,\n          data = addEditTodoReducerStore.data;\n    const pageTitle = pageConfig[page].pageTitle;\n    console.log(\"akjshdsa\", data);\n    return React.createElement(\"div\", {\n      id: \"add-edit-todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(AddEditTodoForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      disabled: this.state.disabled,\n      todoTitleId: this.TODO_TITLE,\n      todoDescriptionId: this.TODO_DESCRIPTION,\n      todoTitleValue: this.state[this.TODO_TITLE],\n      todoDescriptionValue: this.state[this.TODO_DESCRIPTION],\n      inProgress: inProgress,\n      formErrors: this.state.formErrors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAddEditTodo.propTypes = {\n  page: PropTypes.string.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  resetState: PropTypes.func.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  addEditTodoReducerStore: PropTypes.object.isRequired,\n  getTodoDetails: PropTypes.func.isRequired\n};\nAddEditTodo.defaultProps = {\n  errorCode: ''\n};\n\nconst mapStateToProps = state => ({\n  addEditTodoReducerStore: state.addEditTodoReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    },\n    getTodoDetails: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditTodo));","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/containers/AddEditTodo/AddEditTodo.jsx"],"names":["React","connect","withRouter","PropTypes","reverse","AddEditTodoForm","PAGE","STORE","getErrorResMsg","pageConfig","getActionsFormate","PageHeader","ACTIONS","redirect","FOOTPRINTS_ROUTES","AddEditTodo","Component","constructor","props","TODO_TITLE","TODO_DESCRIPTION","fetchTodoDetails","page","getTodoDetails","match","UPDATE_TODO","console","log","params","TODOS","GET_TODO_DETAILS","enableSubmit","title","description","disabled","length","addEditTodoReducerStore","errorCode","type","RESET_STATE","resetState","setState","handleChange","event","target","id","value","formErrors","state","handleSubmit","preventDefault","data","actions","postData","submit","formValidity","ASSET_TYPE_FIELD_ID","firstRender","getDerivedStateFromProps","nextProps","prevState","errMsg","todoTitle","todoDesc","componentDidMount","componentDidUpdate","prevProps","currentPage","render","inProgress","pageTitle","propTypes","string","isRequired","func","oneOfType","number","bool","object","defaultProps","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,uBAA5B;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAO,oBAAP;;AAEA,MAAMC,WAAN,SAA0Bf,KAAK,CAACgB,SAAhC,CAA0C;AAKxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAJnBC,UAImB,GAJN,YAIM;AAAA,SAFnBC,gBAEmB,GAFA,kBAEA;;AAAA,SAiDnBC,gBAjDmB,GAiDD,MAAI;AAAA,0BACmB,KAAKH,KADxB;AAAA,YACZI,IADY,eACZA,IADY;AAAA,YACNC,cADM,eACNA,cADM;AAAA,YACUC,KADV,eACUA,KADV;;AAEpB,UAAGF,IAAI,KAAKhB,IAAI,CAACmB,WAAjB,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,IAApB,EAA0BE,KAAK,CAACI,MAAhC;AACAL,QAAAA,cAAc,CAACX,OAAO,CAACiB,KAAR,CAAcC,gBAAf,oBAAqCN,KAAK,CAACI,MAA3C,EAAd;AACD;AACF,KAvDkB;;AAAA,SAyDnBG,YAzDmB,GAyDJ,CAACC,KAAD,EAAQC,WAAR,KAAwB;AACrC,YAAMC,QAAQ,GAAG,EAAEF,KAAK,CAACG,MAAN,GAAe,CAAf,IAAoBF,WAAW,CAACE,MAAZ,GAAqB,CAA3C,CAAjB;;AAEA,UAAI,KAAKjB,KAAL,CAAWkB,uBAAX,CAAmCC,SAAvC,EAAkD;AAChD,cAAMC,IAAI,GAAG1B,OAAO,CAACiB,KAAR,CAAcU,WAA3B;AACA,aAAKrB,KAAL,CAAWsB,UAAX,CAAsBF,IAAtB;AACA,aAAKG,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;;AACD,WAAKI,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAlEkB;;AAAA,SAoEnBQ,YApEmB,GAoEJC,KAAK,IAAI;AACtB,WAAKF,QAAL,CACE;AACE,SAACE,KAAK,CAACC,MAAN,CAAaC,EAAd,GAAmBF,KAAK,CAACC,MAAN,CAAaE,KADlC;AAEEC,QAAAA,UAAU,EAAE;AAFd,OADF,EAKE,MACE,KAAKhB,YAAL,CACE,KAAKiB,KAAL,CAAW,KAAK7B,UAAhB,CADF,EAEE,KAAK6B,KAAL,CAAW,KAAK5B,gBAAhB,CAFF,CANJ;AAWD,KAhFkB;;AAAA,SAkFnB6B,YAlFmB,GAkFJN,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACO,cAAN;AACA,YAAMC,IAAI,GAAG;AACXnB,QAAAA,KAAK,EAAE,KAAKgB,KAAL,CAAW,KAAK7B,UAAhB,CADI;AAEXc,QAAAA,WAAW,EAAE,KAAKe,KAAL,CAAW,KAAK5B,gBAAhB;AAFF,OAAb;AAIA,YAAMkB,IAAI,GAAG7B,UAAU,CAAC,KAAKS,KAAL,CAAWI,IAAZ,CAAV,CAA4B8B,OAA5B,CAAoCC,QAAjD;AACA,WAAKnC,KAAL,CAAWoC,MAAX,CAAkBhB,IAAlB,EAAwB;AAACa,QAAAA,IAAD;AAAOjC,QAAAA,KAAK,EAAC,KAAKA;AAAlB,OAAxB;AACA,WAAKa,YAAL,CACE,KAAKiB,KAAL,CAAW,KAAK7B,UAAhB,CADF,EAEE,KAAK6B,KAAL,CAAW,KAAK5B,gBAAhB,CAFF;AAID,KA9FkB;;AAEjB,SAAK4B,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE,EADD;AAEXQ,MAAAA,YAAY,EAAE,KAFH;AAGX,OAAC,KAAKC,mBAAN,GAA4B,EAHjB;AAIX,OAAC,KAAKpC,gBAAN,GAAyB,EAJd;AAKXiB,MAAAA,SAAS,EAAE,EALA;AAMXH,MAAAA,QAAQ,EAAE,IANC;AAOXuB,MAAAA,WAAW,EAAE;AAPF,KAAb;AASD;;AAED,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AAAA,UAC5CxB,uBAD4C,GACVuB,SADU,CAC5CvB,uBAD4C;AAAA,UACnBd,IADmB,GACVqC,SADU,CACnBrC,IADmB;AAAA,UAE5Ce,SAF4C,GAE9BD,uBAF8B,CAE5CC,SAF4C;;AAGpD,QAAIA,SAAS,IAAIA,SAAS,KAAKuB,SAAS,CAACvB,SAAzC,EAAoD;AAClD,YAAMwB,MAAM,GAAGrD,cAAc,CAAC6B,SAAD,EAAYf,IAAZ,CAA7B;AACA,aAAO;AAAEyB,QAAAA,UAAU,EAAEc,MAAd;AAAsBxB,QAAAA;AAAtB,OAAP;AACD;;AACD,QACEsB,SAAS,CAACrC,IAAV,KAAmBhB,IAAI,CAACmB,WAAxB,IACAmC,SAAS,CAACH,WADV,IAEArB,uBAAuB,CAACe,IAFxB,IAGAf,uBAAuB,CAACe,IAAxB,CAA6BhB,MAA7B,GAAsC,CAJxC,EAKE;AACA,YAAM2B,SAAS,GAAG1B,uBAAuB,CAACe,IAAxB,CAA6B,CAA7B,EAAgCnB,KAAlD;AACA,YAAM+B,QAAQ,GAAG3B,uBAAuB,CAACe,IAAxB,CAA6B,CAA7B,EAAgClB,WAAjD;AACA,YAAMC,QAAQ,GAAG,EAAE4B,SAAS,CAAC3B,MAAV,GAAmB,CAAnB,IAAwB4B,QAAQ,CAAC5B,MAAT,GAAkB,CAA5C,CAAjB;AACA,aAAO;AACL,SAAC,YAAD,GAAe2B,SADV;AAEL,SAAC,kBAAD,GAAsBC,QAFjB;AAGL7B,QAAAA,QAAQ,EAACA,QAHJ;AAILuB,QAAAA,WAAW,EAAE;AAJR,OAAP;AAMD;;AACD,WAAOG,SAAP;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAK3C,gBAAL;AACD;;AAED4C,EAAAA,kBAAkB,CAACC,SAAD,EAAYN,SAAZ,EAAsB;AACtC,QAAI,KAAKZ,KAAL,CAAWmB,WAAX,KAA2BP,SAAS,CAACO,WAAzC,EAAsD;AACpD,WAAK9C,gBAAL;AACD;AACF;;AAiDD+C,EAAAA,MAAM,GAAG;AAAA,yBACmC,KAAKlD,KADxC;AAAA,UACCkB,uBADD,gBACCA,uBADD;AAAA,UAC0Bd,IAD1B,gBAC0BA,IAD1B;AAAA,UAEC+C,UAFD,GAEsBjC,uBAFtB,CAECiC,UAFD;AAAA,UAEalB,IAFb,GAEsBf,uBAFtB,CAEae,IAFb;AAAA,UAGCmB,SAHD,GAGe7D,UAAU,CAACa,IAAD,CAHzB,CAGCgD,SAHD;AAIP5C,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBwB,IAAxB;AACA,WACE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEmB,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,eAAD;AACE,MAAA,YAAY,EAAE,KAAKrB,YADrB;AAEE,MAAA,YAAY,EAAE,KAAKP,YAFrB;AAGE,MAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWd,QAHvB;AAIE,MAAA,WAAW,EAAE,KAAKf,UAJpB;AAKE,MAAA,iBAAiB,EAAE,KAAKC,gBAL1B;AAME,MAAA,cAAc,EAAE,KAAK4B,KAAL,CAAW,KAAK7B,UAAhB,CANlB;AAOE,MAAA,oBAAoB,EAAE,KAAK6B,KAAL,CAAW,KAAK5B,gBAAhB,CAPxB;AAQE,MAAA,UAAU,EAAEiD,UARd;AASE,MAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWD,UATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAgBD;;AA1HuC;;AA6H1ChC,WAAW,CAACwD,SAAZ,GAAwB;AACtBjD,EAAAA,IAAI,EAAEnB,SAAS,CAACqE,MAAV,CAAiBC,UADD;AAEtBnB,EAAAA,MAAM,EAAEnD,SAAS,CAACuE,IAAV,CAAeD,UAFD;AAGtBpC,EAAAA,SAAS,EAAElC,SAAS,CAACwE,SAAV,CAAoB,CAACxE,SAAS,CAACqE,MAAX,EAAmBrE,SAAS,CAACyE,MAA7B,CAApB,CAHW;AAItBpC,EAAAA,UAAU,EAAErC,SAAS,CAACuE,IAAV,CAAeD,UAJL;AAKtBJ,EAAAA,UAAU,EAAElE,SAAS,CAAC0E,IAAV,CAAeJ,UALL;AAMtBrC,EAAAA,uBAAuB,EAAEjC,SAAS,CAAC2E,MAAV,CAAiBL,UANpB;AAOtBlD,EAAAA,cAAc,EAAEpB,SAAS,CAACuE,IAAV,CAAeD;AAPT,CAAxB;AAUA1D,WAAW,CAACgE,YAAZ,GAA2B;AACzB1C,EAAAA,SAAS,EAAE;AADc,CAA3B;;AAIA,MAAM2C,eAAe,GAAGhC,KAAK,KAAK;AAChCZ,EAAAA,uBAAuB,EAAEY,KAAK,CAACZ;AADC,CAAL,CAA7B;;AAKA,MAAM6C,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACL5B,IAAAA,MAAM,EAAE,CAAChB,IAAD,EAAOa,IAAP,KAAgB;AACtB+B,MAAAA,QAAQ,CAACxE,iBAAiB,CAAC4B,IAAD,EAAOa,IAAP,CAAlB,CAAR;AACD,KAHI;AAILX,IAAAA,UAAU,EAAEF,IAAI,IAAI;AAClB4C,MAAAA,QAAQ,CAACxE,iBAAiB,CAAC4B,IAAD,CAAlB,CAAR;AACD,KANI;AAOLf,IAAAA,cAAc,EAAE,CAACe,IAAD,EAAOa,IAAP,KAAgB;AAC9B+B,MAAAA,QAAQ,CAACxE,iBAAiB,CAAC4B,IAAD,EAAMa,IAAN,CAAlB,CAAR;AACD;AATI,GAAP;AAWD,CAZD;;AAcA,eAAejD,UAAU,CACvBD,OAAO,CACL+E,eADK,EAELC,kBAFK,CAAP,CAGElE,WAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { reverse } from 'named-urls';\nimport AddEditTodoForm from '../../components/AddEditTodoForm/AddEditTodoForm';\nimport { PAGE, STORE } from '../../utils/constants';\nimport { getErrorResMsg } from '../../utils/formValidations';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { redirect } from '../../utils/utils';\nimport { FOOTPRINTS_ROUTES } from '../../config';\nimport './AddEditTodo.scss';\n\nclass AddEditTodo extends React.Component {\n  TODO_TITLE = 'todo-title';\n\n  TODO_DESCRIPTION = 'todo-description';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.ASSET_TYPE_FIELD_ID]: '',\n      [this.TODO_DESCRIPTION]: '',\n      errorCode: '',\n      disabled: true,\n      firstRender: true\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { addEditTodoReducerStore, page } = nextProps;\n    const { errorCode } = addEditTodoReducerStore;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, page);\n      return { formErrors: errMsg, errorCode };\n    }\n    if (\n      nextProps.page === PAGE.UPDATE_TODO &&\n      prevState.firstRender &&\n      addEditTodoReducerStore.data &&\n      addEditTodoReducerStore.data.length > 0\n    ) {\n      const todoTitle = addEditTodoReducerStore.data[0].title;\n      const todoDesc = addEditTodoReducerStore.data[0].description;\n      const disabled = !(todoTitle.length > 0 && todoDesc.length > 0);\n      return {\n        ['todo-title']:todoTitle,\n        ['todo-description']: todoDesc,\n        disabled:disabled,\n        firstRender: false\n      };\n    }\n    return prevState;\n  }\n\n  componentDidMount() {\n    this.fetchTodoDetails();\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (this.state.currentPage !== prevState.currentPage) {\n      this.fetchTodoDetails();\n    }\n  }\n\n  fetchTodoDetails= ()=>{\n    const { page, getTodoDetails, match} = this.props;\n    if(page === PAGE.UPDATE_TODO){\n      console.log(\"page:\",page, match.params);\n      getTodoDetails(ACTIONS.TODOS.GET_TODO_DETAILS, {...match.params})\n    }\n  }\n\n  enableSubmit = (title, description) => {\n    const disabled = !(title.length > 0 && description.length > 0);\n\n    if (this.props.addEditTodoReducerStore.errorCode) {\n      const type = ACTIONS.TODOS.RESET_STATE;\n      this.props.resetState(type);\n      this.setState({ errorCode: '' });\n    }\n    this.setState({ disabled });\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.TODO_TITLE],\n          this.state[this.TODO_DESCRIPTION],\n        )\n    );\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      title: this.state[this.TODO_TITLE],\n      description: this.state[this.TODO_DESCRIPTION]\n    };\n    const type = pageConfig[this.props.page].actions.postData;\n    this.props.submit(type, {data, props:this.props});\n    this.enableSubmit(\n      this.state[this.TODO_TITLE],\n      this.state[this.TODO_DESCRIPTION]\n    );\n  };\n\n  render() {\n    const { addEditTodoReducerStore, page } = this.props;\n    const { inProgress, data } = addEditTodoReducerStore;\n    const { pageTitle } = pageConfig[page];\n    console.log(\"akjshdsa\", data);\n    return (\n      <div id=\"add-edit-todo\">\n        <PageHeader title={pageTitle} />\n        <AddEditTodoForm\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          disabled={this.state.disabled}\n          todoTitleId={this.TODO_TITLE}\n          todoDescriptionId={this.TODO_DESCRIPTION}\n          todoTitleValue={this.state[this.TODO_TITLE]}\n          todoDescriptionValue={this.state[this.TODO_DESCRIPTION]}\n          inProgress={inProgress}\n          formErrors={this.state.formErrors}\n        />\n      </div>\n    );\n  }\n}\n\nAddEditTodo.propTypes = {\n  page: PropTypes.string.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  resetState: PropTypes.func.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  addEditTodoReducerStore: PropTypes.object.isRequired,\n  getTodoDetails: PropTypes.func.isRequired\n};\n\nAddEditTodo.defaultProps = {\n  errorCode: '',\n};\n\nconst mapStateToProps = state => ({\n  addEditTodoReducerStore: state.addEditTodoReducerStore,\n\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    },\n    getTodoDetails: (type, data) => {\n      dispatch(getActionsFormate(type,data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddEditTodo)\n);\n"]},"metadata":{},"sourceType":"module"}