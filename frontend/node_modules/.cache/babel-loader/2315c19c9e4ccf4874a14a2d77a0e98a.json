{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { TODOS } from '../../apiConfig/api.config';\nimport { reverse } from 'named-urls';\n\nfunction* addTodo(action) {\n  let response;\n\n  try {\n    const _action$data = action.data,\n          data = _action$data.data,\n          props = _action$data.props;\n    response = yield call(window.axios.postData, TODOS.ADD_TODO, data);\n\n    if (response.status === 201 || response.status === 200) {\n      props.history.goBack();\n      yield put({\n        type: ACTIONS.TODOS.ADD_TODO_SUCCESS,\n        payload: {\n          callStatus: true\n        }\n      });\n    } else {\n      yield put({\n        type: ACTIONS.TODOS.ADD_TODO_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.TODOS.ADD_TODO_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* updateTodo(action) {\n  let response;\n\n  try {\n    const _action$data2 = action.data,\n          data = _action$data2.data,\n          props = _action$data2.props;\n    const history = props.history,\n          match = props.match;\n    const todoId = match.params.todoId;\n    response = yield call(window.axios.putData, reverse(TODOS.UPDATE_TODO, {\n      todoId\n    }), data);\n\n    if (response.status === 201 || response.status === 200) {\n      // history.goBack();\n      yield put({\n        type: ACTIONS.TODOS.UPDATE_TODO_SUCCESS,\n        payload: {\n          callStatus: true\n        }\n      });\n    } else {\n      yield put({\n        type: ACTIONS.TODOS.UPDATE_TODO_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.TODOS.UPDATE_TODO_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getTodoDetails(action) {\n  let response;\n\n  try {\n    const todoId = action.data.todoId;\n    response = yield call(window.axios.getData, reverse(TODOS.GET_TODO_DETAILS, {\n      todoId\n    }));\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.TODOS.GET_TODO_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.TODOS.GET_TODO_DETAILS_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.TODOS.GET_TODO_DETAILS_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nconst dummy = {};\nexport { updateTodo, addTodo, dummy, getTodoDetails };","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/containers/AddEditTodo/AddEditTodo.saga.js"],"names":["call","put","ACTIONS","TODOS","reverse","addTodo","action","response","data","props","window","axios","postData","ADD_TODO","status","history","goBack","type","ADD_TODO_SUCCESS","payload","callStatus","ADD_TODO_FAIL","e","updateTodo","match","todoId","params","putData","UPDATE_TODO","UPDATE_TODO_SUCCESS","UPDATE_TODO_FAIL","getTodoDetails","getData","GET_TODO_DETAILS","GET_TODO_DETAILS_SUCCESS","GET_TODO_DETAILS_FAIL","ALERT_MESSAGE","FAIL","dummy"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { TODOS } from '../../apiConfig/api.config';\nimport { reverse } from 'named-urls';\n\nfunction* addTodo(action) {\n  let response;\n  try {\n    const { data, props} = action.data;\n    response = yield call(\n      window.axios.postData,\n      TODOS.ADD_TODO,\n      data\n    );\n\n    if (response.status === 201 || response.status === 200) {\n      props.history.goBack();\n      yield put({\n        type: ACTIONS.TODOS.ADD_TODO_SUCCESS,\n        payload: { callStatus: true }\n      });\n    } else {\n      yield put({\n        type: ACTIONS.TODOS.ADD_TODO_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.TODOS.ADD_TODO_FAIL, payload: e });\n  }\n}\n\nfunction* updateTodo(action) {\n  let response;\n  try {\n    const { data, props} = action.data;\n    const { history, match} = props;\n    const {todoId} = match.params;\n    response = yield call(\n      window.axios.putData,\n      reverse(TODOS.UPDATE_TODO, {todoId}),\n      data\n    );\n\n    if (response.status === 201 || response.status === 200) {\n      // history.goBack();\n      yield put({\n        type: ACTIONS.TODOS.UPDATE_TODO_SUCCESS,\n        payload: { callStatus: true }\n      });\n    } else {\n      yield put({\n        type: ACTIONS.TODOS.UPDATE_TODO_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.TODOS.UPDATE_TODO_FAIL, payload: e });\n  }\n}\n\nfunction* getTodoDetails(action) {\n  let response;\n  try {\n    const { todoId } = action.data;\n    response = yield call(window.axios.getData, reverse(TODOS.GET_TODO_DETAILS, {todoId}));\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.TODOS.GET_TODO_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.TODOS.GET_TODO_DETAILS_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.TODOS.GET_TODO_DETAILS_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nconst dummy = {};\n\nexport {updateTodo, addTodo, dummy, getTodoDetails };\n"]},"metadata":{},"sourceType":"module"}