{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getAssetsList(action) {\n  let response;\n\n  try {\n    const _action$data = action.data,\n          limit = _action$data.limit,\n          offset = _action$data.offset,\n          location = _action$data.location;\n    console.log(\"location\", location);\n    let url = \"\".concat(FOOTPRINTS_API.ASSETS_LIST, \"?limit=\").concat(limit, \"&offset=\").concat(offset, \" \").concat(location ? \"&location=\" + location : \"\");\n    response = yield call(window.axios.getData, url);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSETS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSETS_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.GET_ASSETS_LIST_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport { getAssetsList, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Assets/Assets.saga.js"],"names":["call","put","ACTIONS","FOOTPRINTS_API","getAssetsList","action","response","data","limit","offset","location","console","log","url","ASSETS_LIST","window","axios","getData","status","type","ASSETS","GET_ASSETS_LIST_SUCCESS","payload","GET_ASSETS_LIST_FAIL","ALERT_MESSAGE","FAIL","e","dummy"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,cAAT,QAA+B,4BAA/B;;AAEA,UAAUC,aAAV,CAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,QAAJ;;AACA,MAAI;AAAA,yBACgCD,MAAM,CAACE,IADvC;AAAA,UACKC,KADL,gBACKA,KADL;AAAA,UACYC,MADZ,gBACYA,MADZ;AAAA,UACoBC,QADpB,gBACoBA,QADpB;AAEFC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AAEA,QAAIG,GAAG,aAAMV,cAAc,CAACW,WAArB,oBAA0CN,KAA1C,qBAA0DC,MAA1D,cAAoEC,QAAQ,GAAC,eAAaA,QAAd,GAAuB,EAAnG,CAAP;AACAJ,IAAAA,QAAQ,GAAG,MAAMN,IAAI,CACnBe,MAAM,CAACC,KAAP,CAAaC,OADM,EAEnBJ,GAFmB,CAArB;;AAIA,QAAIP,QAAQ,CAACY,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMjB,GAAG,CAAC;AACRkB,QAAAA,IAAI,EAAEjB,OAAO,CAACkB,MAAR,CAAeC,uBADb;AAERC,QAAAA,OAAO,EAAEhB,QAAQ,CAACC;AAFV,OAAD,CAAT;AAID,KALD,MAKO;AACL,YAAMN,GAAG,CAAC;AACRkB,QAAAA,IAAI,EAAEjB,OAAO,CAACkB,MAAR,CAAeG,oBADb;AAERD,QAAAA,OAAO,EAAEhB,QAAQ,CAACC;AAFV,OAAD,CAAT;AAIA,YAAMN,GAAG,CAAC;AACRkB,QAAAA,IAAI,EAAEjB,OAAO,CAACsB,aAAR,CAAsBC,IADpB;AAERH,QAAAA,OAAO,oBAAOhB,QAAQ,CAACC,IAAhB,MAAyBF,MAAM,CAACE,IAAhC;AAFC,OAAD,CAAT;AAID;AACF,GAxBD,CAwBE,OAAOmB,CAAP,EAAU;AACV,UAAMzB,GAAG,CAAC;AAAEkB,MAAAA,IAAI,EAAEjB,OAAO,CAACqB,oBAAhB;AAAsCD,MAAAA,OAAO,EAAEI;AAA/C,KAAD,CAAT;AACA,UAAMzB,GAAG,CAAC;AACRkB,MAAAA,IAAI,EAAEjB,OAAO,CAACsB,aAAR,CAAsBC,IADpB;AAERH,MAAAA,OAAO,oBAAOhB,QAAQ,CAACC,IAAhB,MAAyBF,MAAM,CAACE,IAAhC;AAFC,KAAD,CAAT;AAID;AACF;;AAED,MAAMoB,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAASvB,aAAT,EAAwBuB,KAAxB","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getAssetsList(action) {\n  let response;\n  try {\n    const {limit, offset, location} = action.data;\n    console.log(\"location\", location)\n\n    let url = `${FOOTPRINTS_API.ASSETS_LIST}?limit=${limit}&offset=${offset} ${location?\"&location=\"+location:\"\"}`;\n    response = yield call(\n      window.axios.getData,\n      url\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSETS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSETS_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data }\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.GET_ASSETS_LIST_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data }\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport { getAssetsList, dummy };\n"]},"metadata":{},"sourceType":"module"}