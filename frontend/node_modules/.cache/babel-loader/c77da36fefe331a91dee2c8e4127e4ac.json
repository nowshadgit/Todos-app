{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomTreeSelect/CustomTreeSelect.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport 'react-dropdown-tree-select/dist/styles.css';\nimport './CustomTreeSelect.scss';\nimport DropdownTreeSelect from 'react-dropdown-tree-select';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants';\nimport { getActionsFormate } from '../../utils/common';\n\nclass CustomTreeSelect extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          getData = _this$props.getData,\n          page = _this$props.page;\n    const dtype = pageConfig[page].actions.getAllOrgUnit;\n    getData(dtype);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          allOrgUnit = _this$props2.allOrgUnit,\n          onChange = _this$props2.onChange,\n          mode = _this$props2.mode,\n          defaultValues = _this$props2.defaultValues,\n          page = _this$props2.page;\n    const getFormate = pageConfig[page].formate;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(DropdownTreeSelect, {\n      texts: {\n        placeholder: 'Parent department'\n      },\n      data: getFormate(allOrgUnit, defaultValues),\n      onChange: onChange,\n      mode: mode,\n      id: \"custom-tree-select\",\n      className: allOrgUnit.length > 0 ? \"\" : \"no-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"border h-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"asdasds\"));\n  }\n\n}\n\nCustomTreeSelect.propTypes = {\n  page: PropTypes.string.isRequired,\n  getData: PropTypes.func.isRequired,\n  allOrgUnit: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  mode: PropTypes.string.isRequired,\n  defaultValues: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n    errorCode: state.addEditOrgUnitReducerStore.errorCode,\n    allOrgUnit: state.commonReducerStore[STORE.ALL_ORG_UNIT]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CustomTreeSelect));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomTreeSelect/CustomTreeSelect.jsx"],"names":["React","connect","withRouter","PropTypes","DropdownTreeSelect","pageConfig","STORE","getActionsFormate","CustomTreeSelect","Component","componentDidMount","props","getData","page","dtype","actions","getAllOrgUnit","render","allOrgUnit","onChange","mode","defaultValues","getFormate","formate","placeholder","length","propTypes","string","isRequired","func","array","mapStateToProps","state","errorCode","addEditOrgUnitReducerStore","commonReducerStore","ALL_ORG_UNIT","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport 'react-dropdown-tree-select/dist/styles.css';\nimport './CustomTreeSelect.scss';\nimport DropdownTreeSelect from 'react-dropdown-tree-select';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants';\nimport { getActionsFormate } from '../../utils/common';\n\nclass CustomTreeSelect extends React.Component {\n  componentDidMount() {\n    const { getData, page } = this.props;\n    const dtype = pageConfig[page].actions.getAllOrgUnit;\n    getData(dtype);\n  }\n\n  render() {\n    const { allOrgUnit, onChange, mode, defaultValues, page } = this.props;\n    const getFormate = pageConfig[page].formate;\n    return (\n      <div>\n        <DropdownTreeSelect\n          texts={{ placeholder: 'Parent department' }}\n          data={getFormate(allOrgUnit, defaultValues)}\n          onChange={onChange}\n          mode={mode}\n          id=\"custom-tree-select\"\n          className={allOrgUnit.length > 0 ? \"\" : \"no-data\"}\n        />\n        <div className=\"border h-50\">asdasds</div>\n      </div>\n    );\n  }\n}\n\nCustomTreeSelect.propTypes = {\n  page: PropTypes.string.isRequired,\n  getData: PropTypes.func.isRequired,\n  allOrgUnit: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  mode: PropTypes.string.isRequired,\n  defaultValues: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n    errorCode: state.addEditOrgUnitReducerStore.errorCode,\n    allOrgUnit: state.commonReducerStore[STORE.ALL_ORG_UNIT]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CustomTreeSelect)\n);\n"]},"metadata":{},"sourceType":"module"}