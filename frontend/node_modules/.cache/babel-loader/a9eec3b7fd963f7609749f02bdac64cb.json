{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport { FOOTPRINTS_COMPONENTS } from '../../config';\nimport { COMPONENTS } from '../../utils/constants';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page;\n    const components = pageConfig[page].components;\n    components && components.map(comp => {\n      const type = FOOTPRINTS_COMPONENTS[comp].job.PAGE_DATA;\n      const params = this.props.match.params;\n      makeCall(type, _objectSpread({}, params));\n    });\n  }\n\n  render() {\n    const page = this.props.page;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          actions = _pageConfig$page.actions,\n          components = _pageConfig$page.components;\n    let key = 0;\n    const Components = components && components.map(comp => {\n      const fpComp = FOOTPRINTS_COMPONENTS[comp];\n      const fpCompData = this.props[comp];\n      const Component = fpComp.component;\n      const actions = fpComp.actions;\n      key += 1;\n      return React.createElement(Component, Object.assign({}, this.props, {\n        key: key,\n        data: fpCompData,\n        actions: actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), Components, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  [COMPONENTS.DATA_CARD]: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  [COMPONENTS.USER]: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  [COMPONENTS.DATA_CARD]: state.listReducerStore[COMPONENTS.DATA_CARD],\n  [COMPONENTS.USER]: state.listReducerStore[COMPONENTS.USER]\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","FOOTPRINTS_COMPONENTS","COMPONENTS","ListPage","Component","componentDidMount","props","makeCall","page","components","map","comp","type","job","PAGE_DATA","params","match","render","pageTitle","actions","key","Components","fpComp","fpCompData","component","propTypes","string","isRequired","func","DATA_CARD","oneOfType","array","object","USER","defaultProps","mapStateToProps","state","listReducerStore","mapDispatchToProps","dispatch","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,qBAAT,QAAsC,cAAtC;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,wBACS,KAAKC,KADd;AAAA,UACVC,QADU,eACVA,QADU;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UAEVC,UAFU,GAEKX,UAAU,CAACU,IAAD,CAFf,CAEVC,UAFU;AAGlBA,IAAAA,UAAU,IACRA,UAAU,CAACC,GAAX,CAAeC,IAAI,IAAI;AACrB,YAAMC,IAAI,GAAGX,qBAAqB,CAACU,IAAD,CAArB,CAA4BE,GAA5B,CAAgCC,SAA7C;AADqB,YAEbC,MAFa,GAEF,KAAKT,KAAL,CAAWU,KAFT,CAEbD,MAFa;AAGrBR,MAAAA,QAAQ,CAACK,IAAD,oBAAYG,MAAZ,EAAR;AACD,KAJD,CADF;AAMD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCT,IADD,GACU,KAAKF,KADf,CACCE,IADD;AAAA,6BAGoCV,UAAU,CAACU,IAAD,CAH9C;AAAA,UAGCU,SAHD,oBAGCA,SAHD;AAAA,UAGYC,OAHZ,oBAGYA,OAHZ;AAAA,UAGqBV,UAHrB,oBAGqBA,UAHrB;AAIP,QAAIW,GAAG,GAAG,CAAV;AACA,UAAMC,UAAU,GACdZ,UAAU,IACVA,UAAU,CAACC,GAAX,CAAeC,IAAI,IAAI;AACrB,YAAMW,MAAM,GAAGrB,qBAAqB,CAACU,IAAD,CAApC;AACA,YAAMY,UAAU,GAAG,KAAKjB,KAAL,CAAWK,IAAX,CAAnB;AAEA,YAAMP,SAAS,GAAGkB,MAAM,CAACE,SAAzB;AAJqB,YAKbL,OALa,GAKDG,MALC,CAKbH,OALa;AAMrBC,MAAAA,GAAG,IAAI,CAAP;AACA,aACE,oBAAC,SAAD,oBACM,KAAKd,KADX;AAEE,QAAA,GAAG,EAAEc,GAFP;AAGE,QAAA,IAAI,EAAEG,UAHR;AAIE,QAAA,OAAO,EAAEJ,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQD,KAfD,CAFF;AAkBA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAED,SAAnB;AAA8B,MAAA,OAAO,EAAEC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGE,UAFH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF;AAOD;;AA1CoC;;AA6CvClB,QAAQ,CAACsB,SAAT,GAAqB;AACnBjB,EAAAA,IAAI,EAAEb,SAAS,CAAC+B,MAAV,CAAiBC,UADJ;AAEnBpB,EAAAA,QAAQ,EAAEZ,SAAS,CAACiC,IAAV,CAAeD,UAFN;AAGnB,GAACzB,UAAU,CAAC2B,SAAZ,GAAwBlC,SAAS,CAACmC,SAAV,CAAoB,CAC1CnC,SAAS,CAACoC,KADgC,EAE1CpC,SAAS,CAACqC,MAFgC,CAApB,EAGrBL,UANgB;AAOnB,GAACzB,UAAU,CAAC+B,IAAZ,GAAmBtC,SAAS,CAACmC,SAAV,CAAoB,CAACnC,SAAS,CAACoC,KAAX,EAAkBpC,SAAS,CAACqC,MAA5B,CAApB,EAChBL;AARgB,CAArB;AAWAxB,QAAQ,CAAC+B,YAAT,GAAwB,EAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChC,GAAClC,UAAU,CAAC2B,SAAZ,GAAwBO,KAAK,CAACC,gBAAN,CAAuBnC,UAAU,CAAC2B,SAAlC,CADQ;AAEhC,GAAC3B,UAAU,CAAC+B,IAAZ,GAAmBG,KAAK,CAACC,gBAAN,CAAuBnC,UAAU,CAAC+B,IAAlC;AAFa,CAAL,CAA7B;;AAIA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLhC,IAAAA,QAAQ,EAAE,CAACK,IAAD,EAAO4B,IAAP,KAAgB;AACxBD,MAAAA,QAAQ,CAACvC,iBAAiB,CAACY,IAAD,EAAO4B,IAAP,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAe3C,UAAU,CACvBD,OAAO,CACLuC,eADK,EAELG,kBAFK,CAAP,CAGEnC,QAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport { FOOTPRINTS_COMPONENTS } from '../../config';\nimport { COMPONENTS } from '../../utils/constants';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const { makeCall, page } = this.props;\n    const { components } = pageConfig[page];\n    components &&\n      components.map(comp => {\n        const type = FOOTPRINTS_COMPONENTS[comp].job.PAGE_DATA;\n        const { params } = this.props.match;\n        makeCall(type, { ...params });\n      });\n  }\n  \n  render() {\n    const { page } = this.props;\n\n    const { pageTitle, actions, components } = pageConfig[page];\n    let key = 0;\n    const Components =\n      components &&\n      components.map(comp => {\n        const fpComp = FOOTPRINTS_COMPONENTS[comp];\n        const fpCompData = this.props[comp];\n\n        const Component = fpComp.component;\n        const { actions } = fpComp;\n        key += 1;\n        return (\n          <Component\n            {...this.props}\n            key={key}\n            data={fpCompData}\n            actions={actions}\n          />\n        );\n      });\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={actions} />\n        {Components}\n        <div>Hello world</div>\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  [COMPONENTS.DATA_CARD]: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object\n  ]).isRequired,\n  [COMPONENTS.USER]: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n    .isRequired\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  [COMPONENTS.DATA_CARD]: state.listReducerStore[COMPONENTS.DATA_CARD],\n  [COMPONENTS.USER]: state.listReducerStore[COMPONENTS.USER]\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}