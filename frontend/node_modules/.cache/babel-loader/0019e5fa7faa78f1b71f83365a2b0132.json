{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\n\nfunction* addAssetAttributes(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.ASSET_ATTRIBUTES, action.data.data);\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.goBack();\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ADD_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.ADD_SUCCESS\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ADD_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.ADD_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nfunction* updateAssetAttributes(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.patchData, reverse(FOOTPRINTS_API.UPDATE_ASSET_ATTRIBUTE, _objectSpread({}, action.data.props.match.params)), action.data.data);\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.ASSET_ATTRIBUTES.LIST);\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.UPDATE_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.UPDATE_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.UPDATE_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nconst dummy = {};\nexport { addAssetAttributes, updateAssetAttributes, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditAssetAttributes/AddEditAssetAttributes.saga.js"],"names":["call","put","reverse","ACTIONS","FOOTPRINTS_API","FOOTPRINTS_ROUTES","addAssetAttributes","action","response","window","axios","postData","ASSET_ATTRIBUTES","data","status","props","history","goBack","type","ADD_ASSET_ATTRIBUTES_SUCCESS","payload","ALERT_MESSAGE","ADD_SUCCESS","ADD_ASSET_ATTRIBUTES_FAIL","FAIL","e","updateAssetAttributes","patchData","UPDATE_ASSET_ATTRIBUTE","match","params","push","LIST","UPDATE_ASSET_ATTRIBUTES_SUCCESS","UPDATE_ASSET_ATTRIBUTES_FAIL","dummy"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\n\nfunction* addAssetAttributes(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.ASSET_ATTRIBUTES,\n      action.data.data\n    );\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.goBack();\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ADD_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.ADD_SUCCESS,\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ADD_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data}\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.ADD_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data}\n    });\n  }\n}\n\nfunction* updateAssetAttributes(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.patchData,\n      reverse(FOOTPRINTS_API.UPDATE_ASSET_ATTRIBUTE, {\n        ...action.data.props.match.params\n      }),\n      action.data.data\n    );\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.ASSET_ATTRIBUTES.LIST);\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.UPDATE_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.UPDATE_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data}\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.UPDATE_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data}\n    });\n  }\n}\n\nconst dummy = {};\n\nexport { addAssetAttributes, updateAssetAttributes, dummy };\n"]},"metadata":{},"sourceType":"module"}