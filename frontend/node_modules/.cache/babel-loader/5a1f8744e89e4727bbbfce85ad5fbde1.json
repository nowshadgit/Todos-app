{"ast":null,"code":"import { all, takeEvery, call, put, takeLatest } from 'redux-saga/effects';\nimport ACTIONS from './apiConfig/actions.constants';\nimport { loginSaga } from './containers/Login/Login.saga';\nimport { forgotPasswordSaga, passwordResetSaga, tokenVerifyRequest } from './containers/PasswordReset/PasswordReset.saga';\nimport { changePasswordSaga } from './containers/ChangePassword/ChangePassword.saga';\nimport { getUserList, getOrgUnitsList, getAssetAttributes, getAssetTypes } from './containers/ListPage/ListPage.saga';\nimport { getBreadcrumb } from './containers/BreadCrumb/BreadCrumb.saga';\nimport { getUserDetails, getAssetTypesDetails, getAssetAttributesDetails, getAssetDetails, getOrgUnitDetails } from './containers/Details/Details.saga';\nimport { createUser, updateUser, getUserDepartments } from './containers/AddEditUser/AddEditUser.saga';\nimport { addAssetTypes, getAssetAttributesForDropdown, updateAssetType } from './containers/AddEditAssetTypes/AddEditAssetTypes.saga';\nimport { addAssetAttributes, updateAssetAttributes } from './containers/AddEditAssetAttributes/AddEditAssetAttributes.saga';\nimport { addOrgUnit, updateOrgUnit } from './containers/AddEditOrgUnits/AddEditOrgUnits.saga';\nimport { FOOTPRINTS_API } from './apiConfig/api.config';\nimport { getAssetsList } from './containers/Assets/Assets.saga';\nimport { generateQrCodes } from './containers/GenerateQrCodes/GenerateQrCodes.saga';\nimport { getAssetTypeCount } from './containers/Analytics/Analytics.saga';\n\nfunction* getAllOrgUnit(action) {\n  let response;\n\n  try {\n    const url = \"\".concat(FOOTPRINTS_API.ORG_UNIT_ALL, \"?flat_list=false\");\n    response = yield call(window.axios.getData, url, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetHistory(action) {\n  let response;\n\n  try {\n    const assetId = action.data.assetId;\n    const url = \"\".concat(FOOTPRINTS_API.TRACKING_LOGS, \"?asset=\").concat(assetId);\n    response = yield call(window.axios.getData, url, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport default (() => all([takeEvery(ACTIONS.AUTH.LOGIN, loginSaga), takeEvery(ACTIONS.PASSWORD_RESET.PASSWORD_RESET, passwordResetSaga), takeEvery(ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD, forgotPasswordSaga), takeEvery(ACTIONS.PROFILE.CHANGE_PASSWORD, changePasswordSaga), takeEvery(ACTIONS.PASSWORD_RESET.VERIFY_TOKEN, tokenVerifyRequest), takeEvery(ACTIONS.USERS.GET_USER_LIST, getUserList), takeEvery(ACTIONS.USERS.GET_USER_INFO, getUserDetails), takeEvery(ACTIONS.USERS.ADD_USER, createUser), takeEvery(ACTIONS.USERS.UPDATE_USER, updateUser), takeEvery(ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST, getOrgUnitsList), takeEvery(ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS, getOrgUnitDetails), takeEvery(ACTIONS.USERS.GET_USER_DEPARTMENTS, getUserDepartments), takeEvery(ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES, getAssetAttributes), takeEvery(ACTIONS.ASSET_TYPES.GET_ASSET_TYPES, getAssetTypes), takeEvery(ACTIONS.ORG_UNITS.ADD_ORG_UNIT, addOrgUnit), takeEvery(ACTIONS.BREADCRUMB.GET_BREADCRUMB, getBreadcrumb), takeEvery(ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS, getAssetTypesDetails), takeEvery(ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTE_DETAILS, getAssetAttributesDetails), takeEvery(ACTIONS.ASSET_ATTRIBUTES.ADD_ASSET_ATTRIBUTES, addAssetAttributes), takeEvery(ACTIONS.ASSET_TYPES.ADD_ASSET_TYPE, addAssetTypes), takeEvery(ACTIONS.ASSET_TYPES.GET_ASSET_ATTRIBUTES, getAssetAttributesForDropdown), takeEvery(ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT, getAllOrgUnit), takeEvery(ACTIONS.ORG_UNITS.UPDATE_ORG_UNIT, updateOrgUnit), takeEvery(ACTIONS.ASSETS.GET_ASSET_DETAILS, getAssetDetails), takeEvery(ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS, getAssetHistory), takeEvery(ACTIONS.ASSET_ATTRIBUTES.UPDATE_ASSET_ATTRIBUTES, updateAssetAttributes), takeEvery(ACTIONS.ASSET_TYPES.UPDATE_ASSET_TYPE, updateAssetType), takeEvery(ACTIONS.ASSETS.GET_ASSETS_LIST, getAssetsList), takeEvery(ACTIONS.QR_CODES.ADD_QR_CODES, generateQrCodes), takeLatest(ACTIONS.ASSET_TYPES.ASSETS_COUNT, getAssetTypeCount)]));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/rootSaga.js"],"names":["all","takeEvery","call","put","takeLatest","ACTIONS","loginSaga","forgotPasswordSaga","passwordResetSaga","tokenVerifyRequest","changePasswordSaga","getUserList","getOrgUnitsList","getAssetAttributes","getAssetTypes","getBreadcrumb","getUserDetails","getAssetTypesDetails","getAssetAttributesDetails","getAssetDetails","getOrgUnitDetails","createUser","updateUser","getUserDepartments","addAssetTypes","getAssetAttributesForDropdown","updateAssetType","addAssetAttributes","updateAssetAttributes","addOrgUnit","updateOrgUnit","FOOTPRINTS_API","getAssetsList","generateQrCodes","getAssetTypeCount","getAllOrgUnit","action","response","url","ORG_UNIT_ALL","window","axios","getData","data","status","type","ORG_UNITS","GET_ALL_ORG_UNIT_SUCCESS","payload","GET_ALL_ORG_UNIT_FAIL","e","getAssetHistory","assetId","TRACKING_LOGS","TRAKING_LOGS","GET_TRACKING_LOGS_SUCCESS","GET_TRACKING_LOGS_FAIL","AUTH","LOGIN","PASSWORD_RESET","FORGOT_PASSWORD","PROFILE","CHANGE_PASSWORD","VERIFY_TOKEN","USERS","GET_USER_LIST","GET_USER_INFO","ADD_USER","UPDATE_USER","GET_ORG_UNITS_LIST","GET_ORG_UNITS_DETAILS","GET_USER_DEPARTMENTS","ASSET_ATTRIBUTES","GET_ASSET_ATTRIBUTES","ASSET_TYPES","GET_ASSET_TYPES","ADD_ORG_UNIT","BREADCRUMB","GET_BREADCRUMB","ASSET_TYPES_DETAILS","ASSET_ATTRIBUTE_DETAILS","ADD_ASSET_ATTRIBUTES","ADD_ASSET_TYPE","GET_ALL_ORG_UNIT","UPDATE_ORG_UNIT","ASSETS","GET_ASSET_DETAILS","GET_TRACKING_LOGS","UPDATE_ASSET_ATTRIBUTES","UPDATE_ASSET_TYPE","GET_ASSETS_LIST","QR_CODES","ADD_QR_CODES","ASSETS_COUNT"],"mappings":"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","sourcesContent":["import { all, takeEvery, call, put, takeLatest } from 'redux-saga/effects';\n\nimport ACTIONS from './apiConfig/actions.constants';\nimport { loginSaga } from './containers/Login/Login.saga';\nimport {\n  forgotPasswordSaga,\n  passwordResetSaga,\n  tokenVerifyRequest\n} from './containers/PasswordReset/PasswordReset.saga';\nimport { changePasswordSaga } from './containers/ChangePassword/ChangePassword.saga';\nimport {\n  getUserList,\n  getOrgUnitsList,\n  getAssetAttributes,\n  getAssetTypes\n} from './containers/ListPage/ListPage.saga';\nimport { getBreadcrumb } from './containers/BreadCrumb/BreadCrumb.saga';\nimport {\n  getUserDetails,\n  getAssetTypesDetails,\n  getAssetAttributesDetails,\n  getAssetDetails,\n  getOrgUnitDetails\n} from './containers/Details/Details.saga';\nimport {\n  createUser,\n  updateUser,\n  getUserDepartments\n} from './containers/AddEditUser/AddEditUser.saga';\nimport {\n  addAssetTypes,\n  getAssetAttributesForDropdown,\n  updateAssetType\n} from './containers/AddEditAssetTypes/AddEditAssetTypes.saga';\nimport {\n  addAssetAttributes,\n  updateAssetAttributes\n} from './containers/AddEditAssetAttributes/AddEditAssetAttributes.saga';\nimport {\n  addOrgUnit,\n  updateOrgUnit\n} from './containers/AddEditOrgUnits/AddEditOrgUnits.saga';\nimport { FOOTPRINTS_API } from './apiConfig/api.config';\nimport { getAssetsList } from './containers/Assets/Assets.saga';\nimport { generateQrCodes } from './containers/GenerateQrCodes/GenerateQrCodes.saga';\nimport { getAssetTypeCount } from './containers/Analytics/Analytics.saga';\n\nfunction* getAllOrgUnit(action) {\n  let response;\n  try {\n    const url = `${FOOTPRINTS_API.ORG_UNIT_ALL}?flat_list=false`;\n    response = yield call(window.axios.getData, url, action.data);\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetHistory(action) {\n  let response;\n  try {\n    const { assetId } = action.data;\n    const url = `${FOOTPRINTS_API.TRACKING_LOGS}?asset=${assetId}`;\n    response = yield call(window.axios.getData, url, action.data);\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport default () =>\n  all([\n    takeEvery(ACTIONS.AUTH.LOGIN, loginSaga),\n    takeEvery(ACTIONS.PASSWORD_RESET.PASSWORD_RESET, passwordResetSaga),\n    takeEvery(ACTIONS.PASSWORD_RESET.FORGOT_PASSWORD, forgotPasswordSaga),\n    takeEvery(ACTIONS.PROFILE.CHANGE_PASSWORD, changePasswordSaga),\n    takeEvery(ACTIONS.PASSWORD_RESET.VERIFY_TOKEN, tokenVerifyRequest),\n    takeEvery(ACTIONS.USERS.GET_USER_LIST, getUserList),\n    takeEvery(ACTIONS.USERS.GET_USER_INFO, getUserDetails),\n    takeEvery(ACTIONS.USERS.ADD_USER, createUser),\n    takeEvery(ACTIONS.USERS.UPDATE_USER, updateUser),\n    takeEvery(ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST, getOrgUnitsList),\n    takeEvery(ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS, getOrgUnitDetails),\n    takeEvery(ACTIONS.USERS.GET_USER_DEPARTMENTS, getUserDepartments),\n    takeEvery(\n      ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES,\n      getAssetAttributes\n    ),\n    takeEvery(ACTIONS.ASSET_TYPES.GET_ASSET_TYPES, getAssetTypes),\n    takeEvery(ACTIONS.ORG_UNITS.ADD_ORG_UNIT, addOrgUnit),\n    takeEvery(ACTIONS.BREADCRUMB.GET_BREADCRUMB, getBreadcrumb),\n    takeEvery(ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS, getAssetTypesDetails),\n    takeEvery(\n      ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTE_DETAILS,\n      getAssetAttributesDetails\n    ),\n\n    takeEvery(\n      ACTIONS.ASSET_ATTRIBUTES.ADD_ASSET_ATTRIBUTES,\n      addAssetAttributes\n    ),\n    takeEvery(ACTIONS.ASSET_TYPES.ADD_ASSET_TYPE, addAssetTypes),\n    takeEvery(\n      ACTIONS.ASSET_TYPES.GET_ASSET_ATTRIBUTES,\n      getAssetAttributesForDropdown\n    ),\n    takeEvery(ACTIONS.ORG_UNITS.GET_ALL_ORG_UNIT, getAllOrgUnit),\n    takeEvery(ACTIONS.ORG_UNITS.UPDATE_ORG_UNIT, updateOrgUnit),\n    takeEvery(ACTIONS.ASSETS.GET_ASSET_DETAILS, getAssetDetails),\n    takeEvery(ACTIONS.TRAKING_LOGS.GET_TRACKING_LOGS, getAssetHistory),\n    takeEvery(\n      ACTIONS.ASSET_ATTRIBUTES.UPDATE_ASSET_ATTRIBUTES,\n      updateAssetAttributes\n    ),\n    takeEvery(ACTIONS.ASSET_TYPES.UPDATE_ASSET_TYPE, updateAssetType),\n    takeEvery(ACTIONS.ASSETS.GET_ASSETS_LIST, getAssetsList),\n    takeEvery(ACTIONS.QR_CODES.ADD_QR_CODES, generateQrCodes),\n    takeLatest(ACTIONS.ASSET_TYPES.ASSETS_COUNT, getAssetTypeCount)\n  ]);\n"]},"metadata":{},"sourceType":"module"}