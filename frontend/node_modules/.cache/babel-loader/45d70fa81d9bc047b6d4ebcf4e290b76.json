{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport { getActionsFormate } from '../../utils/common';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants'; // const Analytics = (props) => {\n//   const data= {\n//     columns: [\n//         ['data1', 30],\n//         ['data2', 120],\n//     ],\n//     type : 'donut',\n// };\n// let size= {\n//   // height: 200,\n//   width: 500\n// }\n//   return (\n//     <div>\n//       {/* <PageHeader title=\"Assets\" actions={[]} /> */}\n//       <div className=\"card\">\n//         <C3Chart title=\"Assets\" data={data} size={size} />\n//       </div>\n//     </div>\n//   );\n// };\n\nclass Analytics extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page,\n          match = _this$props.match;\n    const fetchAssetsCount = pageConfig[page].fetchAssetsCount;\n    const params = match.params;\n\n    if (fetchAssetsCount) {\n      makeCall(fetchAssetsCount, _objectSpread({}, params));\n    }\n  }\n\n  render() {\n    const data = {\n      columns: [['data1', 30], ['data2', 120]],\n      type: 'donut'\n    };\n    let size = {\n      // height: 200,\n      width: 500\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(C3Chart, {\n      title: \"Assets\",\n      data: data,\n      size: size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nAnalytics.propTypes = {\n  analyticsStore: PropTypes.object.isRequired\n};\nAnalytics.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  AssetTypeCount: state.analyticsReducerStore[STORE.ASSETS_COUNT_WRT_ASSET_TYPE]\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Analytics));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Analytics/Analytics.jsx"],"names":["React","connect","withRouter","PropTypes","PageHeader","C3Chart","getActionsFormate","pageConfig","STORE","Analytics","Component","constructor","props","componentDidMount","makeCall","page","match","fetchAssetsCount","params","render","data","columns","type","size","width","propTypes","analyticsStore","object","isRequired","defaultProps","mapStateToProps","state","AssetTypeCount","analyticsReducerStore","ASSETS_COUNT_WRT_ASSET_TYPE","mapDispatchToProps","dispatch","resetState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,WAAP;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,KAAT,QAAsB,uBAAtB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AAAA,wBACe,KAAKD,KADpB;AAAA,UACVE,QADU,eACVA,QADU;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,KADN,eACMA,KADN;AAAA,UAETC,gBAFS,GAEYV,UAAU,CAACQ,IAAD,CAFtB,CAETE,gBAFS;AAAA,UAGTC,MAHS,GAGEF,KAHF,CAGTE,MAHS;;AAIjB,QAAGD,gBAAH,EAAoB;AAClBH,MAAAA,QAAQ,CAACG,gBAAD,oBAAuBC,MAAvB,EAAR;AACD;AACF;;AACDC,EAAAA,MAAM,GAAE;AACN,UAAMC,IAAI,GAAE;AACVC,MAAAA,OAAO,EAAE,CACL,CAAC,OAAD,EAAU,EAAV,CADK,EAEL,CAAC,OAAD,EAAU,GAAV,CAFK,CADC;AAKVC,MAAAA,IAAI,EAAG;AALG,KAAZ;AAOA,QAAIC,IAAI,GAAE;AACR;AACAC,MAAAA,KAAK,EAAE;AAFC,KAAV;AAIA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,QAAf;AAAwB,MAAA,IAAI,EAAEJ,IAA9B;AAAoC,MAAA,IAAI,EAAEG,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AASD;;AAlCoC;;AAqCvCd,SAAS,CAACgB,SAAV,GAAsB;AACpBC,EAAAA,cAAc,EAAEvB,SAAS,CAACwB,MAAV,CAAiBC;AADb,CAAtB;AAIAnB,SAAS,CAACoB,YAAV,GAAyB,EAAzB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,cAAc,EAAED,KAAK,CAACE,qBAAN,CAA4BzB,KAAK,CAAC0B,2BAAlC;AADgB,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLtB,IAAAA,QAAQ,EAAE,CAACQ,IAAD,EAAOF,IAAP,KAAgB;AACxBgB,MAAAA,QAAQ,CAAC9B,iBAAiB,CAACgB,IAAD,EAAOF,IAAP,CAAlB,CAAR;AACD,KAHI;AAILiB,IAAAA,UAAU,EAAEf,IAAI,IAAI;AAClBc,MAAAA,QAAQ,CAAC9B,iBAAiB,CAACgB,IAAD,CAAlB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,eAAepB,UAAU,CACvBD,OAAO,CACL6B,eADK,EAELK,kBAFK,CAAP,CAGE1B,SAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport { getActionsFormate } from '../../utils/common';\nimport pageConfig from '../../utils/pageConfig';\nimport { STORE } from '../../utils/constants';\n// const Analytics = (props) => {\n//   const data= {\n//     columns: [\n//         ['data1', 30],\n//         ['data2', 120],\n//     ],\n//     type : 'donut',\n// };\n// let size= {\n//   // height: 200,\n//   width: 500\n// }\n//   return (\n//     <div>\n//       {/* <PageHeader title=\"Assets\" actions={[]} /> */}\n//       <div className=\"card\">\n//         <C3Chart title=\"Assets\" data={data} size={size} />\n//       </div>\n      \n//     </div>\n//   );\n// };\n\nclass Analytics extends React.Component{\n  constructor(props){\n    super(props);\n  }\n\n  componentDidMount(){\n    const {makeCall, page, match} = this.props;\n    const { fetchAssetsCount } = pageConfig[page];\n    const { params } = match;\n    if(fetchAssetsCount){\n      makeCall(fetchAssetsCount, {...params});\n    }\n  }\n  render(){\n    const data= {\n      columns: [\n          ['data1', 30],\n          ['data2', 120],\n      ],\n      type : 'donut',\n    };\n    let size= {\n      // height: 200,\n      width: 500\n    }\n    return (\n      <div>\n        {/* <PageHeader title=\"Assets\" actions={[]} /> */}\n        <div className=\"card\">\n          <C3Chart title=\"Assets\" data={data} size={size} />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nAnalytics.propTypes = {\n  analyticsStore: PropTypes.object.isRequired\n};\n\nAnalytics.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  AssetTypeCount: state.analyticsReducerStore[STORE.ASSETS_COUNT_WRT_ASSET_TYPE]\n\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Analytics)\n);"]},"metadata":{},"sourceType":"module"}