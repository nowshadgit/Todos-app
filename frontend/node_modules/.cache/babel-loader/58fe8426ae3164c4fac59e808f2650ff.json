{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\nimport { PAGE } from '../../utils/constants';\nimport LoaderComponent from '../../components/Loader/LoaderComponent';\nimport PageLoader from '../../components/PageLoader/PageLoader';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page;\n    const types = pageConfig[page].actions.fetchList;\n    let data = {};\n    data = {\n      department: this.props.match.params.orgUnitId\n    };\n    makeCall(types, data);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.url !== this.props.match.url) {\n      const _this$props2 = this.props,\n            makeCall = _this$props2.makeCall,\n            page = _this$props2.page;\n      const types = pageConfig[page].actions.fetchList;\n      let data = {};\n      data = {\n        department: this.props.match.params.orgUnitId\n      };\n      makeCall(types, data);\n    }\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          page = _this$props3.page,\n          dataCard = _this$props3.dataCard,\n          title = _this$props3.title,\n          inProgress = _this$props3.inProgress;\n    const _pageConfig$page = pageConfig[page],\n          headerActions = _pageConfig$page.headerActions,\n          bodyHandler = _pageConfig$page.bodyHandler,\n          redirect = _pageConfig$page.redirect;\n    const pageTitle = page === PAGE.ORG_UNITS_DETAILS ? title || pageConfig[page].pageTitle : pageConfig[page].pageTitle;\n    console.log(\"page loading:\", inProgress);\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(PageLoader, {\n      inProgress: inProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(PageHeader, Object.assign({}, this.props, {\n      title: pageTitle,\n      actions: headerActions,\n      redirect: redirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(DataCards, Object.assign({}, this.props, {\n      data: dataCard,\n      actions: bodyHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  dataCard: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  makeCall: PropTypes.func.isRequired,\n  match: PropTypes.any.isRequired,\n  // eslint-disable-next-line react/require-default-props\n  title: PropTypes.string,\n  inProgress: PropTypes.bool.isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const page = props.page;\n  const respectedStore = pageConfig[page].store.storedList;\n  const formateFunction = pageConfig[page].formateFunc;\n  return {\n    dataCard: formateFunction(state.listReducerStore[respectedStore]),\n    title: state.listReducerStore.title,\n    inProgress: state.listReducerStore.inProgress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","DataCards","PAGE","LoaderComponent","PageLoader","ListPage","Component","componentDidMount","props","makeCall","page","types","actions","fetchList","data","department","match","params","orgUnitId","componentDidUpdate","prevProps","url","render","dataCard","title","inProgress","headerActions","bodyHandler","redirect","pageTitle","ORG_UNITS_DETAILS","console","log","propTypes","string","isRequired","oneOfType","array","object","func","any","bool","defaultProps","mapStateToProps","state","respectedStore","store","storedList","formateFunction","formateFunc","listReducerStore","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\nimport { PAGE } from '../../utils/constants';\nimport LoaderComponent from '../../components/Loader/LoaderComponent';\nimport PageLoader from '../../components/PageLoader/PageLoader';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const { makeCall, page } = this.props;\n    const types = pageConfig[page].actions.fetchList;\n    let data = {};\n    data = { department: this.props.match.params.orgUnitId };\n    makeCall(types, data);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.url !== this.props.match.url) {\n      const { makeCall, page } = this.props;\n      const types = pageConfig[page].actions.fetchList;\n      let data = {};\n      data = { department: this.props.match.params.orgUnitId };\n      makeCall(types, data);\n    }\n  }\n\n  render() {\n    const { page, dataCard, title, inProgress } = this.props;\n    const { headerActions, bodyHandler, redirect } = pageConfig[page];\n\n    const pageTitle =\n      page === PAGE.ORG_UNITS_DETAILS\n        ? title || pageConfig[page].pageTitle\n        : pageConfig[page].pageTitle;\n        console.log(\"page loading:\", inProgress);\n        \n    return (\n      <div className=\"list-page\">\n       <PageLoader inProgress={inProgress} />\n        <PageHeader\n          {...this.props}\n          title={pageTitle}\n          actions={headerActions}\n          redirect={redirect}\n        />\n        <DataCards {...this.props} data={dataCard} actions={bodyHandler} />\n        \n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  dataCard: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  makeCall: PropTypes.func.isRequired,\n  match: PropTypes.any.isRequired,\n  // eslint-disable-next-line react/require-default-props\n  title: PropTypes.string,\n  inProgress: PropTypes.bool.isRequired\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const { page } = props;\n  const respectedStore = pageConfig[page].store.storedList;\n  const formateFunction = pageConfig[page].formateFunc;\n\n  return {\n    dataCard: formateFunction(state.listReducerStore[respectedStore]),\n    title: state.listReducerStore.title,\n    inProgress: state.listReducerStore.inProgress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}