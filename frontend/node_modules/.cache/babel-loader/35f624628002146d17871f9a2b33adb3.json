{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\n\nfunction* addOrgUnit(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.ORG_UNITS, action.data.data);\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.ORG_UNITS.LIST);\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.ADD_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* updateOrgUnit(action) {\n  let response;\n\n  try {\n    const url = reverse(FOOTPRINTS_API.UPDATE_ORG_UNIT, _objectSpread({}, action.data.props.match.params));\n    response = yield call(window.axios.patchData, url, action.data.data);\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.goBack();\n      yield put({\n        type: ACTIONS.ORG_UNITS.UPDATE_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.UPDATE_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport { addOrgUnit, updateOrgUnit };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditOrgUnits/AddEditOrgUnits.saga.js"],"names":["call","put","reverse","ACTIONS","FOOTPRINTS_API","FOOTPRINTS_ROUTES","addOrgUnit","action","response","window","axios","postData","ORG_UNITS","data","status","props","history","push","LIST","type","ADD_ORG_UNIT_SUCCESS","payload","ALERT_MESSAGE","ADD_SUCCESS","ADD_ORG_UNIT_FAIL","e","updateOrgUnit","url","UPDATE_ORG_UNIT","match","params","patchData","goBack","UPDATE_ORG_UNIT_SUCCESS","UPDATE_ORG_UNIT_FAIL"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\n\nfunction* addOrgUnit(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.ORG_UNITS,\n      action.data.data\n    );\n\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.ORG_UNITS.LIST);\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.ADD_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL, payload: e });\n  }\n}\n\nfunction* updateOrgUnit(action) {\n  let response;\n  try {\n    const url = reverse(FOOTPRINTS_API.UPDATE_ORG_UNIT, {\n      ...action.data.props.match.params\n    });\n    response = yield call(window.axios.patchData, url, action.data.data);\n    if (response.status === 201 || response.status === 200) {\n      action.data.props.history.goBack();\n      yield put({\n        type: ACTIONS.ORG_UNITS.UPDATE_ORG_UNIT_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.UPDATE_ORG_UNIT_FAIL,\n        payload: response.data\n      });\n     \n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.ORG_UNITS.ADD_ORG_UNIT_FAIL, payload: e });\n    \n  }\n}\n\nexport { addOrgUnit, updateOrgUnit };\n"]},"metadata":{},"sourceType":"module"}