{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Tooltip from '@atlaskit/tooltip';\nimport Select, { components } from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n  if (props.isHidden) {\n    return React.createElement(components.Input, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    content: \"Custom Input\",\n    className: \"pl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(components.Input, Object.assign({\n    className: \"pl-0\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }))));\n};\n\nconst colourStyles = {\n  control: styles => _objectSpread({}, styles, {\n    backgroundColor: 'transparant',\n    border: 'none',\n    borderBottom: '1px solid #b9b9b9',\n    borderRadius: '0px',\n    width: '31.333333%'\n  }),\n  option: styles => _objectSpread({\n    padding: '0px'\n  }, styles),\n  input: styles => _objectSpread({\n    padding: '0px'\n  }, styles),\n  placeholder: styles => _objectSpread({\n    padding: '0px'\n  }, styles)\n};\n\nconst CustomSelect = props => {\n  console.log(\"defaultValue\", props.defaultValue, props.fieldValues);\n  return React.createElement(Select, {\n    defaultValue: [{\n      value: 2,\n      label: \"Asset Manager\"\n    }],\n    closeMenuOnSelect: false,\n    components: {\n      Input\n    },\n    onChange: props.onChange,\n    options: props.fieldValues,\n    isMulti: true,\n    placeholder: props.placeholder,\n    styles: colourStyles,\n    id: \"custom-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n};\n\nCustomSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  fieldValues: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired\n};\nInput.propTypes = {\n  isHidden: PropTypes.bool.isRequired\n};\nexport default CustomSelect;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx"],"names":["React","Tooltip","Select","components","PropTypes","Input","props","isHidden","colourStyles","control","styles","backgroundColor","border","borderBottom","borderRadius","width","option","padding","input","placeholder","CustomSelect","console","log","defaultValue","fieldValues","value","label","onChange","propTypes","func","isRequired","string","bool"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,MAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,WAAO,oBAAC,UAAD,CAAY,KAAZ,oBAAsBD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,cAAjB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,CAAY,KAAZ;AAAkB,IAAA,SAAS,EAAC;AAA5B,KAAuCA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD,CAXD;;AAaA,MAAME,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAEC,MAAM,sBACVA,MADU;AAEbC,IAAAA,eAAe,EAAE,aAFJ;AAGbC,IAAAA,MAAM,EAAE,MAHK;AAIbC,IAAAA,YAAY,EAAE,mBAJD;AAKbC,IAAAA,YAAY,EAAE,KALD;AAMbC,IAAAA,KAAK,EAAE;AANM,IADI;AASnBC,EAAAA,MAAM,EAAEN,MAAM;AAAOO,IAAAA,OAAO,EAAE;AAAhB,KAA0BP,MAA1B,CATK;AAUnBQ,EAAAA,KAAK,EAAER,MAAM;AAAOO,IAAAA,OAAO,EAAE;AAAhB,KAA0BP,MAA1B,CAVM;AAWnBS,EAAAA,WAAW,EAAET,MAAM;AAAOO,IAAAA,OAAO,EAAE;AAAhB,KAA0BP,MAA1B;AAXA,CAArB;;AAcA,MAAMU,YAAY,GAAGd,KAAK,IAAI;AAC5Be,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BhB,KAAK,CAACiB,YAAjC,EAA+CjB,KAAK,CAACkB,WAArD;AAEA,SACE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAG,CAAC;AAACC,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAD,CADjB;AAEE,IAAA,iBAAiB,EAAE,KAFrB;AAGE,IAAA,UAAU,EAAE;AAAErB,MAAAA;AAAF,KAHd;AAIE,IAAA,QAAQ,EAAEC,KAAK,CAACqB,QAJlB;AAKE,IAAA,OAAO,EAAErB,KAAK,CAACkB,WALjB;AAME,IAAA,OAAO,MANT;AAOE,IAAA,WAAW,EAAElB,KAAK,CAACa,WAPrB;AAQE,IAAA,MAAM,EAAEX,YARV;AASE,IAAA,EAAE,EAAC,eATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD,CAhBD;;AAiBAY,YAAY,CAACQ,SAAb,GAAyB;AACvBD,EAAAA,QAAQ,EAAEvB,SAAS,CAACyB,IAAV,CAAeC,UADF;AAEvBN,EAAAA,WAAW,EAAEpB,SAAS,CAAC2B,MAAV,CAAiBD,UAFP;AAGvBX,EAAAA,WAAW,EAAEf,SAAS,CAAC2B,MAAV,CAAiBD;AAHP,CAAzB;AAKAzB,KAAK,CAACuB,SAAN,GAAkB;AAChBrB,EAAAA,QAAQ,EAAEH,SAAS,CAAC4B,IAAV,CAAeF;AADT,CAAlB;AAIA,eAAeV,YAAf","sourcesContent":["import React from 'react';\nimport Tooltip from '@atlaskit/tooltip';\nimport Select, { components } from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n  if (props.isHidden) {\n    return <components.Input {...props} />;\n  }\n  return (\n    <div>\n      <Tooltip content=\"Custom Input\" className=\"pl-0\">\n        <components.Input className=\"pl-0\" {...props} />\n      </Tooltip>\n    </div>\n  );\n};\n\nconst colourStyles = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: 'transparant',\n    border: 'none',\n    borderBottom: '1px solid #b9b9b9',\n    borderRadius: '0px',\n    width: '31.333333%'\n  }),\n  option: styles => ({ padding: '0px', ...styles }),\n  input: styles => ({ padding: '0px', ...styles }),\n  placeholder: styles => ({ padding: '0px', ...styles })\n};\n\nconst CustomSelect = props => {\n  console.log(\"defaultValue\",props.defaultValue, props.fieldValues);\n  \n  return (\n    <Select\n      defaultValue={ [{value: 2, label: \"Asset Manager\"}]}\n      closeMenuOnSelect={false}\n      components={{ Input }}\n      onChange={props.onChange}\n      options={props.fieldValues}\n      isMulti\n      placeholder={props.placeholder}\n      styles={colourStyles}\n      id=\"custom-select\"\n    />\n  );\n};\nCustomSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  fieldValues: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired\n};\nInput.propTypes = {\n  isHidden: PropTypes.bool.isRequired\n};\n\nexport default CustomSelect;\n"]},"metadata":{},"sourceType":"module"}