{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditAssetTypes/AddEditAssetTypes.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { getErrorResMsg } from '../../utils/formValidations';\nimport { PAGE, STORE } from '../../utils/constants';\nimport AddEditAssetTypesForm from '../../components/AddEditAssetTypesForm/AddEditAssetTypesForm';\n\nclass AddEditAssetTypes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ASSET_TYPE_FIELD_ID = 'asset-type';\n    this.ATTRIBUTE_FIELD_ID = 'attribute';\n    this.DAYS_FIELD_ID = 'days-to-process';\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let errors = this.state.errors;\n      let error = false;\n      const attributes = this.state.attributes;\n      const data = {\n        name: '',\n        days_to_process: '',\n        attributes: []\n      };\n\n      if (this.state[this.ASSET_TYPE_FIELD_ID].length <= 0) {\n        errors = {\n          assetType: 'Name must not be empty'\n        };\n        error = true;\n      } else if (this.state[this.DAYS_FIELD_ID] <= 0) {\n        errors = {\n          noOfDays: 'No of days must be greater than zero'\n        };\n        error = true;\n      } else {\n        if (attributes.length === 1 && attributes[0].id === 'Select a Attribute') {\n          data.attributes = [];\n        } else {\n          for (const attribute of attributes) {\n            if (attribute.id === 'Select a Attribute') {\n              attribute.errors = {\n                attribute: 'Name must not be empty'\n              };\n              error = true;\n            } else if (attribute.selectedValue.length <= 0) {\n              attribute.errors = {\n                value: 'One value must be choosen'\n              };\n              error = true;\n            } else {\n              attribute.errors = {};\n              data.attributes.push({\n                attribute: attribute.id,\n                attribute_value: attribute.selectedValue\n              });\n            }\n\n            errors = {};\n          }\n        }\n\n        data.name = this.state[this.ASSET_TYPE_FIELD_ID];\n        data.days_to_process = this.state[this.DAYS_FIELD_ID];\n      }\n\n      if (error) {\n        this.setState({\n          errors,\n          attributes\n        });\n      } else {\n        const type = pageConfig[this.props.page].actions.postData;\n        this.props.submit(type, {\n          data,\n          props: _objectSpread({}, this.props)\n        });\n      }\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.ASSET_TYPE_FIELD_ID]: '',\n      [this.DAYS_FIELD_ID]: '',\n      errorCode: '',\n      attributes: [{\n        id: 'Select a Attribute',\n        selectedValue: '',\n        values: [],\n        errors: {}\n      }],\n      attributesDropdown: [],\n      errors: {},\n      firstRender: true\n    };\n    this.onAssetAttribute = this.onAssetAttribute.bind(this);\n    this.onValueSelected = this.onValueSelected.bind(this);\n    this.deleteAttributeCard = this.deleteAttributeCard.bind(this);\n    this.addAttributeCard = this.addAttributeCard.bind(this);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page,\n          match = _this$props.match;\n    const types = pageConfig[page].actions.fetchAttributes;\n    const detailTypes = pageConfig[page].actions.fetchDetails;\n    const params = match.params;\n    makeCall(types, {});\n    makeCall(detailTypes, _objectSpread({}, params, {\n      page\n    }));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const errorCode = nextProps.errorCode;\n    const attributesDropdown = nextProps.attributesDropdown;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_ASSET_TYPES);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    if (nextProps.page === PAGE.UPDATE_ASSET_TYPES && prevState.firstRender && nextProps.details && Object.values(nextProps.details).length > 0) {\n      const _nextProps$details = nextProps.details,\n            name = _nextProps$details.name,\n            daysToProcess = _nextProps$details.days_to_process,\n            attributes = _nextProps$details.attributes;\n      const attributesDetails = [];\n\n      for (let attribute = 0; attribute < attributes.length; attribute += 1) {\n        const values = attributesDropdown.filter(element => {\n          return element.id === attributes[attribute].get_attribute.id;\n        });\n        attributesDetails.push({\n          id: attributes[attribute].get_attribute.id,\n          values: values[0].values,\n          selectedValue: attributes[attribute].get_attribute_value.id,\n          errors: {}\n        });\n      }\n\n      return {\n        'asset-type': name,\n        'days-to-process': daysToProcess,\n        attributes: attributesDetails,\n        firstRender: false\n      };\n    }\n\n    return prevState;\n  }\n\n  onAssetAttribute(e, i) {\n    const id = e.target.value;\n    const attributesDropdown = this.props.attributesDropdown;\n    const values = attributesDropdown.filter(element => {\n      return element.id == id;\n    });\n    const attributes = this.state.attributes;\n    attributes[i].id = id;\n    attributes[i].values = values[0].values;\n    this.setState({\n      attributes\n    });\n  }\n\n  onValueSelected(e, i) {\n    const attributes = this.state.attributes;\n    attributes[i].selectedValue = e.target.value;\n    this.setState({\n      attributes\n    });\n  }\n\n  deleteAttributeCard(i) {\n    const attributes = this.state.attributes;\n    attributes.splice(i, 1);\n    this.setState({\n      attributes\n    });\n  }\n\n  addAttributeCard() {\n    const attribute = {\n      id: 'Select a Attribute',\n      values: [],\n      selectedValue: '',\n      errors: {}\n    };\n    const attributes = this.state.attributes;\n    attributes.push(attribute);\n    this.setState({\n      attributes\n    });\n  }\n\n  render() {\n    const page = this.props.page;\n    const pageTitle = pageConfig[page].pageTitle;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(AddEditAssetTypesForm, {\n      handleSubmit: this.handleSubmit,\n      formErrors: this.state.formErrors,\n      handleChange: this.handleChange,\n      assetTypeFieldId: this.ASSET_TYPE_FIELD_ID,\n      assetTypeFieldValue: this.state[this.ASSET_TYPE_FIELD_ID],\n      daysFieldId: this.DAYS_FIELD_ID,\n      daysFieldValue: this.state[this.DAYS_FIELD_ID],\n      attributes: this.state.attributes,\n      attributesDropdown: this.props.attributesDropdown,\n      onAssetAttribute: this.onAssetAttribute,\n      onValueSelected: this.onValueSelected,\n      deleteAttributeCard: this.deleteAttributeCard,\n      addAttributeCard: this.addAttributeCard,\n      errors: this.state.errors,\n      details: this.props.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAddEditAssetTypes.propTypes = {\n  attributesDropdown: PropTypes.array,\n  page: PropTypes.string.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  makeCall: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  submit: PropTypes.func.isRequired,\n  details: PropTypes.object.isRequired\n};\nAddEditAssetTypes.defaultProps = {\n  attributesDropdown: []\n};\n\nconst mapStateToProps = state => ({\n  attributesDropdown: state.addEditAssetTypes[STORE.ASSET_ATTRIBUTES_DROPDOWN],\n  errorCode: state.addEditAssetTypes.errorCode,\n  details: state.DetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditAssetTypes));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditAssetTypes/AddEditAssetTypes.jsx"],"names":["React","connect","withRouter","PropTypes","PageHeader","pageConfig","getActionsFormate","getErrorResMsg","PAGE","STORE","AddEditAssetTypesForm","AddEditAssetTypes","Component","constructor","props","ASSET_TYPE_FIELD_ID","ATTRIBUTE_FIELD_ID","DAYS_FIELD_ID","handleChange","event","setState","target","id","value","formErrors","handleSubmit","preventDefault","errors","state","error","attributes","data","name","days_to_process","length","assetType","noOfDays","attribute","selectedValue","push","attribute_value","type","page","actions","postData","submit","formValidity","errorCode","values","attributesDropdown","firstRender","onAssetAttribute","bind","onValueSelected","deleteAttributeCard","addAttributeCard","componentDidMount","makeCall","match","types","fetchAttributes","detailTypes","fetchDetails","params","getDerivedStateFromProps","nextProps","prevState","errMsg","ADD_ASSET_TYPES","UPDATE_ASSET_TYPES","details","Object","daysToProcess","attributesDetails","filter","element","get_attribute","get_attribute_value","e","i","splice","render","pageTitle","propTypes","array","string","isRequired","oneOfType","number","func","object","defaultProps","mapStateToProps","addEditAssetTypes","ASSET_ATTRIBUTES_DROPDOWN","DetailsReducerStore","mapDispatchToProps","dispatch","resetState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { getErrorResMsg } from '../../utils/formValidations';\nimport { PAGE, STORE } from '../../utils/constants';\nimport AddEditAssetTypesForm from '../../components/AddEditAssetTypesForm/AddEditAssetTypesForm';\n\nclass AddEditAssetTypes extends React.Component {\n  ASSET_TYPE_FIELD_ID = 'asset-type';\n\n  ATTRIBUTE_FIELD_ID = 'attribute';\n\n  DAYS_FIELD_ID = 'days-to-process';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.ASSET_TYPE_FIELD_ID]: '',\n      [this.DAYS_FIELD_ID]: '',\n      errorCode: '',\n      attributes: [\n        { id: 'Select a Attribute', selectedValue: '', values: [], errors: {} }\n      ],\n      attributesDropdown: [],\n      errors: {},\n      firstRender: true\n    };\n    this.onAssetAttribute = this.onAssetAttribute.bind(this);\n    this.onValueSelected = this.onValueSelected.bind(this);\n    this.deleteAttributeCard = this.deleteAttributeCard.bind(this);\n    this.addAttributeCard = this.addAttributeCard.bind(this);\n  }\n\n  componentDidMount() {\n    const { makeCall, page, match } = this.props;\n    const types = pageConfig[page].actions.fetchAttributes;\n    const detailTypes = pageConfig[page].actions.fetchDetails;\n    const { params } = match;\n    makeCall(types, {});\n    makeCall(detailTypes, { ...params, page });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { errorCode } = nextProps;\n    const { attributesDropdown } = nextProps;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_ASSET_TYPES);\n      return { formErrors: errMsg, errorCode };\n    }\n    if (\n      nextProps.page === PAGE.UPDATE_ASSET_TYPES &&\n      prevState.firstRender &&\n      nextProps.details &&\n      Object.values(nextProps.details).length > 0\n    ) {\n      const {\n        name,\n        days_to_process: daysToProcess,\n        attributes\n      } = nextProps.details;\n      const attributesDetails = [];\n      for (let attribute = 0; attribute < attributes.length; attribute += 1) {\n        const values = attributesDropdown.filter(element => {\n          return element.id === attributes[attribute].get_attribute.id;\n        });\n        attributesDetails.push({\n          id: attributes[attribute].get_attribute.id,\n          values: values[0].values,\n          selectedValue: attributes[attribute].get_attribute_value.id,\n          errors: {}\n        });\n      }\n      return {\n        'asset-type': name,\n        'days-to-process': daysToProcess,\n        attributes: attributesDetails,\n        firstRender: false\n      };\n    }\n    return prevState;\n  }\n\n  onAssetAttribute(e, i) {\n    const id = e.target.value;\n    const { attributesDropdown } = this.props;\n    const values = attributesDropdown.filter(element => {\n      return element.id == id;\n    });\n    const { attributes } = this.state;\n    attributes[i].id = id;\n    attributes[i].values = values[0].values;\n    this.setState({\n      attributes\n    });\n  }\n\n  onValueSelected(e, i) {\n    const { attributes } = this.state;\n    attributes[i].selectedValue = e.target.value;\n    this.setState({\n      attributes\n    });\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value,\n      formErrors: {}\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let { errors } = this.state;\n    let error = false;\n    const { attributes } = this.state;\n    const data = { name: '', days_to_process: '', attributes: [] };\n    if (this.state[this.ASSET_TYPE_FIELD_ID].length <= 0) {\n      errors = { assetType: 'Name must not be empty' };\n      error = true;\n    } else if (this.state[this.DAYS_FIELD_ID] <= 0) {\n      errors = { noOfDays: 'No of days must be greater than zero' };\n      error = true;\n    } else {\n      if (\n        attributes.length === 1 &&\n        attributes[0].id === 'Select a Attribute'\n      ) {\n        data.attributes = [];\n      } else {\n        for (const attribute of attributes) {\n          if (attribute.id === 'Select a Attribute') {\n            attribute.errors = { attribute: 'Name must not be empty' };\n            error = true;\n          } else if (attribute.selectedValue.length <= 0) {\n            attribute.errors = { value: 'One value must be choosen' };\n            error = true;\n          } else {\n            attribute.errors = {};\n            data.attributes.push({\n              attribute: attribute.id,\n              attribute_value: attribute.selectedValue\n            });\n          }\n          errors = {};\n        }\n      }\n      data.name = this.state[this.ASSET_TYPE_FIELD_ID];\n      data.days_to_process = this.state[this.DAYS_FIELD_ID];\n    }\n    if (error) {\n      this.setState({\n        errors,\n        attributes\n      });\n    } else {\n      const type = pageConfig[this.props.page].actions.postData;\n      this.props.submit(type, { data, props: { ...this.props } });\n    }\n  };\n\n  deleteAttributeCard(i) {\n    const { attributes } = this.state;\n    attributes.splice(i, 1);\n    this.setState({\n      attributes\n    });\n  }\n\n  addAttributeCard() {\n    const attribute = {\n      id: 'Select a Attribute',\n      values: [],\n      selectedValue: '',\n      errors: {}\n    };\n    const { attributes } = this.state;\n    attributes.push(attribute);\n    this.setState({\n      attributes\n    });\n  }\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle } = pageConfig[page];\n    return (\n      <div>\n        <PageHeader title={pageTitle} />\n        <AddEditAssetTypesForm\n          handleSubmit={this.handleSubmit}\n          formErrors={this.state.formErrors}\n          handleChange={this.handleChange}\n          assetTypeFieldId={this.ASSET_TYPE_FIELD_ID}\n          assetTypeFieldValue={this.state[this.ASSET_TYPE_FIELD_ID]}\n          daysFieldId={this.DAYS_FIELD_ID}\n          daysFieldValue={this.state[this.DAYS_FIELD_ID]}\n          attributes={this.state.attributes}\n          attributesDropdown={this.props.attributesDropdown}\n          onAssetAttribute={this.onAssetAttribute}\n          onValueSelected={this.onValueSelected}\n          deleteAttributeCard={this.deleteAttributeCard}\n          addAttributeCard={this.addAttributeCard}\n          errors={this.state.errors}\n          details={this.props.details}\n        />\n      </div>\n    );\n  }\n}\n\nAddEditAssetTypes.propTypes = {\n  attributesDropdown: PropTypes.array,\n  page: PropTypes.string.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  makeCall: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  submit: PropTypes.func.isRequired,\n  details: PropTypes.object.isRequired\n};\n\nAddEditAssetTypes.defaultProps = {\n  attributesDropdown: []\n};\n\nconst mapStateToProps = state => ({\n  attributesDropdown: state.addEditAssetTypes[STORE.ASSET_ATTRIBUTES_DROPDOWN],\n  errorCode: state.addEditAssetTypes.errorCode,\n  details: state.DetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddEditAssetTypes)\n);\n"]},"metadata":{},"sourceType":"module"}