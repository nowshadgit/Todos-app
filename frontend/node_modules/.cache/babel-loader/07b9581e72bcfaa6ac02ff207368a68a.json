{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/AlertMessage/AlertMessage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ERROR_CODES from '../../utils/errorCodes';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { ALERT_MESSAAGEs } from '../../utils/constants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getActionsFormate } from '../../utils/common';\n\nclass AlertMessage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.notify = () => {\n      const _this$props = this.props,\n            AlertMessageStore = _this$props.AlertMessageStore,\n            resetState = _this$props.resetState;\n      const status = AlertMessageStore.status,\n            errorCode = AlertMessageStore.errorCode;\n\n      if (status === ACTIONS.ALERT_MESSAGE.ADD_SUCCESS) {\n        toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n\n      if (status === ACTIONS.ALERT_MESSAGE.UPDATE_SUCCESS) {\n        toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n\n      if (status === ACTIONS.ALERT_MESSAGE.FAIL) {\n        console.log(\"comming here:\", status);\n        toast.error(ERROR_CODES[\"LIST\"][errorCode], {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.notify(status, errorCode), React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAlertMessage.propTypes = {\n  status: PropTypes.string.isRequired,\n  errorCode: PropTypes.number.isRequired,\n  resetState: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  AlertMessageStore: state.AlertMessageReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AlertMessage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/AlertMessage/AlertMessage.jsx"],"names":["React","PropTypes","ToastContainer","toast","ERROR_CODES","ACTIONS","ALERT_MESSAAGEs","connect","withRouter","getActionsFormate","AlertMessage","Component","notify","props","AlertMessageStore","resetState","status","errorCode","ALERT_MESSAGE","ADD_SUCCESS","success","position","POSITION","TOP_RIGHT","UPDATE_SUCCESS","FAIL","console","log","error","render","propTypes","string","isRequired","number","func","mapStateToProps","state","AlertMessageReducerStore","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AACA,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACvCC,MADuC,GAC9B,MAAK;AAAA,0BACgC,KAAKC,KADrC;AAAA,YACFC,iBADE,eACFA,iBADE;AAAA,YACiBC,UADjB,eACiBA,UADjB;AAAA,YAEFC,MAFE,GAEoBF,iBAFpB,CAEFE,MAFE;AAAA,YAEMC,SAFN,GAEoBH,iBAFpB,CAEMG,SAFN;;AAGV,UAAGD,MAAM,KAAKX,OAAO,CAACa,aAAR,CAAsBC,WAApC,EAAgD;AAC5ChB,QAAAA,KAAK,CAACiB,OAAN,CAAcd,eAAe,CAACD,OAAO,CAACa,aAAR,CAAsBC,WAAvB,CAA7B,EAAkE;AAC9DE,UAAAA,QAAQ,EAAElB,KAAK,CAACmB,QAAN,CAAeC;AADqC,SAAlE;AAGH;;AACD,UAAGP,MAAM,KAAKX,OAAO,CAACa,aAAR,CAAsBM,cAApC,EAAmD;AAC/CrB,QAAAA,KAAK,CAACiB,OAAN,CAAcd,eAAe,CAACD,OAAO,CAACa,aAAR,CAAsBC,WAAvB,CAA7B,EAAkE;AAC9DE,UAAAA,QAAQ,EAAElB,KAAK,CAACmB,QAAN,CAAeC;AADqC,SAAlE;AAGH;;AACD,UAAGP,MAAM,KAAKX,OAAO,CAACa,aAAR,CAAsBO,IAApC,EAAyC;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BX,MAA7B;AACAb,QAAAA,KAAK,CAACyB,KAAN,CAAYxB,WAAW,CAAC,MAAD,CAAX,CAAoBa,SAApB,CAAZ,EAA4C;AACxCI,UAAAA,QAAQ,EAAElB,KAAK,CAACmB,QAAN,CAAeC;AADe,SAA5C;AAGH;AAEJ,KArBsC;AAAA;;AAsBvCM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,MAAL,CAAYI,MAAZ,EAAoBC,SAApB,CADL,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA7BsC;;AAiC3CP,YAAY,CAACoB,SAAb,GAAyB;AACrBd,EAAAA,MAAM,EAAEf,SAAS,CAAC8B,MAAV,CAAiBC,UADJ;AAErBf,EAAAA,SAAS,EAAEhB,SAAS,CAACgC,MAAV,CAAiBD,UAFP;AAGrBjB,EAAAA,UAAU,EAAEd,SAAS,CAACiC,IAAV,CAAeF;AAHN,CAAzB;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BtB,EAAAA,iBAAiB,EAAEsB,KAAK,CAACC;AADK,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACLxB,IAAAA,UAAU,EAAEyB,IAAI,IAAI;AAClBD,MAAAA,QAAQ,CAAC9B,iBAAiB,CAAC+B,IAAD,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CANH;;AAOA,eAAehC,UAAU,CACrBD,OAAO,CACL4B,eADK,EAELG,kBAFK,CAAP,CAGE5B,YAHF,CADqB,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ERROR_CODES from '../../utils/errorCodes';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { ALERT_MESSAAGEs } from '../../utils/constants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getActionsFormate } from '../../utils/common';\nclass AlertMessage extends React.Component {\n    notify = () =>{\n        const { AlertMessageStore, resetState } = this.props;\n        const { status, errorCode } = AlertMessageStore;\n        if(status === ACTIONS.ALERT_MESSAGE.ADD_SUCCESS){\n            toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n        if(status === ACTIONS.ALERT_MESSAGE.UPDATE_SUCCESS){\n            toast.success(ALERT_MESSAAGEs[ACTIONS.ALERT_MESSAGE.ADD_SUCCESS], {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n        if(status === ACTIONS.ALERT_MESSAGE.FAIL){\n            console.log(\"comming here:\", status);\n            toast.error(ERROR_CODES[\"LIST\"][errorCode], {\n                position: toast.POSITION.TOP_RIGHT,\n            });\n        }\n\n    };\n    render() {\n        return (\n            <div>\n                {this.notify(status, errorCode)}\n                <ToastContainer />\n            </div>\n        )\n    }\n}\n\n\nAlertMessage.propTypes = {\n    status: PropTypes.string.isRequired,\n    errorCode: PropTypes.number.isRequired,\n    resetState: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    AlertMessageStore: state.AlertMessageReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      resetState: type => {\n        dispatch(getActionsFormate(type));\n      }\n    };\n  };\nexport default withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(AlertMessage)\n  );"]},"metadata":{},"sourceType":"module"}