{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Tooltip from '@atlaskit/tooltip';\nimport Select, { components } from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n  if (props.isHidden) {\n    return React.createElement(components.Input, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    content: \"Custom Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(components.Input, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }))));\n};\n\nconst customStyles = {\n  option: (provided, state) => _objectSpread({}, provided, {\n    borderBottom: '1px dotted pink',\n    color: state.isSelected ? 'red' : 'blue',\n    padding: 1,\n    width: 10\n  }),\n  control: () => ({// none of react-select's styles are passed to <Control />\n    // width: 200,\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n    return _objectSpread({}, provided, {\n      opacity,\n      transition\n    });\n  }\n};\n\nconst dot = (color = '#ccc') => ({\n  alignItems: 'center',\n  display: 'flex',\n  ':before': {\n    backgroundColor: color,\n    borderRadius: 10,\n    content: '\" \"',\n    display: 'block',\n    marginRight: 8,\n    height: 10,\n    width: 10\n  }\n});\n\nconst colourStyles = {\n  control: styles => _objectSpread({}, styles, {\n    backgroundColor: 'white',\n    border: 'none',\n    borderBottom: '1px solid #b9b9b9'\n  }),\n  option: styles => _objectSpread({}, styles, {}, dot(), {\n    border: '0px'\n  }),\n  input: styles => _objectSpread({}, styles, {}, dot()),\n  placeholder: styles => _objectSpread({}, styles, {}, dot()),\n  singleValue: (styles, {\n    data\n  }) => _objectSpread({}, styles, {}, dot(data.color))\n};\n\nconst CustomSelect = props => {\n  return React.createElement(Select, {\n    closeMenuOnSelect: false,\n    components: {\n      Input\n    },\n    onChange: props.onChange,\n    options: props.departmentsFieldValue,\n    isMulti: true,\n    placeholder: \"Roles\",\n    styles: colourStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  });\n};\n\nCustomSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  departmentsFieldValue: PropTypes.string.isRequired\n};\nInput.propTypes = {\n  isHidden: PropTypes.bool.isRequired\n};\nCustomSelect.defaultProps = {};\nexport default CustomSelect;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx"],"names":["React","Tooltip","Select","components","PropTypes","Input","props","isHidden","customStyles","option","provided","state","borderBottom","color","isSelected","padding","width","control","singleValue","opacity","isDisabled","transition","dot","alignItems","display","backgroundColor","borderRadius","content","marginRight","height","colourStyles","styles","border","input","placeholder","data","CustomSelect","onChange","departmentsFieldValue","propTypes","func","isRequired","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Tooltip from '@atlaskit/tooltip';\nimport Select, { components } from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n  if (props.isHidden) {\n    return <components.Input {...props} />;\n  }\n  return (\n    <div>\n      <Tooltip content=\"Custom Input\">\n        <components.Input {...props} />\n      </Tooltip>\n    </div>\n  );\n};\nconst customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    borderBottom: '1px dotted pink',\n    color: state.isSelected ? 'red' : 'blue',\n    padding: 1,\n    width:10\n  }),\n  control: () => ({\n    // none of react-select's styles are passed to <Control />\n    // width: 200,\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return { ...provided, opacity, transition };\n  }\n}\n\nconst dot = (color = '#ccc') => ({\n  alignItems: 'center',\n  display: 'flex',\n\n  ':before': {\n    backgroundColor: color,\n    borderRadius: 10,\n    content: '\" \"',\n    display: 'block',\n    marginRight: 8,\n    height: 10,\n    width: 10,\n  },\n});\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white', border:'none', borderBottom:'1px solid #b9b9b9' }),\n  option: styles=>({ ...styles, ...dot(), border:'0px' }),\n  input: styles => ({ ...styles, ...dot() }),\n  placeholder: styles => ({ ...styles, ...dot() }),\n  singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\n};\n\nconst CustomSelect = props => {\n  return (\n    <Select\n      closeMenuOnSelect={false}\n      components={{ Input }}\n      onChange={props.onChange}\n      options={props.departmentsFieldValue}\n      isMulti\n      placeholder=\"Roles\"\n      styles={colourStyles}\n    />\n  );\n};\nCustomSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  departmentsFieldValue: PropTypes.string.isRequired\n};\nInput.propTypes = {\n  isHidden: PropTypes.bool.isRequired\n};\nCustomSelect.defaultProps = {};\n\nexport default CustomSelect;\n"]},"metadata":{},"sourceType":"module"}