{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport React, { Component } from 'react';\nimport withAnalyticsEvents from './withAnalyticsEvents';\nimport AnalyticsContext from './AnalyticsContext';\n\nvar isObject = function (o) {\n  return typeof o === 'object' && o !== null && !Array.isArray(o);\n};\n\nvar BaseAnalyticsErrorBoundary =\n/** @class */\nfunction (_super) {\n  __extends(BaseAnalyticsErrorBoundary, _super);\n\n  function BaseAnalyticsErrorBoundary() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.fireAnalytics = function (analyticsErrorPayload) {\n      var _a = _this.props,\n          createAnalyticsEvent = _a.createAnalyticsEvent,\n          channel = _a.channel,\n          data = _a.data;\n      createAnalyticsEvent({\n        action: 'UnhandledError',\n        eventType: 'ui',\n        attributes: __assign(__assign({\n          browserInfo: window && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : 'unknown'\n        }, data), isObject(analyticsErrorPayload) ? analyticsErrorPayload : {})\n      }).fire(channel);\n    };\n\n    return _this;\n  }\n\n  BaseAnalyticsErrorBoundary.prototype.componentDidCatch = function (error, info) {\n    var payload = {\n      error: error,\n      info: info\n    };\n    this.fireAnalytics(payload);\n  };\n\n  BaseAnalyticsErrorBoundary.prototype.render = function () {\n    var _a = this.props,\n        data = _a.data,\n        children = _a.children;\n    return React.createElement(AnalyticsContext, {\n      data: data\n    }, children);\n  };\n\n  return BaseAnalyticsErrorBoundary;\n}(Component);\n\nexport { BaseAnalyticsErrorBoundary };\nvar AnalyticsErrorBoundary = withAnalyticsEvents()(BaseAnalyticsErrorBoundary);\nexport default AnalyticsErrorBoundary;","map":null,"metadata":{},"sourceType":"module"}