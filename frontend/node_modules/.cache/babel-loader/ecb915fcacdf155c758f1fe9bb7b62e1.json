{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport { getSession, logout } from './authService';\n\nclass AxiosWrapper {\n  constructor(sessionCookie, rememberMeCookie) {\n    this.getAuthHeader = () => {\n      const sessionData = getSession(this.sessionCookie);\n\n      if (Object.keys(sessionData).length) {\n        if (sessionData.token) return {\n          Authorization: \"Token \".concat(sessionData.token)\n        };\n        if (sessionData.tempSignupToken) return {\n          temporaryToken: sessionData.tempSignupToken\n        };\n      }\n\n      return {};\n    };\n\n    this._ajax = ({\n      method,\n      url,\n      data = {},\n      headers\n    }) => {\n      const requestHeaders = _objectSpread({}, headers, {}, this.getAuthHeader());\n\n      return axios({\n        method,\n        url,\n        data,\n        headers: requestHeaders\n      }).then(response => response).catch(error => error.response);\n    };\n\n    this.postData = (url, data, headers) => this._ajax({\n      method: 'post',\n      url,\n      data,\n      headers\n    });\n\n    this.getData = (url, data, headers) => this._ajax({\n      method: 'get',\n      url,\n      data,\n      headers\n    });\n\n    this.putData = (url, data) => this._ajax({\n      method: 'put',\n      url,\n      data\n    });\n\n    this.deleteData = (url, data) => this._ajax({\n      method: 'delete',\n      url,\n      data\n    });\n\n    this.patchData = (url, data) => this._ajax({\n      method: 'patch',\n      url,\n      data\n    });\n\n    this.handleAPIError = error => {\n      if (error.response && error.response.status === 401) {\n        // logout user in this case\n        logout(this.sessionCookie, this.rememberMeCookie);\n      } else if (error.response && error.response.status === 500 && !(error.response.data instanceof Object)) {\n        return {\n          data: {\n            error_code: 1500\n          }\n        };\n      } else if (error.message === 'Network Error' && !navigator.onLine) {\n        // Handle internet connectivity error.\n        return {\n          data: {\n            error_code: 1530\n          }\n        };\n      } else {\n        return Promise.reject(error);\n      }\n\n      return false;\n    };\n\n    this.sessionCookie = sessionCookie;\n    this.rememberMeCookie = rememberMeCookie;\n    axios.defaults.headers.common['Content-Type'] = 'application/json';\n    axios.interceptors.response.use(response => response, this.handleAPIError);\n  }\n\n}\n\nexport default AxiosWrapper;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/utils/AxiosWrapper.js"],"names":["axios","getSession","logout","AxiosWrapper","constructor","sessionCookie","rememberMeCookie","getAuthHeader","sessionData","Object","keys","length","token","Authorization","tempSignupToken","temporaryToken","_ajax","method","url","data","headers","requestHeaders","then","response","catch","error","postData","getData","putData","deleteData","patchData","handleAPIError","status","error_code","message","navigator","onLine","Promise","reject","defaults","common","interceptors","use"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { getSession, logout } from './authService';\n\nclass AxiosWrapper {\n  constructor(sessionCookie, rememberMeCookie) {\n    this.sessionCookie = sessionCookie;\n    this.rememberMeCookie = rememberMeCookie;\n    axios.defaults.headers.common['Content-Type'] = 'application/json';\n    axios.interceptors.response.use(response => response, this.handleAPIError);\n  }\n\n  getAuthHeader = () => {\n    const sessionData = getSession(this.sessionCookie);\n    if (Object.keys(sessionData).length) {\n      if (sessionData.token)\n        return { Authorization: `Token ${sessionData.token}` };\n      if (sessionData.tempSignupToken)\n        return { temporaryToken: sessionData.tempSignupToken };\n    }\n\n    return {};\n  };\n\n  _ajax = ({ method, url, data = {}, headers }) => {\n    const requestHeaders = { ...headers, ...this.getAuthHeader() };\n    return axios({ method, url, data, headers: requestHeaders })\n      .then(response => response)\n      .catch(error => error.response);\n  };\n\n  postData = (url, data, headers) =>\n    this._ajax({ method: 'post', url, data, headers });\n\n  getData = (url, data, headers) =>\n    this._ajax({ method: 'get', url, data, headers });\n\n  putData = (url, data) => this._ajax({ method: 'put', url, data });\n\n  deleteData = (url, data) => this._ajax({ method: 'delete', url, data });\n\n  patchData = (url, data) => this._ajax({ method: 'patch', url, data });\n\n  handleAPIError = error => {\n    if (error.response && error.response.status === 401) {\n      // logout user in this case\n      logout(this.sessionCookie, this.rememberMeCookie);\n    } else if (\n      error.response &&\n      error.response.status === 500 &&\n      !(error.response.data instanceof Object)\n    ) {\n      return { data: { error_code: 1500 } };\n    } else if (error.message === 'Network Error' && !navigator.onLine) {\n      // Handle internet connectivity error.\n      return { data: { error_code: 1530 } };\n    } else {\n      return Promise.reject(error);\n    }\n    return false;\n  };\n}\n\nexport default AxiosWrapper;\n"]},"metadata":{},"sourceType":"module"}