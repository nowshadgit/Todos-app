{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Todo/frontend/src/components/AddEditTodoForm/AddEditTodoForm.jsx\";\nimport React from 'react';\nimport { InputGroup, FormControl, FormGroup, FormLabel } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport DisplayErrors from '../DisplayErrors';\nimport { SUBMIT } from '../../utils/constants';\nimport { isValidData } from '../../utils/common';\nimport CustomButton from '../CustomButton/CustomButton';\n\nconst AddEditTodoForm = props => {\n  return React.createElement(\"div\", {\n    className: \"card-text text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(DisplayErrors, {\n    errors: props.formErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col col-6 ml-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"Name\",\n    id: props.qrCodesCountId,\n    value: props.qrCodesCountValue,\n    name: props.qrCodesCountId,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"row mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col col-6 ml-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" Description \"), React.createElement(InputGroup, {\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    type: \"number\",\n    id: props.qrCodesCountId,\n    value: props.qrCodesCountValue,\n    name: props.qrCodesCountId,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })))))), React.createElement(CustomButton, {\n    disabled: props.disabled,\n    isLoading: props.inProgress,\n    submitFunction: props.handleSubmit,\n    id: \"generateQRCodes\",\n    className: \"btn onboarding-btn float-right\",\n    text: SUBMIT,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nAddEditTodoForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object,\n  disabled: PropTypes.bool.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  todoTitleId: PropTypes.string.isRequired,\n  todoDescription: PropTypes.string.isRequired,\n  todoTitleValue: PropTypes.string.isRequired,\n  todoDescriptionValue: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\nAddEditTodoForm.defaultProps = {\n  formErrors: {}\n};\nexport default AddEditTodoForm;","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/components/AddEditTodoForm/AddEditTodoForm.jsx"],"names":["React","InputGroup","FormControl","FormGroup","FormLabel","PropTypes","DisplayErrors","SUBMIT","isValidData","CustomButton","AddEditTodoForm","props","formErrors","qrCodesCountId","qrCodesCountValue","handleChange","disabled","inProgress","handleSubmit","propTypes","func","isRequired","object","bool","todoTitleId","string","todoDescription","todoTitleValue","todoDescriptionValue","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { InputGroup, FormControl, FormGroup, FormLabel } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport DisplayErrors from '../DisplayErrors';\nimport { SUBMIT } from '../../utils/constants';\nimport { isValidData } from '../../utils/common';\nimport CustomButton from '../CustomButton/CustomButton';\n\nconst AddEditTodoForm = props => {\n  return (\n    <div className=\"card-text text-left\">\n      <div className=\"card p-3\">\n        <form autoComplete=\"off\">\n          <DisplayErrors errors={props.formErrors} />\n          <div className=\"row mb-4\">\n            <div className=\"col col-6 ml-0\">\n              <InputGroup size=\"sm\">\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  id={props.qrCodesCountId}\n                  value={props.qrCodesCountValue}\n                  name={props.qrCodesCountId}\n                  onChange={props.handleChange}\n                />\n              </InputGroup>\n            </div>\n          </div>\n          <div className=\"row mb-4\">\n            <div className=\"col col-6 ml-0\">\n              <FormLabel> Description </FormLabel>\n              <InputGroup size=\"sm\">\n                <FormControl\n                  type=\"number\"\n                  id={props.qrCodesCountId}\n                  value={props.qrCodesCountValue}\n                  name={props.qrCodesCountId}\n                  onChange={props.handleChange}\n                />\n              </InputGroup>\n            </div>\n          </div>\n        </form>\n      </div>\n      <CustomButton\n        disabled={props.disabled}\n        isLoading={props.inProgress}\n        submitFunction={props.handleSubmit}\n        id=\"generateQRCodes\"\n        className=\"btn onboarding-btn float-right\"\n        text={SUBMIT}\n        type=\"submit\"\n      />\n    </div>\n  );\n};\n\nAddEditTodoForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object,\n  disabled: PropTypes.bool.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  todoTitleId: PropTypes.string.isRequired,\n  todoDescription: PropTypes.string.isRequired,\n  todoTitleValue: PropTypes.string.isRequired,\n  todoDescriptionValue: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nAddEditTodoForm.defaultProps = {\n  formErrors: {},\n};\nexport default AddEditTodoForm;\n"]},"metadata":{},"sourceType":"module"}