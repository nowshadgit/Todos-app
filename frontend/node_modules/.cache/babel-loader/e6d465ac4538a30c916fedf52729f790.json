{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\nimport { PAGE, DATA_NOT_FOUND } from '../../utils/constants';\nimport PageLoader from '../../components/PageLoader/PageLoader';\nimport DataNotFound from '../../components/DataNotFound/DataNotFound';\nimport { getBodyComponenet } from '../../utils/utils';\nimport ACTIONS from '../../apiConfig/actions.constants';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page;\n    const types = pageConfig[page].actions.fetchList;\n    let data = {};\n    data = {\n      department: this.props.match.params.orgUnitId,\n      page\n    };\n    makeCall(types, data);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.url !== this.props.match.url) {\n      const _this$props2 = this.props,\n            makeCall = _this$props2.makeCall,\n            page = _this$props2.page;\n      const types = pageConfig[page].actions.fetchList;\n      let data = {};\n      data = {\n        department: this.props.match.params.orgUnitId,\n        page\n      };\n      makeCall(types, data);\n    }\n  }\n\n  componentWillMount() {\n    this.props.makeCall(ACTIONS.LIST.RESET_STATE);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          page = _this$props3.page,\n          dataCard = _this$props3.dataCard,\n          title = _this$props3.title,\n          inProgress = _this$props3.inProgress;\n    const _pageConfig$page = pageConfig[page],\n          headerActions = _pageConfig$page.headerActions,\n          bodyHandler = _pageConfig$page.bodyHandler,\n          redirect = _pageConfig$page.redirect;\n    const pageTitle = page === PAGE.ORG_UNITS_DETAILS ? title || pageConfig[page].pageTitle : pageConfig[page].pageTitle;\n    const isDataFound = dataCard && dataCard instanceof Array && dataCard.length > 0;\n    const dataCardComponent = React.createElement(DataCards, Object.assign({}, this.props, {\n      data: dataCard,\n      actions: bodyHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      id: \"list-of-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(PageLoader, {\n      inProgress: inProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(PageHeader, Object.assign({}, this.props, {\n      title: pageTitle,\n      actions: headerActions,\n      redirect: redirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), getBodyComponenet(dataCardComponent, isDataFound, DATA_NOT_FOUND[page]));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  dataCard: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  makeCall: PropTypes.func.isRequired,\n  match: PropTypes.any.isRequired,\n  // eslint-disable-next-line react/require-default-props\n  title: PropTypes.string,\n  inProgress: PropTypes.bool.isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const page = props.page;\n  const respectedStore = pageConfig[page].store.storedList;\n  const formateFunction = pageConfig[page].formateFunc;\n  return {\n    dataCard: formateFunction(state.listReducerStore[respectedStore]),\n    title: state.listReducerStore.title,\n    inProgress: state.listReducerStore.inProgress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","DataCards","PAGE","DATA_NOT_FOUND","PageLoader","DataNotFound","getBodyComponenet","ACTIONS","ListPage","Component","componentDidMount","props","makeCall","page","types","actions","fetchList","data","department","match","params","orgUnitId","componentDidUpdate","prevProps","url","componentWillMount","LIST","RESET_STATE","render","dataCard","title","inProgress","headerActions","bodyHandler","redirect","pageTitle","ORG_UNITS_DETAILS","isDataFound","Array","length","dataCardComponent","propTypes","string","isRequired","oneOfType","array","object","func","any","bool","defaultProps","mapStateToProps","state","respectedStore","store","storedList","formateFunction","formateFunc","listReducerStore","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\nimport { PAGE, DATA_NOT_FOUND } from '../../utils/constants';\nimport PageLoader from '../../components/PageLoader/PageLoader';\nimport DataNotFound from '../../components/DataNotFound/DataNotFound';\nimport { getBodyComponenet } from '../../utils/utils';\nimport ACTIONS from '../../apiConfig/actions.constants';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const { makeCall, page } = this.props;\n    const types = pageConfig[page].actions.fetchList;\n    let data = {};\n    data = { department: this.props.match.params.orgUnitId, page };\n    makeCall(types, data);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.url !== this.props.match.url) {\n      const { makeCall, page } = this.props;\n      const types = pageConfig[page].actions.fetchList;\n      let data = {};\n      data = { department: this.props.match.params.orgUnitId, page };\n      makeCall(types, data);\n    }\n  }\n\n  componentWillMount(){\n    this.props.makeCall(ACTIONS.LIST.RESET_STATE);\n  }\n\n  render() {\n    const { page, dataCard, title, inProgress } = this.props;\n    const { headerActions, bodyHandler, redirect } = pageConfig[page];\n\n    const pageTitle =\n      page === PAGE.ORG_UNITS_DETAILS\n        ? title || pageConfig[page].pageTitle\n        : pageConfig[page].pageTitle;\n\n    const isDataFound =\n      dataCard && dataCard instanceof Array && dataCard.length > 0;\n    const dataCardComponent = (\n      <DataCards {...this.props} data={dataCard} actions={bodyHandler} />\n    );\n    return (\n      <div className=\"list-page\" id=\"list-of-data\">\n        <PageLoader inProgress={inProgress} />\n        <PageHeader\n          {...this.props}\n          title={pageTitle}\n          actions={headerActions}\n          redirect={redirect}\n        />\n        {getBodyComponenet(\n          dataCardComponent,\n          isDataFound,\n          DATA_NOT_FOUND[page]\n        )}\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  dataCard: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  makeCall: PropTypes.func.isRequired,\n  match: PropTypes.any.isRequired,\n  // eslint-disable-next-line react/require-default-props\n  title: PropTypes.string,\n  inProgress: PropTypes.bool.isRequired\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = (state, props) => {\n  const { page } = props;\n  const respectedStore = pageConfig[page].store.storedList;\n  const formateFunction = pageConfig[page].formateFunc;\n\n  return {\n    dataCard: formateFunction(state.listReducerStore[respectedStore]),\n    title: state.listReducerStore.title,\n    inProgress: state.listReducerStore.inProgress\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}