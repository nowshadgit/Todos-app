{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail, getErrorResMsg } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate, getOrgUnitIds, getNormalId, getSelectedRolesFormate } from '../../utils/common';\nimport { ROLES, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport PageLoader from '../../components/PageLoader/PageLoader';\n\nclass AddEditUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.FIRST_NAME_FIELD_ID = 'aeu-fname';\n    this.LAST_NAME_FIELD_ID = 'aeu-lname';\n    this.EMAIL_FIELD_ID = 'aeu-email';\n    this.ORG_UNITS_FIELD_ID = 'select-org-units';\n    this.USER_ROLES_ID = 'user-roles';\n    this.PRE_ORG_UNITS = 'selected-org-units';\n\n    this.validateForm = () => {\n      const _checkEmail = checkEmail(this.state[this.EMAIL_FIELD_ID], 'Email'),\n            _checkEmail2 = _slicedToArray(_checkEmail, 2),\n            emailValidity = _checkEmail2[0],\n            emailErrors = _checkEmail2[1];\n\n      const formValidity = emailValidity;\n\n      const formErrors = _objectSpread({}, emailErrors);\n\n      this.setState({\n        formValidity,\n        formErrors\n      });\n      return formValidity;\n    };\n\n    this.enableSubmit = (email, firstName, lastName, orgUnits, userRoles) => {\n      const disabled = !(email.length > 0 && firstName.length > 0 && lastName.length > 0 && orgUnits.length > 0 && userRoles.length > 0);\n\n      if (this.props.errorCode) {\n        const type = ACTIONS.USERS.RESET_STATE;\n        this.props.resetState(type);\n        this.setState({\n          errorCode: ''\n        });\n      }\n\n      this.setState({\n        disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.ORG_UNITS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.handleOrgUnit = (currentNode, selectedNodes) => {\n      this.setState({\n        [this.ORG_UNITS_FIELD_ID]: getOrgUnitIds(selectedNodes),\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.ORG_UNITS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.handleRoles = event => {\n      this.setState({\n        [this.USER_ROLES_ID]: event || [],\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.EMAIL_FIELD_ID], this.state[this.FIRST_NAME_FIELD_ID], this.state[this.LAST_NAME_FIELD_ID], this.state[this.ORG_UNITS_FIELD_ID], this.state[this.USER_ROLES_ID]));\n    };\n\n    this.getUserRoleIds = userRoles => {\n      const userRolesIds = userRoles.map(role => {\n        return role.value;\n      });\n      return userRolesIds;\n    };\n\n    this.getRolesFormate = () => {\n      let id = 0;\n      const userRoles = Object.values(ROLES).map(role => {\n        id += 1;\n        return {\n          value: id,\n          label: role\n        };\n      });\n      return userRoles;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.validateForm()) {\n        const data = {\n          email: this.state[this.EMAIL_FIELD_ID],\n          first_name: this.state[this.FIRST_NAME_FIELD_ID],\n          last_name: this.state[this.LAST_NAME_FIELD_ID],\n          org_units: this.state[this.ORG_UNITS_FIELD_ID],\n          userRoles: this.getUserRoleIds(this.state[this.USER_ROLES_ID])\n        };\n        const type = pageConfig[this.props.page].actions.postData;\n        this.props.submit(type, {\n          data,\n          props: _objectSpread({}, this.props)\n        });\n      }\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.ORG_UNITS_FIELD_ID]: [],\n      [this.USER_ROLES_ID]: [],\n      [this.PRE_ORG_UNITS]: [],\n      errorCode: '',\n      disabled: true,\n      orgUnitMode: 'multiSelect',\n      firstRender: true\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          page = _this$props.page,\n          getUserData = _this$props.getUserData,\n          match = _this$props.match;\n    const utype = pageConfig[page].actions.fetchUser;\n\n    if (utype) {\n      const params = match.params;\n      getUserData(utype, _objectSpread({}, params, {\n        page\n      }));\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const errorCode = nextProps.errorCode;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_USER);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    if (nextProps.page === PAGE.UPDATE_USER && prevState.firstRender && nextProps.userData && Object.values(nextProps.userData).length > 0) {\n      const _nextProps$userData = nextProps.userData,\n            email = _nextProps$userData.email,\n            firstName = _nextProps$userData.first_name,\n            lastName = _nextProps$userData.last_name,\n            orgUnits = _nextProps$userData.org_units,\n            groups = _nextProps$userData.groups;\n      return {\n        'aeu-fname': firstName,\n        'aeu-lname': lastName,\n        'aeu-email': email,\n        'selected-org-units': orgUnits,\n        'select-org-units': getNormalId(orgUnits),\n        'user-roles': getSelectedRolesFormate(groups),\n        firstRender: false\n      };\n    }\n\n    return prevState;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          page = _this$props2.page,\n          inProgress = _this$props2.inProgress;\n    const pageTitle = pageConfig[page].pageTitle;\n    const showPageLoader = inProgress && this.state.disabled && page === PAGE.UPDATE_USER;\n    console.log('Ids:', this.state[this.ORG_UNITS_FIELD_ID]);\n    return React.createElement(\"div\", {\n      className: \"add-edit-user\",\n      id: \"add-edit-user-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(PageLoader, {\n      inProgress: showPageLoader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(AddEditUserForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleOrgUnit: this.handleOrgUnit,\n      firstNameFieldId: this.FIRST_NAME_FIELD_ID,\n      lastNameFieldId: this.LAST_NAME_FIELD_ID,\n      emailFieldId: this.EMAIL_FIELD_ID,\n      firstNameFieldValue: this.state[this.FIRST_NAME_FIELD_ID],\n      lastNameFieldValue: this.state[this.LAST_NAME_FIELD_ID],\n      emailFieldValue: this.state[this.EMAIL_FIELD_ID],\n      handleChangeRoles: this.handleRoles,\n      userRolesId: this.USER_ROLES_ID,\n      userRoleValues: this.getRolesFormate(),\n      formErrors: this.state.formErrors,\n      disabled: this.state.disabled,\n      page: page,\n      mode: this.state.orgUnitMode,\n      selectedOrgUnits: this.state[this.PRE_ORG_UNITS],\n      inProgress: inProgress,\n      existedValues: this.state[this.USER_ROLES_ID],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  match: PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  resetState: PropTypes.func.isRequired,\n  userData: PropTypes.array.isRequired,\n  inProgress: PropTypes.bool.isRequired\n};\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditUserReducerStore.errorCode,\n  userData: state.DetailsReducerStore.data,\n  inProgress: state.addEditUserReducerStore.inProgress || state.addEditUserReducerStore.inProgress\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditUser));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.jsx"],"names":["React","connect","withRouter","PropTypes","AddEditUserForm","checkEmail","getErrorResMsg","PageHeader","pageConfig","getActionsFormate","getOrgUnitIds","getNormalId","getSelectedRolesFormate","ROLES","PAGE","ACTIONS","PageLoader","AddEditUser","Component","constructor","props","FIRST_NAME_FIELD_ID","LAST_NAME_FIELD_ID","EMAIL_FIELD_ID","ORG_UNITS_FIELD_ID","USER_ROLES_ID","PRE_ORG_UNITS","validateForm","state","emailValidity","emailErrors","formValidity","formErrors","setState","enableSubmit","email","firstName","lastName","orgUnits","userRoles","disabled","length","errorCode","type","USERS","RESET_STATE","resetState","handleChange","event","target","id","value","handleOrgUnit","currentNode","selectedNodes","handleRoles","getUserRoleIds","userRolesIds","map","role","getRolesFormate","Object","values","label","handleSubmit","preventDefault","data","first_name","last_name","org_units","page","actions","postData","submit","orgUnitMode","firstRender","componentDidMount","getUserData","match","utype","fetchUser","params","getDerivedStateFromProps","nextProps","prevState","errMsg","ADD_USER","UPDATE_USER","userData","groups","render","inProgress","pageTitle","showPageLoader","console","log","propTypes","string","isRequired","object","func","oneOfType","number","array","bool","defaultProps","mapStateToProps","addEditUserReducerStore","DetailsReducerStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddEditUserForm from '../../components/AddEditUserForm/AddEditUserForm';\nimport { checkEmail, getErrorResMsg } from '../../utils/formValidations';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport {\n  getActionsFormate,\n  getOrgUnitIds,\n  getNormalId,\n  getSelectedRolesFormate\n} from '../../utils/common';\nimport { ROLES, PAGE } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport PageLoader from '../../components/PageLoader/PageLoader';\n\nclass AddEditUser extends React.Component {\n  FIRST_NAME_FIELD_ID = 'aeu-fname';\n\n  LAST_NAME_FIELD_ID = 'aeu-lname';\n\n  EMAIL_FIELD_ID = 'aeu-email';\n\n  ORG_UNITS_FIELD_ID = 'select-org-units';\n\n  USER_ROLES_ID = 'user-roles';\n\n  PRE_ORG_UNITS = 'selected-org-units';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.FIRST_NAME_FIELD_ID]: '',\n      [this.LAST_NAME_FIELD_ID]: '',\n      [this.EMAIL_FIELD_ID]: '',\n      [this.ORG_UNITS_FIELD_ID]: [],\n      [this.USER_ROLES_ID]: [],\n      [this.PRE_ORG_UNITS]: [],\n      errorCode: '',\n      disabled: true,\n      orgUnitMode: 'multiSelect',\n      firstRender: true\n    };\n  }\n\n  componentDidMount() {\n    const { page, getUserData, match } = this.props;\n    const utype = pageConfig[page].actions.fetchUser;\n    if (utype) {\n      const { params } = match;\n      getUserData(utype, { ...params, page });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { errorCode } = nextProps;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_USER);\n      return { formErrors: errMsg, errorCode };\n    }\n\n    if (\n      nextProps.page === PAGE.UPDATE_USER &&\n      prevState.firstRender &&\n      nextProps.userData &&\n      Object.values(nextProps.userData).length > 0\n    ) {\n      const {\n        email,\n        first_name: firstName,\n        last_name: lastName,\n        org_units: orgUnits,\n        groups\n      } = nextProps.userData;\n      return {\n        'aeu-fname': firstName,\n        'aeu-lname': lastName,\n        'aeu-email': email,\n        'selected-org-units': orgUnits,\n        'select-org-units': getNormalId(orgUnits),\n        'user-roles': getSelectedRolesFormate(groups),\n        firstRender: false\n      };\n    }\n\n    return prevState;\n  }\n\n  validateForm = () => {\n    const [emailValidity, emailErrors] = checkEmail(\n      this.state[this.EMAIL_FIELD_ID],\n      'Email'\n    );\n    const formValidity = emailValidity;\n    const formErrors = { ...emailErrors };\n\n    this.setState({ formValidity, formErrors });\n\n    return formValidity;\n  };\n\n  enableSubmit = (email, firstName, lastName, orgUnits, userRoles) => {\n    const disabled = !(\n      email.length > 0 &&\n      firstName.length > 0 &&\n      lastName.length > 0 &&\n      orgUnits.length > 0 &&\n      userRoles.length > 0\n    );\n\n    if (this.props.errorCode) {\n      const type = ACTIONS.USERS.RESET_STATE;\n      this.props.resetState(type);\n      this.setState({ errorCode: '' });\n    }\n    this.setState({ disabled });\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.ORG_UNITS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  handleOrgUnit = (currentNode, selectedNodes) => {\n    this.setState(\n      {\n        [this.ORG_UNITS_FIELD_ID]: getOrgUnitIds(selectedNodes),\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.ORG_UNITS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  handleRoles = event => {\n    this.setState(\n      {\n        [this.USER_ROLES_ID]: event || [],\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.FIRST_NAME_FIELD_ID],\n          this.state[this.LAST_NAME_FIELD_ID],\n          this.state[this.ORG_UNITS_FIELD_ID],\n          this.state[this.USER_ROLES_ID]\n        )\n    );\n  };\n\n  getUserRoleIds = userRoles => {\n    const userRolesIds = userRoles.map(role => {\n      return role.value;\n    });\n    return userRolesIds;\n  };\n\n  getRolesFormate = () => {\n    let id = 0;\n    const userRoles = Object.values(ROLES).map(role => {\n      id += 1;\n      return { value: id, label: role };\n    });\n    return userRoles;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.validateForm()) {\n      const data = {\n        email: this.state[this.EMAIL_FIELD_ID],\n        first_name: this.state[this.FIRST_NAME_FIELD_ID],\n        last_name: this.state[this.LAST_NAME_FIELD_ID],\n        org_units: this.state[this.ORG_UNITS_FIELD_ID],\n        userRoles: this.getUserRoleIds(this.state[this.USER_ROLES_ID])\n      };\n      const type = pageConfig[this.props.page].actions.postData;\n      this.props.submit(type, { data, props: { ...this.props } });\n    }\n  };\n\n  render() {\n    const { page, inProgress } = this.props;\n    const { pageTitle } = pageConfig[page];\n    const showPageLoader =\n      inProgress && this.state.disabled && page === PAGE.UPDATE_USER;\n\n    console.log('Ids:', this.state[this.ORG_UNITS_FIELD_ID]);\n\n    return (\n      <div className=\"add-edit-user\" id=\"add-edit-user-page\">\n        <PageLoader inProgress={showPageLoader} />\n        <PageHeader title={pageTitle} />\n        <AddEditUserForm\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          handleOrgUnit={this.handleOrgUnit}\n          firstNameFieldId={this.FIRST_NAME_FIELD_ID}\n          lastNameFieldId={this.LAST_NAME_FIELD_ID}\n          emailFieldId={this.EMAIL_FIELD_ID}\n          firstNameFieldValue={this.state[this.FIRST_NAME_FIELD_ID]}\n          lastNameFieldValue={this.state[this.LAST_NAME_FIELD_ID]}\n          emailFieldValue={this.state[this.EMAIL_FIELD_ID]}\n          handleChangeRoles={this.handleRoles}\n          userRolesId={this.USER_ROLES_ID}\n          userRoleValues={this.getRolesFormate()}\n          formErrors={this.state.formErrors}\n          disabled={this.state.disabled}\n          page={page}\n          mode={this.state.orgUnitMode}\n          selectedOrgUnits={this.state[this.PRE_ORG_UNITS]}\n          inProgress={inProgress}\n          existedValues={this.state[this.USER_ROLES_ID]}\n        />\n      </div>\n    );\n  }\n}\n\nAddEditUser.propTypes = {\n  page: PropTypes.string.isRequired,\n  match: PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  resetState: PropTypes.func.isRequired,\n  userData: PropTypes.array.isRequired,\n  inProgress: PropTypes.bool.isRequired\n};\n\nAddEditUser.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditUserReducerStore.errorCode,\n  userData: state.DetailsReducerStore.data,\n  inProgress:\n    state.addEditUserReducerStore.inProgress ||\n    state.addEditUserReducerStore.inProgress\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    getUserData: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddEditUser)\n);\n"]},"metadata":{},"sourceType":"module"}