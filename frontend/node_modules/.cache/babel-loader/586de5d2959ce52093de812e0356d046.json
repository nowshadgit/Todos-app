{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditAssetAttributes/AddEditAssetAttributes.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { getErrorResMsg } from '../../utils/formValidations';\nimport { PAGE } from '../../utils/constants';\nimport AddEditAttributesForm from '../../components/AddEditAttributesForm/AddEditAttributesForm';\n\nclass AddEditAssetAttributes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ASSET_ATTRIBUTE_FIELD_ID = 'asset-attribute';\n\n    this.handleAttributeChange = (event, id) => {\n      event.persist();\n      this.setState(prevState => {\n        const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n\n        for (let i = 0; i < attributes.length; i += 1) {\n          if (attributes[i].id === id) {\n            attributes[i].name = event.target.value;\n          }\n        }\n\n        return {\n          [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes\n        };\n      });\n    };\n\n    this.handleValueChange = (event, aid, vid) => {\n      event.persist();\n      this.setState(prevState => {\n        const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n\n        for (let i = 0; i < attributes.length; i += 1) {\n          if (attributes[i].id === aid) {\n            for (let j = 0; j < attributes[i].values.length; j += 1) {\n              if (attributes[i].values[j].id === vid) {\n                attributes[i].values[j].name = event.target.value;\n              }\n            }\n          }\n        }\n\n        return {\n          [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes\n        };\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let error = false;\n      const attributes = this.state[this.ASSET_ATTRIBUTE_FIELD_ID];\n      let data = {\n        attributes: []\n      };\n\n      for (let i = 0; i < attributes.length; i += 1) {\n        if (attributes[i].name.length === 0) {\n          error = true;\n          attributes[i].errors = {\n            attributes: 'Name must not be empty'\n          };\n          break;\n        } else {\n          if (this.state.edit) {\n            data = {\n              name: '',\n              values: [],\n              new_values: []\n            };\n            data.name = attributes[i].name;\n          } else {\n            data.attributes.push({\n              name: attributes[i].name,\n              values: []\n            });\n          }\n\n          attributes[i].errors = {};\n        }\n\n        for (let j = 0; j < attributes[i].values.length; j += 1) {\n          if (attributes[i].values[j].name.length === 0) {\n            error = true;\n            attributes[i].errors = {\n              values: 'Values must not be empty'\n            };\n            break;\n          } else {\n            if (this.state.edit) {\n              if (j < attributes[i].initial) {\n                data.values.push({\n                  id: attributes[i].values[j].id,\n                  name: attributes[i].values[j].name\n                });\n              } else {\n                data.new_values.push({\n                  name: attributes[i].values[j].name\n                });\n              }\n            } else {\n              data.attributes[i].values.push({\n                name: attributes[i].values[j].name\n              });\n            }\n\n            attributes[i].errors = {};\n          }\n        }\n      }\n\n      if (error) {\n        this.setState({\n          [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes\n        });\n      } else {\n        const type = pageConfig[this.props.page].actions.postData;\n        this.props.submit(type, {\n          data,\n          props: _objectSpread({}, this.props)\n        });\n      }\n    };\n\n    this.state = {\n      [this.ASSET_ATTRIBUTE_FIELD_ID]: [{\n        name: '',\n        id: 0,\n        valueId: 0,\n        initial: 0,\n        errors: {},\n        values: [{\n          name: '',\n          id: 0\n        }]\n      }],\n      id: 0,\n      errorCode: '',\n      edit: false,\n      firstRender: true\n    };\n    this.addValueText = this.addValueText.bind(this);\n    this.addAttributeCard = this.addAttributeCard.bind(this);\n    this.deleteAttributeCard = this.deleteAttributeCard.bind(this);\n    this.deleteValueText = this.deleteValueText.bind(this);\n    this.handleAttributeChange = this.handleAttributeChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page,\n          match = _this$props.match;\n    const types = pageConfig[page].actions.fetchDetails;\n    const params = match.params;\n    makeCall(types, _objectSpread({}, params, {\n      page\n    }));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const errorCode = nextProps.errorCode;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_ASSET_ATTRIBUTES);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    if (nextProps.page === PAGE.UPDATE_ASSET_ATTRIBUTES && prevState.firstRender && nextProps.details && Object.values(nextProps.details).length > 0) {\n      const attributeDetails = nextProps.details;\n      const id = attributeDetails.values.reduce((max, value) => value.id > max ? value.id : max, attributeDetails.values[0].id);\n      return {\n        'asset-attribute': [{\n          name: attributeDetails.name,\n          id: 0,\n          valueId: id,\n          errors: {},\n          values: attributeDetails.values,\n          initial: attributeDetails.values.length\n        }],\n        edit: true,\n        firstRender: false\n      };\n    }\n\n    return prevState;\n  }\n\n  addValueText(Aid, ref) {\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n\n      for (let i = 0; i < attributes.length; i += 1) {\n        if (attributes[i].id === Aid) {\n          attributes[i].values.push({\n            name: '',\n            id: attributes[i].valueId + 1\n          });\n          attributes[i].valueId += 1;\n        }\n      }\n\n      return {\n        [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes\n      };\n    });\n    ref.current.scrollIntoView(true);\n  }\n\n  addAttributeCard(ref) {\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n      const id = prevState.id;\n      attributes.push({\n        name: '',\n        id: id + 1,\n        valueId: 0,\n        errors: {},\n        values: [{\n          name: '',\n          id: 0\n        }]\n      });\n      return {\n        [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes,\n        id: id + 1\n      };\n    });\n    ref.current.scrollIntoView(true);\n  }\n\n  deleteAttributeCard(ref, Aid) {\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n\n      for (let i = 0; i < attributes.length; i += 1) {\n        if (attributes[i].id === Aid) {\n          attributes.splice(i, 1);\n        }\n      }\n\n      return {\n        [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes\n      };\n    });\n    ref.current.scrollIntoView(false);\n  }\n\n  deleteValueText(Aid, Vid, ref) {\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n\n      for (let i = 0; i < attributes.length; i += 1) {\n        if (attributes[i].id === Aid) {\n          for (let j = 0; j < attributes[i].values.length; j += 1) {\n            if (attributes[i].values[j].id === Vid) {\n              attributes[i].values.splice(j, 1);\n            }\n          }\n        }\n      }\n\n      return {\n        [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes\n      };\n    });\n    ref.current.scrollIntoView(false);\n  }\n\n  render() {\n    const page = this.props.page;\n    const pageTitle = pageConfig[page].pageTitle;\n    const mainref = React.createRef();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(AddEditAttributesForm, {\n      handleSubmit: this.handleSubmit,\n      handleAttributeChange: this.handleAttributeChange,\n      handleValueChange: this.handleValueChange,\n      addValueText: this.addValueText,\n      attributes: this.state[this.ASSET_ATTRIBUTE_FIELD_ID],\n      addAttributeCard: this.addAttributeCard,\n      deleteAttributeCard: this.deleteAttributeCard,\n      deleteValueText: this.deleteValueText,\n      id: this.state.id,\n      mainref: mainref,\n      details: this.props.details,\n      edit: this.state.edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAddEditAssetAttributes.propTypes = {\n  page: PropTypes.string.isRequired,\n  submit: PropTypes.func.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  details: PropTypes.object\n};\nAddEditAssetAttributes.defaultProps = {\n  details: {}\n};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditAssetTypes.errorCode,\n  details: state.DetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditAssetAttributes));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditAssetAttributes/AddEditAssetAttributes.jsx"],"names":["React","connect","withRouter","PropTypes","PageHeader","pageConfig","getActionsFormate","getErrorResMsg","PAGE","AddEditAttributesForm","AddEditAssetAttributes","Component","constructor","props","ASSET_ATTRIBUTE_FIELD_ID","handleAttributeChange","event","id","persist","setState","prevState","attributes","i","length","name","target","value","handleValueChange","aid","vid","j","values","handleSubmit","preventDefault","error","state","data","errors","edit","new_values","push","initial","type","page","actions","postData","submit","valueId","errorCode","firstRender","addValueText","bind","addAttributeCard","deleteAttributeCard","deleteValueText","componentDidMount","makeCall","match","types","fetchDetails","params","getDerivedStateFromProps","nextProps","errMsg","ADD_ASSET_ATTRIBUTES","formErrors","UPDATE_ASSET_ATTRIBUTES","details","Object","attributeDetails","reduce","max","Aid","ref","current","scrollIntoView","splice","Vid","render","pageTitle","mainref","createRef","propTypes","string","isRequired","func","object","oneOfType","number","defaultProps","mapStateToProps","addEditAssetTypes","DetailsReducerStore","mapDispatchToProps","dispatch","resetState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport { getErrorResMsg } from '../../utils/formValidations';\nimport { PAGE } from '../../utils/constants';\nimport AddEditAttributesForm from '../../components/AddEditAttributesForm/AddEditAttributesForm';\n\nclass AddEditAssetAttributes extends React.Component {\n  ASSET_ATTRIBUTE_FIELD_ID = 'asset-attribute';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      [this.ASSET_ATTRIBUTE_FIELD_ID]: [\n        {\n          name: '',\n          id: 0,\n          valueId: 0,\n          initial: 0,\n          errors: {},\n          values: [{ name: '', id: 0 }]\n        }\n      ],\n      id: 0,\n      errorCode: '',\n      edit: false,\n      firstRender: true\n    };\n    this.addValueText = this.addValueText.bind(this);\n    this.addAttributeCard = this.addAttributeCard.bind(this);\n    this.deleteAttributeCard = this.deleteAttributeCard.bind(this);\n    this.deleteValueText = this.deleteValueText.bind(this);\n    this.handleAttributeChange = this.handleAttributeChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { makeCall, page, match } = this.props;\n    const types = pageConfig[page].actions.fetchDetails;\n    const { params } = match;\n    makeCall(types, { ...params, page });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { errorCode } = nextProps;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_ASSET_ATTRIBUTES);\n      return { formErrors: errMsg, errorCode };\n    }\n    if (\n      nextProps.page === PAGE.UPDATE_ASSET_ATTRIBUTES &&\n      prevState.firstRender &&\n      nextProps.details &&\n      Object.values(nextProps.details).length > 0\n    ) {\n      const attributeDetails = nextProps.details;\n      const id = attributeDetails.values.reduce(\n        (max, value) => (value.id > max ? value.id : max),\n        attributeDetails.values[0].id\n      );\n      return {\n        'asset-attribute': [\n          {\n            name: attributeDetails.name,\n            id: 0,\n            valueId: id,\n            errors: {},\n            values: attributeDetails.values,\n            initial: attributeDetails.values.length\n          }\n        ],\n        edit: true,\n        firstRender: false\n      };\n    }\n\n    return prevState;\n  }\n\n  handleAttributeChange = (event, id) => {\n    event.persist();\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n      for (let i = 0; i < attributes.length; i += 1) {\n        if (attributes[i].id === id) {\n          attributes[i].name = event.target.value;\n        }\n      }\n      return { [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes };\n    });\n  };\n\n  handleValueChange = (event, aid, vid) => {\n    event.persist();\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n      for (let i = 0; i < attributes.length; i += 1) {\n        if (attributes[i].id === aid) {\n          for (let j = 0; j < attributes[i].values.length; j += 1) {\n            if (attributes[i].values[j].id === vid) {\n              attributes[i].values[j].name = event.target.value;\n            }\n          }\n        }\n      }\n      return { [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes };\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let error = false;\n    const attributes = this.state[this.ASSET_ATTRIBUTE_FIELD_ID];\n    let data = { attributes: [] };\n    for (let i = 0; i < attributes.length; i += 1) {\n      if (attributes[i].name.length === 0) {\n        error = true;\n        attributes[i].errors = { attributes: 'Name must not be empty' };\n        break;\n      } else {\n        if (this.state.edit) {\n          data = { name: '', values: [], new_values: [] };\n          data.name = attributes[i].name;\n        } else {\n          data.attributes.push({ name: attributes[i].name, values: [] });\n        }\n        attributes[i].errors = {};\n      }\n      for (let j = 0; j < attributes[i].values.length; j += 1) {\n        if (attributes[i].values[j].name.length === 0) {\n          error = true;\n          attributes[i].errors = { values: 'Values must not be empty' };\n          break;\n        } else {\n          if (this.state.edit) {\n            if (j < attributes[i].initial) {\n              data.values.push({\n                id: attributes[i].values[j].id,\n                name: attributes[i].values[j].name\n              });\n            } else {\n              data.new_values.push({\n                name: attributes[i].values[j].name\n              });\n            }\n          } else {\n            data.attributes[i].values.push({\n              name: attributes[i].values[j].name\n            });\n          }\n          attributes[i].errors = {};\n        }\n      }\n    }\n    if (error) {\n      this.setState({\n        [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes\n      });\n    } else {\n      const type = pageConfig[this.props.page].actions.postData;\n      this.props.submit(type, { data, props: { ...this.props } });\n    }\n  };\n\n  addValueText(Aid, ref) {\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n      for (let i = 0; i < attributes.length; i += 1) {\n        if (attributes[i].id === Aid) {\n          attributes[i].values.push({\n            name: '',\n            id: attributes[i].valueId + 1\n          });\n          attributes[i].valueId += 1;\n        }\n      }\n      return { [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes };\n    });\n    ref.current.scrollIntoView(true);\n  }\n\n  addAttributeCard(ref) {\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n      const { id } = prevState;\n      attributes.push({\n        name: '',\n        id: id + 1,\n        valueId: 0,\n        errors: {},\n        values: [{ name: '', id: 0 }]\n      });\n      return {\n        [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes,\n        id: id + 1\n      };\n    });\n    ref.current.scrollIntoView(true);\n  }\n\n  deleteAttributeCard(ref, Aid) {\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n      for (let i = 0; i < attributes.length; i += 1) {\n        if (attributes[i].id === Aid) {\n          attributes.splice(i, 1);\n        }\n      }\n      return { [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes };\n    });\n    ref.current.scrollIntoView(false);\n  }\n\n  deleteValueText(Aid, Vid, ref) {\n    this.setState(prevState => {\n      const attributes = prevState[this.ASSET_ATTRIBUTE_FIELD_ID];\n      for (let i = 0; i < attributes.length; i += 1) {\n        if (attributes[i].id === Aid) {\n          for (let j = 0; j < attributes[i].values.length; j += 1) {\n            if (attributes[i].values[j].id === Vid) {\n              attributes[i].values.splice(j, 1);\n            }\n          }\n        }\n      }\n      return { [this.ASSET_ATTRIBUTE_FIELD_ID]: attributes };\n    });\n    ref.current.scrollIntoView(false);\n  }\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle } = pageConfig[page];\n    const mainref = React.createRef();\n    return (\n      <div>\n        <PageHeader title={pageTitle} />\n        <AddEditAttributesForm\n          handleSubmit={this.handleSubmit}\n          handleAttributeChange={this.handleAttributeChange}\n          handleValueChange={this.handleValueChange}\n          addValueText={this.addValueText}\n          attributes={this.state[this.ASSET_ATTRIBUTE_FIELD_ID]}\n          addAttributeCard={this.addAttributeCard}\n          deleteAttributeCard={this.deleteAttributeCard}\n          deleteValueText={this.deleteValueText}\n          id={this.state.id}\n          mainref={mainref}\n          details={this.props.details}\n          edit={this.state.edit}\n        />\n      </div>\n    );\n  }\n}\n\nAddEditAssetAttributes.propTypes = {\n  page: PropTypes.string.isRequired,\n  submit: PropTypes.func.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  errorCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  details: PropTypes.object\n};\n\nAddEditAssetAttributes.defaultProps = {\n  details: {}\n};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditAssetTypes.errorCode,\n  details: state.DetailsReducerStore.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddEditAssetAttributes)\n);\n"]},"metadata":{},"sourceType":"module"}