{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\nimport { reverse } from 'named-urls';\n\nfunction* createUser(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.USER, action.data.data);\n\n    if (response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.USERS.LIST);\n      yield put({\n        type: ACTIONS.USERS.ADD_USER_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.ADD_USER_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.ADD_USER_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* updateUser(action) {\n  let response;\n\n  try {\n    const url = reverse(FOOTPRINTS_API.UPDATE_USER, _objectSpread({}, action.data.props.match.params));\n    response = yield call(window.axios.putData, FOOTPRINTS_API.USER, action.data.data);\n    console.log(\"Update dat\", action.data);\n\n    if (response.status === 201 || response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.UPDATE_USER_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.UPDATE_USER_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.UPDATE_USER_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getUserDepartments(action) {\n  let response;\n\n  try {\n    const URL = \"\".concat(FOOTPRINTS_API.ORG_UNITS);\n    response = yield call(window.axios.getData, URL);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_DEPARTMENTS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_DEPARTMENTS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.GET_USER_DEPARTMENTS_FAIL,\n      payload: e\n    });\n  }\n}\n\nexport { createUser, updateUser, getUserDepartments };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditUser/AddEditUser.saga.js"],"names":["call","put","ACTIONS","FOOTPRINTS_API","FOOTPRINTS_ROUTES","reverse","createUser","action","response","window","axios","postData","USER","data","status","props","history","push","USERS","LIST","type","ADD_USER_SUCCESS","payload","ADD_USER_FAIL","e","updateUser","url","UPDATE_USER","match","params","putData","console","log","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","getUserDepartments","URL","ORG_UNITS","getData","GET_USER_DEPARTMENTS_SUCCESS","GET_USER_DEPARTMENTS_FAIL"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { FOOTPRINTS_ROUTES } from '../../config';\nimport { reverse } from 'named-urls';\n\nfunction* createUser(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.USER,\n      action.data.data\n    );\n\n    if (response.status === 200) {\n      action.data.props.history.push(FOOTPRINTS_ROUTES.USERS.LIST);\n      yield put({\n        type: ACTIONS.USERS.ADD_USER_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.ADD_USER_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.ADD_USER_FAIL, payload: e });\n  }\n}\n\nfunction* updateUser(action) {\n  let response;\n  try {\n    const url = reverse(FOOTPRINTS_API.UPDATE_USER, {...action.data.props.match.params})\n    response = yield call(\n      window.axios.putData,\n      FOOTPRINTS_API.USER,\n      action.data.data\n    );\n    console.log(\"Update dat\", action.data);\n    \n    if (response.status === 201 || response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.UPDATE_USER_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.UPDATE_USER_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.UPDATE_USER_FAIL, payload: e });\n  }\n}\n\nfunction* getUserDepartments(action) {\n  let response;\n  try {\n    const URL = `${FOOTPRINTS_API.ORG_UNITS}`;\n    response = yield call(window.axios.getData, URL);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_DEPARTMENTS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_DEPARTMENTS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.GET_USER_DEPARTMENTS_FAIL, payload: e });\n  }\n}\nexport { createUser, updateUser, getUserDepartments };\n"]},"metadata":{},"sourceType":"module"}