{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditAssetAttributes/AddEditAssetAttributes.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { getErrorResMsg } from '../../utils/formValidations';\nimport { PAGE } from '../../utils/constants';\nimport AddEditAttributesForm from '../../components/AddEditAttributesForm/AddEditAttributesForm';\n\nclass AddEditAssetAttributes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ASSET_TYPE_FIELD_ID = 'asset-type';\n    this.COLOR_FIELD_ID = 'color-field';\n    this.ATTRIBUTE_FIELD_ID = 'attribute';\n    this.DAYS_FIELD_ID = 'days-to-process';\n    this.ORGANISATION_FIELD_ID = 'organization';\n\n    this.enableSubmit = (docType, color, attribute, days, organization) => {\n      const disabled = !(docType.length > 0 && color.length > 0 && attribute.length > 0 && days.length > 0 && organization.length > 0);\n\n      if (this.props.errorCode) {\n        const type = ACTIONS.ASSET_TYPES.RESET_STATE;\n        this.props.resetState(type);\n        this.setState({\n          errorCode: ''\n        });\n      }\n\n      this.setState({\n        disabled\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSubmit(this.state[this.ASSET_TYPE_FIELD_ID], this.state[this.COLOR_FIELD_ID], this.state[this.ATTRIBUTE_FIELD_ID], this.state[this.DAYS_FIELD_ID], this.state[this.ORGANISATION_FIELD_ID]));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const data = {\n        doc_type: this.state[this.ASSET_TYPE_FIELD_ID],\n        color: this.state[this.COLOR_FIELD_ID],\n        attribute: this.state[this.ATTRIBUTE_FIELD_ID],\n        days_to_process: this.state[this.COLOR_FIELD_ID],\n        organisation: this.state[this.ORGANISATION_FIELD_ID]\n      };\n      const type = pageConfig[this.props.page].actions.postData;\n      this.props.submit(type, {\n        data,\n        props: _objectSpread({}, this.props)\n      });\n    };\n\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.ASSET_TYPE_FIELD_ID]: '',\n      [this.COLOR_FIELD_ID]: '',\n      [this.ATTRIBUTE_FIELD_ID]: [],\n      [this.DAYS_FIELD_ID]: 0,\n      [this.ORGANISATION_FIELD_ID]: '',\n      errorCode: '',\n      disabled: true\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const errorCode = nextProps.errorCode;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_ASSET_TYPES);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    return prevState;\n  }\n\n  render() {\n    const page = this.props.page;\n    const pageTitle = pageConfig[page].pageTitle;\n    return React.createElement(\"div\", {\n      className: \"add-edit-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(AddEditAttributesForm, {\n      handleSubmit: this.handleSubmit,\n      formErrors: this.state.formErrors,\n      handleChange: this.handleChange,\n      disabled: this.state.disabled,\n      organizationFieldValue: this.state[this.ORGANISATION_FIELD_ID],\n      organizationFieldId: this.ORGANISATION_FIELD_ID,\n      assetTypeFieldId: this.ASSET_TYPE_FIELD_ID,\n      assetTypeFieldValue: this.state[this.ASSET_TYPE_FIELD_ID],\n      colorFieldId: this.COLOR_FIELD_ID,\n      colorFieldValue: this.state[this.COLOR_FIELD_ID],\n      attributeFieldId: this.ATTRIBUTE_FIELD_ID,\n      attributeFieldValue: this.state[this.ATTRIBUTE_FIELD_ID],\n      daysFieldId: this.DAYS_FIELD_ID,\n      daysFieldValue: this.state[this.DAYS_FIELD_ID],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAddEditAssetAttributes.propTypes = {\n  page: PropTypes.string.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.string.isRequired,\n  resetState: PropTypes.func.isRequired\n};\nAddEditAssetAttributes.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditAssetTypes.errorCode\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddEditAssetAttributes));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/AddEditAssetAttributes/AddEditAssetAttributes.jsx"],"names":["React","connect","withRouter","PropTypes","PageHeader","pageConfig","getActionsFormate","ACTIONS","getErrorResMsg","PAGE","AddEditAttributesForm","AddEditAssetAttributes","Component","constructor","props","ASSET_TYPE_FIELD_ID","COLOR_FIELD_ID","ATTRIBUTE_FIELD_ID","DAYS_FIELD_ID","ORGANISATION_FIELD_ID","enableSubmit","docType","color","attribute","days","organization","disabled","length","errorCode","type","ASSET_TYPES","RESET_STATE","resetState","setState","handleChange","event","target","id","value","formErrors","state","handleSubmit","preventDefault","data","doc_type","days_to_process","organisation","page","actions","postData","submit","formValidity","getDerivedStateFromProps","nextProps","prevState","errMsg","ADD_ASSET_TYPES","render","pageTitle","propTypes","string","isRequired","func","defaultProps","mapStateToProps","addEditAssetTypes","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport pageConfig from '../../utils/pageConfig';\nimport { getActionsFormate } from '../../utils/common';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { getErrorResMsg } from '../../utils/formValidations';\nimport { PAGE } from '../../utils/constants';\nimport AddEditAttributesForm from '../../components/AddEditAttributesForm/AddEditAttributesForm';\n\nclass AddEditAssetAttributes extends React.Component {\n  ASSET_TYPE_FIELD_ID = 'asset-type';\n\n  COLOR_FIELD_ID = 'color-field';\n\n  ATTRIBUTE_FIELD_ID = 'attribute';\n\n  DAYS_FIELD_ID = 'days-to-process';\n\n  ORGANISATION_FIELD_ID = 'organization';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formErrors: {},\n      formValidity: false,\n      [this.ASSET_TYPE_FIELD_ID]: '',\n      [this.COLOR_FIELD_ID]: '',\n      [this.ATTRIBUTE_FIELD_ID]: [],\n      [this.DAYS_FIELD_ID]: 0,\n      [this.ORGANISATION_FIELD_ID]: '',\n      errorCode: '',\n      disabled: true\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { errorCode } = nextProps;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.ADD_ASSET_TYPES);\n      return { formErrors: errMsg, errorCode };\n    }\n    return prevState;\n  }\n\n  enableSubmit = (docType, color, attribute, days, organization) => {\n    const disabled = !(\n      docType.length > 0 &&\n      color.length > 0 &&\n      attribute.length > 0 &&\n      days.length > 0 &&\n      organization.length > 0\n    );\n    if (this.props.errorCode) {\n      const type = ACTIONS.ASSET_TYPES.RESET_STATE;\n      this.props.resetState(type);\n      this.setState({ errorCode: '' });\n    }\n    this.setState({ disabled });\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      },\n      () =>\n        this.enableSubmit(\n          this.state[this.ASSET_TYPE_FIELD_ID],\n          this.state[this.COLOR_FIELD_ID],\n          this.state[this.ATTRIBUTE_FIELD_ID],\n          this.state[this.DAYS_FIELD_ID],\n          this.state[this.ORGANISATION_FIELD_ID]\n        )\n    );\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      doc_type: this.state[this.ASSET_TYPE_FIELD_ID],\n      color: this.state[this.COLOR_FIELD_ID],\n      attribute: this.state[this.ATTRIBUTE_FIELD_ID],\n      days_to_process: this.state[this.COLOR_FIELD_ID],\n      organisation: this.state[this.ORGANISATION_FIELD_ID]\n    };\n    const type = pageConfig[this.props.page].actions.postData;\n    this.props.submit(type, { data, props: { ...this.props } });\n  };\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle } = pageConfig[page];\n\n    return (\n      <div className=\"add-edit-user\">\n        <PageHeader title={pageTitle} />\n        <AddEditAttributesForm\n          handleSubmit={this.handleSubmit}\n          formErrors={this.state.formErrors}\n          handleChange={this.handleChange}\n          disabled={this.state.disabled}\n          organizationFieldValue={this.state[this.ORGANISATION_FIELD_ID]}\n          organizationFieldId={this.ORGANISATION_FIELD_ID}\n          assetTypeFieldId={this.ASSET_TYPE_FIELD_ID}\n          assetTypeFieldValue={this.state[this.ASSET_TYPE_FIELD_ID]}\n          colorFieldId={this.COLOR_FIELD_ID}\n          colorFieldValue={this.state[this.COLOR_FIELD_ID]}\n          attributeFieldId={this.ATTRIBUTE_FIELD_ID}\n          attributeFieldValue={this.state[this.ATTRIBUTE_FIELD_ID]}\n          daysFieldId={this.DAYS_FIELD_ID}\n          daysFieldValue={this.state[this.DAYS_FIELD_ID]}\n        />\n      </div>\n    );\n  }\n}\n\nAddEditAssetAttributes.propTypes = {\n  page: PropTypes.string.isRequired,\n  submit: PropTypes.func.isRequired,\n  errorCode: PropTypes.string.isRequired,\n  resetState: PropTypes.func.isRequired\n};\n\nAddEditAssetAttributes.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  errorCode: state.addEditAssetTypes.errorCode\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddEditAssetAttributes)\n);\n"]},"metadata":{},"sourceType":"module"}