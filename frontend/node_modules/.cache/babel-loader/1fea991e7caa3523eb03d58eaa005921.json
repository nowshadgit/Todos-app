{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Todo/frontend/src/components/SignUpForm/SignUpForm.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\nimport { faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport DisplayErrors from '../DisplayErrors';\nimport './SignUpForm.scss';\nimport { SIGNUP_BUTTON_TEXT } from '../../utils/constants';\nimport CustomButton from '../CustomButton/CustomButton';\n\nconst SignUpForm = props => {\n  return React.createElement(\"div\", {\n    className: \"signup-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"signup-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(DisplayErrors, {\n    errors: props.formErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faUnlockAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"Full name\",\n    id: props.nameFieldId,\n    value: props.nameFieldValue,\n    name: props.nameFieldId,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"email\",\n    placeholder: \"Email\",\n    id: props.emailFieldId,\n    value: props.emailValue,\n    name: props.emailFieldId,\n    onChange: props.handleChange,\n    onKeyDown: props.handleInvalidKeys,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faUnlockAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    type: \"password\",\n    placeholder: \"Password\",\n    id: props.passwordFieldId,\n    value: props.passwordValue,\n    name: props.passwordFieldId,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faUnlockAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    id: props.confirmPasswordField,\n    value: props.confirmPasswordValue,\n    name: props.confirmPasswordValue,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(CustomButton, {\n    disabled: props.disabled,\n    isLoading: props.inProgress,\n    submitFunction: props.handleSubmit,\n    id: \"signupSubmit\",\n    className: \"btn onboarding-btn\",\n    text: SIGNUP_BUTTON_TEXT,\n    type: \"submit\",\n    isBlock: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))));\n};\n\nSignUpForm.propTypes = {\n  formErrors: PropTypes.object.isRequired,\n  emailValue: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  emailFieldId: PropTypes.string.isRequired,\n  passwordValue: PropTypes.string.isRequired,\n  handleInvalidKeys: PropTypes.func.isRequired,\n  passwordFieldId: PropTypes.string.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  nameFieldId: PropTypes.string.isRequiredm,\n  confirmPasswordField: PropTypes.string.isRequired,\n  nameFieldValue: PropTypes.string.isRequired,\n  confirmPasswordValue: PropTypes.string.isRequired\n};\nexport default SignUpForm;","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/components/SignUpForm/SignUpForm.jsx"],"names":["React","PropTypes","faUser","faUnlockAlt","FontAwesomeIcon","InputGroup","FormControl","DisplayErrors","SIGNUP_BUTTON_TEXT","CustomButton","SignUpForm","props","handleSubmit","formErrors","nameFieldId","nameFieldValue","handleChange","emailFieldId","emailValue","handleInvalidKeys","passwordFieldId","passwordValue","confirmPasswordField","confirmPasswordValue","disabled","inProgress","propTypes","object","isRequired","string","func","bool","isRequiredm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\nimport { faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport DisplayErrors from '../DisplayErrors';\nimport './SignUpForm.scss';\nimport { SIGNUP_BUTTON_TEXT } from '../../utils/constants';\nimport CustomButton from '../CustomButton/CustomButton';\n\nconst SignUpForm = props => {\n  return (\n    <div className=\"signup-form\">\n      <form onSubmit={props.handleSubmit} autoComplete=\"off\">\n        <div className=\"signup-form\">\n          <DisplayErrors errors={props.formErrors} />\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>\n                <FontAwesomeIcon icon={faUnlockAlt} />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Full name\"\n              id={props.nameFieldId}\n              value={props.nameFieldValue}\n              name={props.nameFieldId}\n              onChange={props.handleChange}\n            />\n          </InputGroup>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              placeholder=\"Email\"\n              id={props.emailFieldId}\n              value={props.emailValue}\n              name={props.emailFieldId}\n              onChange={props.handleChange}\n              onKeyDown={props.handleInvalidKeys}\n            />\n          </InputGroup>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>\n                <FontAwesomeIcon icon={faUnlockAlt} />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              type=\"password\"\n              placeholder=\"Password\"\n              id={props.passwordFieldId}\n              value={props.passwordValue}\n              name={props.passwordFieldId}\n              onChange={props.handleChange}\n            />\n          </InputGroup>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>\n                <FontAwesomeIcon icon={faUnlockAlt} />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              id={props.confirmPasswordField}\n              value={props.confirmPasswordValue}\n              name={props.confirmPasswordValue}\n              onChange={props.handleChange}\n            />\n          </InputGroup>\n          <CustomButton\n            disabled={props.disabled}\n            isLoading={props.inProgress}\n            submitFunction={props.handleSubmit}\n            id=\"signupSubmit\"\n            className=\"btn onboarding-btn\"\n            text={SIGNUP_BUTTON_TEXT}\n            type=\"submit\"\n            isBlock\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nSignUpForm.propTypes = {\n  formErrors: PropTypes.object.isRequired,\n  emailValue: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  emailFieldId: PropTypes.string.isRequired,\n  passwordValue: PropTypes.string.isRequired,\n  handleInvalidKeys: PropTypes.func.isRequired,\n  passwordFieldId: PropTypes.string.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  nameFieldId: PropTypes.string.isRequiredm,\n  confirmPasswordField: PropTypes.string.isRequired,\n  nameFieldValue: PropTypes.string.isRequired,\n  confirmPasswordValue: PropTypes.string.isRequired,\n};\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}