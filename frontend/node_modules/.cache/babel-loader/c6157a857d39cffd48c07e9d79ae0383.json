{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx\";\n// import React from 'react';\n// import Tooltip from '@atlaskit/tooltip';\n// import Select, { components } from 'react-select';\n// import PropTypes from 'prop-types';\n// const Input = props => {\n//   if (props.isHidden) {\n//     return <components.Input {...props} />;\n//   }\n//   return (\n//     <div>\n//       <Tooltip content=\"Custom Input\" className=\"pl-0\">\n//         <components.Input className=\"pl-0\" {...props} />\n//       </Tooltip>\n//     </div>\n//   );\n// };\n// const colourStyles = {\n//   control: styles => ({\n//     ...styles,\n//     backgroundColor: 'transparant',\n//     border: 'none',\n//     borderBottom: '1px solid #b9b9b9',\n//     borderRadius: '0px',\n//     width: '31.333333%'\n//   }),\n//   option: styles => ({ padding: '0px', ...styles }),\n//   input: styles => ({ padding: '0px', ...styles }),\n//   placeholder: styles => ({ padding: '0px', ...styles })\n// };\n// const CustomSelect = props => {\n//   return (\n//     <Select\n//       closeMenuOnSelect={false}\n//       components={{ Input }}\n//       onChange={props.onChange}\n//       options={props.fieldValues}\n//       isMulti\n//       placeholder={props.placeholder}\n//       styles={colourStyles}\n//     />\n//   );\n// };\n// CustomSelect.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n//   fieldValues: PropTypes.string.isRequired,\n//   placeholder: PropTypes.string.isRequired\n// };\n// Input.propTypes = {\n//   isHidden: PropTypes.bool.isRequired\n// };\nimport 'rc-tree-select/assets/index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import 'rc-dialog/assets/index.css';\n\nimport TreeSelect, { TreeNode } from 'rc-tree-select'; // import './demo.less';\n\nclass CustomSelect extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      treeExpandedKeys: []\n    };\n\n    this.onTreeExpand = treeExpandedKeys => {\n      this.setState({\n        treeExpandedKeys\n      });\n    };\n\n    this.treeExpandedKeys = () => {\n      this.setState({\n        treeExpandedKeys: ['000', '0-1-0']\n      });\n    };\n  }\n\n  render() {\n    const treeExpandedKeys = this.state.treeExpandedKeys;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Conrolled treeExpandedKeys\"), React.createElement(TreeSelect, {\n      style: {\n        width: 200\n      },\n      dropdownStyle: {\n        maxHeight: 200,\n        overflow: 'auto'\n      },\n      treeExpandedKeys: treeExpandedKeys,\n      onTreeExpand: this.onTreeExpand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"\",\n      title: \"parent 1\",\n      key: \"000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"parent 1-0\",\n      title: \"parent 1-0\",\n      key: \"0-1-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"leaf1\",\n      title: \"my leaf\",\n      key: \"random\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(TreeNode, {\n      value: \"leaf2\",\n      title: \"your leaf\",\n      key: \"random1\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(TreeNode, {\n      value: \"parent 1-1\",\n      title: \"parent 1-1\",\n      key: \"0-1-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"sss\",\n      title: React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"sss\"),\n      key: \"random3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(TreeNode, {\n      value: \"same value1\",\n      title: \"same txtle\",\n      key: \"0-1-1-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"same value10\",\n      title: \"same titlexd\",\n      key: \"0-1-1-1-0\",\n      style: {\n        color: 'red',\n        background: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))), React.createElement(TreeNode, {\n      value: \"same value2\",\n      title: \"same title\",\n      key: \"0-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(TreeNode, {\n      value: \"2same value\",\n      title: \"2same title\",\n      key: \"0-2-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(TreeNode, {\n      value: \"same value3\",\n      title: \"same title\",\n      key: \"0-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.treeExpandedKeys,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Set treeExpandedKeys\"));\n  }\n\n}\n\nexport default CustomSelect;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx"],"names":["React","ReactDOM","TreeSelect","TreeNode","CustomSelect","Component","state","treeExpandedKeys","onTreeExpand","setState","render","width","maxHeight","overflow","color","background"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import Tooltip from '@atlaskit/tooltip';\n// import Select, { components } from 'react-select';\n// import PropTypes from 'prop-types';\n\n// const Input = props => {\n//   if (props.isHidden) {\n//     return <components.Input {...props} />;\n//   }\n//   return (\n//     <div>\n//       <Tooltip content=\"Custom Input\" className=\"pl-0\">\n//         <components.Input className=\"pl-0\" {...props} />\n//       </Tooltip>\n//     </div>\n//   );\n// };\n\n// const colourStyles = {\n//   control: styles => ({\n//     ...styles,\n//     backgroundColor: 'transparant',\n//     border: 'none',\n//     borderBottom: '1px solid #b9b9b9',\n//     borderRadius: '0px',\n//     width: '31.333333%'\n//   }),\n//   option: styles => ({ padding: '0px', ...styles }),\n//   input: styles => ({ padding: '0px', ...styles }),\n//   placeholder: styles => ({ padding: '0px', ...styles })\n// };\n\n// const CustomSelect = props => {\n//   return (\n//     <Select\n//       closeMenuOnSelect={false}\n//       components={{ Input }}\n//       onChange={props.onChange}\n//       options={props.fieldValues}\n//       isMulti\n//       placeholder={props.placeholder}\n//       styles={colourStyles}\n//     />\n//   );\n// };\n// CustomSelect.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n//   fieldValues: PropTypes.string.isRequired,\n//   placeholder: PropTypes.string.isRequired\n// };\n// Input.propTypes = {\n//   isHidden: PropTypes.bool.isRequired\n// };\n\nimport 'rc-tree-select/assets/index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'rc-dialog/assets/index.css';\nimport TreeSelect, { TreeNode } from 'rc-tree-select';\n// import './demo.less';\n\nclass CustomSelect extends React.Component {\n  state = {\n    treeExpandedKeys: [],\n  };\n\n  onTreeExpand = treeExpandedKeys => {\n    this.setState({\n      treeExpandedKeys,\n    });\n  };\n\n  treeExpandedKeys = () => {\n    this.setState({\n      treeExpandedKeys: ['000', '0-1-0'],\n    });\n  };\n\n  render() {\n    const { treeExpandedKeys } = this.state;\n\n    return (\n      <div>\n        <h2>Conrolled treeExpandedKeys</h2>\n        <TreeSelect\n          style={{ width: 200 }}\n          dropdownStyle={{ maxHeight: 200, overflow: 'auto' }}\n          treeExpandedKeys={treeExpandedKeys}\n          onTreeExpand={this.onTreeExpand}\n        >\n          <TreeNode value=\"\" title=\"parent 1\" key=\"000\">\n            <TreeNode value=\"parent 1-0\" title=\"parent 1-0\" key=\"0-1-0\">\n              <TreeNode value=\"leaf1\" title=\"my leaf\" key=\"random\" />\n              <TreeNode value=\"leaf2\" title=\"your leaf\" key=\"random1\" disabled />\n            </TreeNode>\n            <TreeNode value=\"parent 1-1\" title=\"parent 1-1\" key=\"0-1-1\">\n              <TreeNode\n                value=\"sss\"\n                title={<span style={{ color: 'red' }}>sss</span>}\n                key=\"random3\"\n              />\n              <TreeNode value=\"same value1\" title=\"same txtle\" key=\"0-1-1-1\">\n                <TreeNode\n                  value=\"same value10\"\n                  title=\"same titlexd\"\n                  key=\"0-1-1-1-0\"\n                  style={{ color: 'red', background: 'green' }}\n                />\n              </TreeNode>\n            </TreeNode>\n          </TreeNode>\n          <TreeNode value=\"same value2\" title=\"same title\" key=\"0-2\">\n            <TreeNode value=\"2same value\" title=\"2same title\" key=\"0-2-0\" />\n          </TreeNode>\n          <TreeNode value=\"same value3\" title=\"same title\" key=\"0-3\" />\n        </TreeSelect>\n        <button type=\"button\" onClick={this.treeExpandedKeys}>\n          Set treeExpandedKeys\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CustomSelect;\n"]},"metadata":{},"sourceType":"module"}