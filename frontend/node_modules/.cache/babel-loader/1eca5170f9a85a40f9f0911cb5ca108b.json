{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Todo/frontend/src/containers/Todos/Todos.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { reverse } from 'named-urls';\nimport pageConfig from '../../utils/pageConfig';\nimport PageLoader from '../../components/PageLoader/PageLoader';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport Table from '../../components/Table/Table';\nimport { getActionsFormate, getFormatedDate } from '../../utils/common';\nimport { onPagination, onPageChange, getBodyComponenet } from '../../utils/utils';\nimport { DATA_NOT_FOUND } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport Todo from '../../components/Todo/Todo';\n\nclass Todos extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchTodos = () => {\n      const _this$props = this.props,\n            getTodosList = _this$props.getTodosList,\n            page = _this$props.page;\n      const offset = (this.state.currentPage - 1) * 10;\n      getTodosList(ACTIONS.TODOS.GET_TODOS, {\n        limit: this.state.perPage,\n        offset,\n        page\n      });\n    };\n\n    this.state = {\n      perPage: 10,\n      currentPage: 1,\n      start: 1,\n      end: 5\n    };\n    this.onPagination = onPagination.bind(this);\n    this.onPageChange = onPageChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchTodos();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPage !== prevState.currentPage) {\n      this.fetchTodos();\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          page = _this$props2.page,\n          inProgress = _this$props2.inProgress,\n          Data = _this$props2.Data;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          headerActions = _pageConfig$page.headerActions,\n          redirect = _pageConfig$page.redirect;\n    const Theader = React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"PDF\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Assets Count\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Link\"));\n    const totalPages = Data && Data.pdf_storages ? Math.ceil(Data.pdf_storages.count / this.state.perPage) : 0;\n    const paginationData = {\n      start: this.state.start,\n      end: totalPages > 5 ? this.state.end : totalPages,\n      currentPage: this.state.currentPage,\n      onPagination: this.onPagination,\n      onPageChange: this.onPageChange,\n      totalPages: totalPages < 1 ? 1 : totalPages\n    };\n    const data = [{\n      title: \"Nowshad\",\n      description: \"Okajhsd\"\n    }, {\n      title: \"Nowshad\",\n      description: \"Okajhsd\"\n    }, {\n      title: \"Nowshad\",\n      description: \"Okajhsd\"\n    }, {\n      title: \"Nowshad\",\n      description: \"Okajhsd\"\n    }, {\n      title: \"Nowshad\",\n      description: \"Okajhsd\"\n    }, {\n      title: \"Nowshad\",\n      description: \"Okajhsd\"\n    }];\n    let todoKey = 0;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(PageLoader, {\n      inProgress: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(PageHeader, Object.assign({}, this.props, {\n      title: pageTitle,\n      actions: headerActions,\n      redirect: redirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row todo-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, data && data.map(each => {\n      todoKey++;\n      return React.createElement(Todo, {\n        data: each,\n        key: todoKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nTodos.propTypes = {\n  getTodosList: PropTypes.func.isRequired,\n  page: PropTypes.string.isRequired,\n  match: PropTypes.object.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  Data: PropTypes.object,\n  history: PropTypes.object.isRequired\n};\nTodos.defaultProps = {\n  Data: {}\n};\n\nconst mapStateToProps = state => ({\n  Data: state.todosReducerStore.data,\n  inProgress: state.todosReducerStore.inProgress\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTodosList: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Todos));","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/containers/Todos/Todos.jsx"],"names":["React","PropTypes","connect","withRouter","reverse","pageConfig","PageLoader","PageHeader","Table","getActionsFormate","getFormatedDate","onPagination","onPageChange","getBodyComponenet","DATA_NOT_FOUND","ACTIONS","Todo","Todos","Component","constructor","props","fetchTodos","getTodosList","page","offset","state","currentPage","TODOS","GET_TODOS","limit","perPage","start","end","bind","componentDidMount","componentDidUpdate","prevProps","prevState","render","inProgress","Data","pageTitle","headerActions","redirect","Theader","totalPages","pdf_storages","Math","ceil","count","paginationData","data","title","description","todoKey","map","each","propTypes","func","isRequired","string","match","object","bool","history","defaultProps","mapStateToProps","todosReducerStore","mapDispatchToProps","dispatch","type","resetState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { reverse } from 'named-urls';\nimport pageConfig from '../../utils/pageConfig';\nimport PageLoader from '../../components/PageLoader/PageLoader';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport Table from '../../components/Table/Table';\nimport { getActionsFormate, getFormatedDate } from '../../utils/common';\nimport {\n  onPagination,\n  onPageChange,\n  getBodyComponenet\n} from '../../utils/utils';\nimport { DATA_NOT_FOUND } from '../../utils/constants';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport Todo from '../../components/Todo/Todo';\n\nclass Todos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      perPage: 10,\n      currentPage: 1,\n      start: 1,\n      end: 5\n    };\n    this.onPagination = onPagination.bind(this);\n    this.onPageChange = onPageChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchTodos();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPage !== prevState.currentPage) {\n      this.fetchTodos();\n    }\n  }\n\n  fetchTodos = () => {\n    const { getTodosList, page } = this.props;\n    const offset = (this.state.currentPage - 1) * 10;\n    getTodosList(ACTIONS.TODOS.GET_TODOS, {\n      limit: this.state.perPage,\n      offset,\n      page,\n    });\n  };\n\n  render() {\n    const { page, inProgress, Data } = this.props;\n    const { pageTitle, headerActions, redirect } = pageConfig[page];\n    const Theader = (\n      <tr>\n        <th>PDF</th>\n        <th>Assets Count</th>\n        <th>Status</th>\n        <th>Link</th>\n      </tr>\n    );\n    const totalPages =\n      Data && Data.pdf_storages\n        ? Math.ceil(Data.pdf_storages.count / this.state.perPage)\n        : 0;\n    const paginationData = {\n      start: this.state.start,\n      end: totalPages > 5 ? this.state.end : totalPages,\n      currentPage: this.state.currentPage,\n      onPagination: this.onPagination,\n      onPageChange: this.onPageChange,\n      totalPages: totalPages < 1 ? 1 : totalPages\n    };\n    const data = [\n      {title:\"Nowshad\", description: \"Okajhsd\"},\n      {title:\"Nowshad\", description: \"Okajhsd\"},\n      {title:\"Nowshad\", description: \"Okajhsd\"},\n      {title:\"Nowshad\", description: \"Okajhsd\"},\n      {title:\"Nowshad\", description: \"Okajhsd\"},\n      {title:\"Nowshad\", description: \"Okajhsd\"},\n    ]\n    let todoKey = 0;\n    return (\n      <div>\n        <PageLoader inProgress={false} />\n        <PageHeader\n          {...this.props}\n          title={pageTitle}\n          actions={headerActions}\n          redirect={redirect}\n        />\n        \n        <div className=\"row todo-list\">\n        {data && data.map(each=>{\n          todoKey++;\n          return <Todo data={each} key={todoKey}/>\n        })}\n        </div>\n      </div>\n    );\n  }\n}\n\nTodos.propTypes = {\n  getTodosList: PropTypes.func.isRequired,\n  page: PropTypes.string.isRequired,\n  match: PropTypes.object.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  Data: PropTypes.object,\n  history: PropTypes.object.isRequired\n};\n\nTodos.defaultProps = {\n  Data: {}\n};\nconst mapStateToProps = state => ({\n  Data: state.todosReducerStore.data,\n  inProgress: state.todosReducerStore.inProgress\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTodosList: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    },\n    resetState: type => {\n      dispatch(getActionsFormate(type));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Todos)\n);\n"]},"metadata":{},"sourceType":"module"}