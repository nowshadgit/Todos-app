{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/utils/utils.js\";\nimport React from 'react';\nimport { reverse } from 'named-urls';\nimport { FOOTPRINTS_ROUTES } from '../config';\n\nconst showUserDetails = (userId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.USERS.DETAIL.SHOW, {\n    userId\n  });\n  props.history.push(url);\n  return true;\n};\n\nconst getUserCard = data => {\n  const userCard = Object.values(data).map(userData => {\n    const Id = userData.id;\n    const title = userData.first_name && userData.last_name ? \"\".concat(userData.first_name, \" \").concat(userData.last_name) : 'User';\n    const body = React.createElement(\"div\", {\n      className: \"card-data-body user-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Email: \", userData.email);\n    return {\n      title,\n      body,\n      Id\n    };\n  });\n  return userCard;\n};\n\nconst getOrgUnits = data => {\n  const orgCard = Object.values(data).map(orgData => {\n    const Id = orgData.id;\n    const title = orgData.name;\n    const disable = !orgData.has_children;\n    const body = React.createElement(\"div\", {\n      className: \"card-data-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"testing\");\n    return {\n      title,\n      body,\n      Id,\n      disable\n    };\n  });\n  return orgCard;\n};\n\nconst getOrgUnitsNext = (orgUnitId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, {\n    orgUnitId\n  });\n  props.history.push(url);\n};\n\nconst getOrgUnitUrl = orgUnitId => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, {\n    orgUnitId\n  });\n  return url;\n};\n\nconst getAssetAttributes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const Id = assetData.id;\n    const title = assetData.name;\n    const values = assetData.values.map(value => {\n      return React.createElement(\"div\", {\n        key: value.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, value.name);\n    });\n    const body = React.createElement(\"div\", {\n      className: \"card-data-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, values);\n    return {\n      title,\n      body,\n      Id\n    };\n  });\n  return assetCard;\n};\n\nconst getAssetTypes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const Id = assetData.id;\n    const title = assetData.name;\n    const body = React.createElement(\"div\", {\n      className: \"card-data-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, assetData.color);\n    return {\n      title,\n      body,\n      Id\n    };\n  });\n  return assetCard;\n};\n\nconst getBreadcrumbs = actions => {\n  const path = [];\n  path.push({\n    id: actions.id,\n    name: actions.name\n  });\n  let parent = actions.parent;\n\n  while (Object.keys(parent).length !== 0) {\n    path.push({\n      id: parent.id,\n      name: parent.name\n    });\n    parent = parent.parent;\n  }\n\n  return path;\n};\n\nconst redirect = (props, url) => {\n  props.history.push(url);\n};\n\nconst getFormatOfdData = dData => {\n  const format = dData.map(department => {\n    return {\n      value: department.id,\n      label: department.name\n    };\n  });\n  return format;\n};\n\nconst redirectToDepartments = () => {\n  return true;\n};\n\nconst redirectAssetTypeDetail = (assetTypeId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ASSET_TYPES.DETAIL.SHOW, {\n    assetTypeId\n  });\n  props.history.push(url);\n};\n\nconst redirectAssetAttributeDetail = (assetAttrId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ASSET_ATTRIBUTES.DETAIL.SHOW, {\n    assetAttrId\n  });\n  props.history.push(url);\n}; // {\n//   label: 'VP Accounting',\n//   tagClassName: 'special',\n//   children: [\n//     {\n//       label: 'iWay',\n//       children: [\n//         {\n//           label: 'Universidad de Especialidades del EspÃ­ritu Santo'\n//         },\n//         {\n//           label: 'Marmara University'\n//         },\n//         {\n//           label: 'Baghdad College of Pharmacy'\n//         }\n//       ]\n//     },\n//     id: 2\n// name: \"Nowshad\"\n\n\nfunction getRecursiveData(data) {\n  for (let dData of data) {\n    dData.label = dData.name;\n    dData.orgUnitId = dData.id;\n    delete dData.name;\n    delete dData.id;\n    dData.children = dData.child;\n\n    if (dData.child && dData.child.length > 0) {\n      delete dData.child;\n      getRecursiveData(dData.children);\n    } else {\n      delete dData.child;\n    }\n  }\n\n  return data;\n}\n\nconst getFomatedOrgUnitData = OrgUnitData => {\n  let formatedData = [];\n\n  if (OrgUnitData && OrgUnitData.length > 0) {\n    formatedData = getRecursiveData(OrgUnitData);\n  }\n\n  console.log(\"formated\", formatedData);\n  return formatedData;\n};\n\nexport { getUserCard, showUserDetails, getOrgUnits, getOrgUnitsNext, redirect, getFormatOfdData, redirectToDepartments, getAssetAttributes, getAssetTypes, getBreadcrumbs, getOrgUnitUrl, redirectAssetTypeDetail, redirectAssetAttributeDetail, getFomatedOrgUnitData };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/utils/utils.js"],"names":["React","reverse","FOOTPRINTS_ROUTES","showUserDetails","userId","props","url","USERS","DETAIL","SHOW","history","push","getUserCard","data","userCard","Object","values","map","userData","Id","id","title","first_name","last_name","body","email","getOrgUnits","orgCard","orgData","name","disable","has_children","getOrgUnitsNext","orgUnitId","ORG_UNITS","getOrgUnitUrl","getAssetAttributes","assetCard","assetData","value","getAssetTypes","color","getBreadcrumbs","actions","path","parent","keys","length","redirect","getFormatOfdData","dData","format","department","label","redirectToDepartments","redirectAssetTypeDetail","assetTypeId","ASSET_TYPES","redirectAssetAttributeDetail","assetAttrId","ASSET_ATTRIBUTES","getRecursiveData","children","child","getFomatedOrgUnitData","OrgUnitData","formatedData","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { reverse } from 'named-urls';\nimport { FOOTPRINTS_ROUTES } from '../config';\n\nconst showUserDetails = (userId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.USERS.DETAIL.SHOW, { userId });\n  props.history.push(url);\n  return true;\n};\n\nconst getUserCard = data => {\n  const userCard = Object.values(data).map(userData => {\n    const Id = userData.id;\n    const title =\n      userData.first_name && userData.last_name\n        ? `${userData.first_name} ${userData.last_name}`\n        : 'User';\n\n    const body = (\n      <div className=\"card-data-body user-email\">Email: {userData.email}</div>\n    );\n    return { title, body, Id };\n  });\n\n  return userCard;\n};\n\nconst getOrgUnits = data => {\n  const orgCard = Object.values(data).map(orgData => {\n    const Id = orgData.id;\n    const title = orgData.name;\n    const disable = !orgData.has_children;\n    const body = <div className=\"card-data-body\">testing</div>;\n    return { title, body, Id, disable };\n  });\n  return orgCard;\n};\n\nconst getOrgUnitsNext = (orgUnitId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, { orgUnitId });\n  props.history.push(url);\n};\n\nconst getOrgUnitUrl = orgUnitId => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, { orgUnitId });\n  return url;\n};\n\nconst getAssetAttributes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const Id = assetData.id;\n    const title = assetData.name;\n    const values = assetData.values.map(value => {\n      return <div key={value.id}>{value.name}</div>;\n    });\n    const body = <div className=\"card-data-body\">{values}</div>;\n    return { title, body, Id };\n  });\n  return assetCard;\n};\n\nconst getAssetTypes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const Id = assetData.id;\n    const title = assetData.name;\n    const body = <div className=\"card-data-body\">{assetData.color}</div>;\n    return { title, body, Id };\n  });\n  return assetCard;\n};\n\nconst getBreadcrumbs = actions => {\n  const path = [];\n  path.push({ id: actions.id, name: actions.name });\n  let { parent } = actions;\n  while (Object.keys(parent).length !== 0) {\n    path.push({ id: parent.id, name: parent.name });\n    parent = parent.parent;\n  }\n  return path;\n};\n\nconst redirect = (props, url) => {\n  props.history.push(url);\n};\n\nconst getFormatOfdData = dData => {\n  const format = dData.map(department => {\n    return { value: department.id, label: department.name };\n  });\n  return format;\n};\n\nconst redirectToDepartments = () => {\n  return true;\n};\n\nconst redirectAssetTypeDetail = (assetTypeId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ASSET_TYPES.DETAIL.SHOW, {\n    assetTypeId\n  });\n  props.history.push(url);\n};\n\nconst redirectAssetAttributeDetail = (assetAttrId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ASSET_ATTRIBUTES.DETAIL.SHOW, {\n    assetAttrId\n  });\n  props.history.push(url);\n};\n// {\n//   label: 'VP Accounting',\n//   tagClassName: 'special',\n//   children: [\n//     {\n//       label: 'iWay',\n//       children: [\n//         {\n//           label: 'Universidad de Especialidades del EspÃ­ritu Santo'\n//         },\n//         {\n//           label: 'Marmara University'\n//         },\n//         {\n//           label: 'Baghdad College of Pharmacy'\n//         }\n//       ]\n//     },\n//     id: 2\n// name: \"Nowshad\"\nfunction getRecursiveData(data){\n  for(let dData of data){\n    dData.label = dData.name;\n    dData.orgUnitId = dData.id;\n    delete dData.name;\n    delete dData.id;\n    dData.children = dData.child;\n    if( dData.child &&  dData.child.length > 0){\n      delete dData.child;\n      getRecursiveData(dData.children);\n    }else{\n      delete dData.child;\n    }\n }\n\n  return data;\n}\n\nconst getFomatedOrgUnitData = (OrgUnitData) =>{\n  let formatedData = [];\n  if(OrgUnitData && OrgUnitData.length>0){\n    formatedData = getRecursiveData(OrgUnitData);\n  }\n  console.log(\"formated\", formatedData);\n  return formatedData;\n}\n\nexport {\n  getUserCard,\n  showUserDetails,\n  getOrgUnits,\n  getOrgUnitsNext,\n  redirect,\n  getFormatOfdData,\n  redirectToDepartments,\n  getAssetAttributes,\n  getAssetTypes,\n  getBreadcrumbs,\n  getOrgUnitUrl,\n  redirectAssetTypeDetail,\n  redirectAssetAttributeDetail,\n  getFomatedOrgUnitData\n};\n"]},"metadata":{},"sourceType":"module"}