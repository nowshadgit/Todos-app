{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/GenerateQrCodesForm/GenerateQrCodesForm.jsx\";\nimport React from 'react';\nimport { InputGroup, FormControl, Button, FormGroup, FormLabel } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport DisplayErrors from '../DisplayErrors';\nimport { SUBMIT } from '../../utils/constants';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\n\nconst GenerateQrCodesForm = props => {\n  const assetTypesList = props.assetTypesList;\n  const assetTypes = assetTypesList && assetTypesList.length > 0 && assetTypesList.map(each => {\n    if (isValidDa(each)) {\n      const id = each.id,\n            name = each.name;\n      return React.createElement(\"option\", {\n        value: id,\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, name);\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"card-text text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(DisplayErrors, {\n    errors: props.formErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col col-lg-4 col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    controlId: \"formGridState\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" Asset Type \"), React.createElement(FormControl, {\n    as: \"select\",\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Choose...\"), assetTypes)))), React.createElement(\"div\", {\n    className: \"row mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col col-lg-4 col-12 ml-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    type: \"number\",\n    placeholder: \"Count\",\n    id: props.qrCodesCountId,\n    value: props.qrCodesCountValue,\n    name: props.qrCodesCountId,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))))), React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn onboarding-btn\",\n    disabled: props.disabled || props.inProgress,\n    id: \"add-edit-org-unit-btn\",\n    onClick: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.inProgress && React.createElement(ButtonLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), !props.inProgress && SUBMIT));\n};\n\nGenerateQrCodesForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  assetTypeId: PropTypes.string.isRequired,\n  assetTypeValue: PropTypes.string.isRequired,\n  qrCodesCountId: PropTypes.string.isRequired,\n  qrCodesCountValue: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  assetTypesList: PropTypes.array.isRequired\n};\nexport default GenerateQrCodesForm;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/GenerateQrCodesForm/GenerateQrCodesForm.jsx"],"names":["React","InputGroup","FormControl","Button","FormGroup","FormLabel","PropTypes","DisplayErrors","SUBMIT","ButtonLoader","GenerateQrCodesForm","props","assetTypesList","assetTypes","length","map","each","isValidDa","id","name","formErrors","handleChange","qrCodesCountId","qrCodesCountValue","disabled","inProgress","handleSubmit","propTypes","func","isRequired","object","bool","assetTypeId","string","assetTypeValue","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { InputGroup, FormControl, Button, FormGroup, FormLabel } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport DisplayErrors from '../DisplayErrors';\nimport { SUBMIT } from '../../utils/constants';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\n\nconst GenerateQrCodesForm = props => {\n  const {assetTypesList } = props;\n  const assetTypes = assetTypesList && assetTypesList.length > 0 && assetTypesList.map(each=>{\n    if(isValidDa(each)){\n      const {id,name} = each;\n      return (\n        <option value = {id} key={id}>{name}</option>\n      )\n    }\n  })\n  return (\n    <div className=\"card-text text-left\">\n      <div className=\"card p-3\">\n        <form autoComplete=\"off\">\n          <DisplayErrors errors={props.formErrors} />\n          <div className=\"row\">\n            <div className=\"col col-lg-4 col-12\">\n              {/* <InputGroup size=\"sm\">\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Asset Type\"\n                  id={props.assetTypeId}\n                  value={props.assetTypeValue}\n                  name={props.assetTypeId}\n                  onChange={props.handleChange}\n                />\n              </InputGroup> */}\n              <FormGroup controlId=\"formGridState\">\n                <FormLabel> Asset Type </FormLabel>\n                <FormControl \n                   as=\"select\" \n                   onChange={props.handleChange}\n                >\n                  <option>Choose...</option>\n                  {assetTypes}\n                </FormControl>\n            </FormGroup>\n            </div>\n          </div>\n          <div className=\"row mb-4\">\n            <div className=\"col col-lg-4 col-12 ml-0\">\n              <InputGroup size=\"sm\">\n                <FormControl\n                  type=\"number\"\n                  placeholder=\"Count\"\n                  id={props.qrCodesCountId}\n                  value={props.qrCodesCountValue}\n                  name={props.qrCodesCountId}\n                  onChange={props.handleChange}\n                />\n              </InputGroup>\n            </div>\n          </div>\n        </form>\n      </div>\n      <Button\n        type=\"submit\"\n        className=\"btn onboarding-btn\"\n        disabled={props.disabled || props.inProgress}\n        id=\"add-edit-org-unit-btn\"\n        onClick={props.handleSubmit}\n      >\n        {props.inProgress && <ButtonLoader />}\n        {!props.inProgress && SUBMIT}\n      </Button>\n    </div>\n  );\n};\n\nGenerateQrCodesForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  assetTypeId: PropTypes.string.isRequired,\n  assetTypeValue: PropTypes.string.isRequired,\n  qrCodesCountId: PropTypes.string.isRequired,\n  qrCodesCountValue: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  assetTypesList: PropTypes.array.isRequired\n};\n\nexport default GenerateQrCodesForm;\n"]},"metadata":{},"sourceType":"module"}