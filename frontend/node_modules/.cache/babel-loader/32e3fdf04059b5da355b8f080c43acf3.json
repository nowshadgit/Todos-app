{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomButton/CustomButton.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport './CustomButton.scss';\n\nconst CustomButton = props => {\n  const disabled = props.disabled,\n        isLoading = props.isLoading,\n        submitFunction = props.submitFunction,\n        text = props.text,\n        id = props.id,\n        type = props.type,\n        className = props.className,\n        isBlock = props.isBlock;\n  const isDisabled = disabled || isLoading;\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: isBlock,\n    id: id,\n    type: type,\n    className: className,\n    disabled: isDisabled,\n    onClick: eve => submitFunction(eve),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, isLoading && React.createElement(ButtonLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), !isLoading && text));\n};\n\nCustomButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  submitFunction: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  isBlock: PropTypes.bool.isRequired\n};\nexport default CustomButton;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomButton/CustomButton.jsx"],"names":["React","PropTypes","Button","ButtonLoader","CustomButton","props","disabled","isLoading","submitFunction","text","id","type","className","isBlock","isDisabled","eve","propTypes","bool","isRequired","func","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA,QAE1BC,QAF0B,GAUxBD,KAVwB,CAE1BC,QAF0B;AAAA,QAG1BC,SAH0B,GAUxBF,KAVwB,CAG1BE,SAH0B;AAAA,QAI1BC,cAJ0B,GAUxBH,KAVwB,CAI1BG,cAJ0B;AAAA,QAK1BC,IAL0B,GAUxBJ,KAVwB,CAK1BI,IAL0B;AAAA,QAM1BC,EAN0B,GAUxBL,KAVwB,CAM1BK,EAN0B;AAAA,QAO1BC,IAP0B,GAUxBN,KAVwB,CAO1BM,IAP0B;AAAA,QAQ1BC,SAR0B,GAUxBP,KAVwB,CAQ1BO,SAR0B;AAAA,QAS1BC,OAT0B,GAUxBR,KAVwB,CAS1BQ,OAT0B;AAW5B,QAAMC,UAAU,GAAGR,QAAQ,IAAIC,SAA/B;AACA,SACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEM,OADT;AAEE,IAAA,EAAE,EAAEH,EAFN;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,QAAQ,EAAEE,UALZ;AAME,IAAA,OAAO,EAAEC,GAAG,IAAIP,cAAc,CAACO,GAAD,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGR,SAAS,IAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARhB,EASG,CAACA,SAAD,IAAcE,IATjB,CADF,CADF;AAeD,CA3BD;;AA6BAL,YAAY,CAACY,SAAb,GAAyB;AACvBV,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAAV,CAAeC,UADF;AAEvBX,EAAAA,SAAS,EAAEN,SAAS,CAACgB,IAAV,CAAeC,UAFH;AAGvBV,EAAAA,cAAc,EAAEP,SAAS,CAACkB,IAAV,CAAeD,UAHR;AAIvBT,EAAAA,IAAI,EAAER,SAAS,CAACmB,MAAV,CAAiBF,UAJA;AAKvBR,EAAAA,EAAE,EAAET,SAAS,CAACmB,MAAV,CAAiBF,UALE;AAMvBP,EAAAA,IAAI,EAAEV,SAAS,CAACmB,MAAV,CAAiBF,UANA;AAOvBN,EAAAA,SAAS,EAAEX,SAAS,CAACmB,MAAV,CAAiBF,UAPL;AAQvBL,EAAAA,OAAO,EAAEZ,SAAS,CAACgB,IAAV,CAAeC;AARD,CAAzB;AAWA,eAAed,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport './CustomButton.scss';\n\nconst CustomButton = props => {\n  const {\n    disabled,\n    isLoading,\n    submitFunction,\n    text,\n    id,\n    type,\n    className,\n    isBlock\n  } = props;\n  const isDisabled = disabled || isLoading;\n  return (\n    <div className=\"\">\n      <Button\n        block={isBlock}\n        id={id}\n        type={type}\n        className={className}\n        disabled={isDisabled}\n        onClick={eve => submitFunction(eve)}\n      >\n        {isLoading && <ButtonLoader />}\n        {!isLoading && text}\n      </Button>\n    </div>\n  );\n};\n\nCustomButton.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  submitFunction: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  isBlock: PropTypes.bool.isRequired\n};\n\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}