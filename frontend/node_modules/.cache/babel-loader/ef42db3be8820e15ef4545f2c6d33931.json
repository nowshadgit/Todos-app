{"ast":null,"code":"import { __extends, __read, __spread } from \"tslib\";\nimport React, { Children, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AnalyticsReactContext } from './AnalyticsReactContext';\nvar ContextTypes = {\n  getAtlaskitAnalyticsContext: PropTypes.func,\n  getAtlaskitAnalyticsEventHandlers: PropTypes.func\n};\n\nvar AnalyticsContext =\n/** @class */\nfunction (_super) {\n  __extends(AnalyticsContext, _super);\n\n  function AnalyticsContext(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.getChildContext = function () {\n      return {\n        getAtlaskitAnalyticsContext: _this.getAnalyticsContext\n      };\n    };\n\n    _this.getAnalyticsContext = function () {\n      var data = _this.props.data;\n      var getAtlaskitAnalyticsContext = _this.context.getAtlaskitAnalyticsContext;\n      var ancestorData = typeof getAtlaskitAnalyticsContext === 'function' && getAtlaskitAnalyticsContext() || [];\n      return __spread(ancestorData, [data]);\n    };\n\n    _this.getAnalyticsEventHandlers = function () {\n      var getAtlaskitAnalyticsEventHandlers = _this.context.getAtlaskitAnalyticsEventHandlers;\n      var ancestorHandlers = typeof getAtlaskitAnalyticsEventHandlers === 'function' && getAtlaskitAnalyticsEventHandlers() || [];\n      return ancestorHandlers;\n    };\n\n    _this.state = {\n      getAtlaskitAnalyticsContext: _this.getAnalyticsContext,\n      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers\n    };\n    return _this;\n  }\n\n  AnalyticsContext.prototype.render = function () {\n    var children = this.props.children;\n    return React.createElement(AnalyticsReactContext.Provider, {\n      value: this.state\n    }, Children.only(children));\n  };\n\n  AnalyticsContext.contextTypes = ContextTypes;\n  AnalyticsContext.childContextTypes = ContextTypes;\n  return AnalyticsContext;\n}(Component);\n\nexport default AnalyticsContext;","map":null,"metadata":{},"sourceType":"module"}