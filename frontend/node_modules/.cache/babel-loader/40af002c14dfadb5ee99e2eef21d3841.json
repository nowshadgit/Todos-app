{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { PAGE } from '../../utils/constants';\n\nfunction* getUserList(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.USER);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {\n          page: PAGE.USERS\n        })\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.GET_USER_LIST_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: response.data\n    });\n  }\n}\n\nfunction* getOrgUnitsList(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.ORG_UNITS, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: response.data\n    });\n  }\n}\n\nfunction* getOrgDetails(action) {\n  let response;\n  const orgUnitId = action.data.orgUnitId ? action.data.orgUnitId : action.data.department;\n\n  try {\n    response = yield call(window.axios.getData, reverse(FOOTPRINTS_API.ORG_UNITS_DETAILS, {\n      orgUnitId\n    }), action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetAttributes(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.ASSET_ATTRIBUTES, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data.attributes\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: response.data\n    });\n  }\n}\n\nfunction* getAssetTypes(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.ASSET_TYPES, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: response.data\n    });\n  }\n}\n\nexport { getUserList, getOrgUnitsList, getOrgDetails, getAssetAttributes, getAssetTypes };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.saga.js"],"names":["call","put","reverse","ACTIONS","FOOTPRINTS_API","PAGE","getUserList","action","response","window","axios","getData","USER","status","type","USERS","GET_USER_LIST_SUCCESS","payload","data","GET_USER_LIST_FAIL","ALERT_MESSAGE","FAIL","page","e","getOrgUnitsList","ORG_UNITS","GET_ORG_UNITS_LIST_SUCCESS","GET_ORG_UNITS_LIST_FAIL","getOrgDetails","orgUnitId","department","ORG_UNITS_DETAILS","GET_ORG_UNITS_DETAILS_SUCCESS","GET_ORG_UNITS_DETAILS_FAIL","getAssetAttributes","ASSET_ATTRIBUTES","GET_ASSET_ATTRIBUTES_SUCCESS","attributes","GET_ASSET_ATTRIBUTES_FAIL","getAssetTypes","ASSET_TYPES","GET_ASSET_TYPES_SUCCESS","GET_ASSET_TYPES_FAIL"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\n\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\nimport { PAGE } from '../../utils/constants';\n\nfunction* getUserList(action) {\n  let response;\n  try {\n    response = yield call(window.axios.getData, FOOTPRINTS_API.USER);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_LIST_FAIL,\n        payload: response.data\n      });\n     \n      \n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, page: PAGE.USERS }\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.GET_USER_LIST_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: response.data\n    });\n  }\n}\n\nfunction* getOrgUnitsList(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      FOOTPRINTS_API.ORG_UNITS,\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_LIST_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: response.data\n    });\n  }\n}\n\nfunction* getOrgDetails(action) {\n  let response;\n  const orgUnitId = action.data.orgUnitId\n    ? action.data.orgUnitId\n    : action.data.department;\n\n  try {\n    response = yield call(\n      window.axios.getData,\n      reverse(FOOTPRINTS_API.ORG_UNITS_DETAILS, { orgUnitId }),\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ORG_UNITS.GET_ORG_UNITS_DETAILS_FAIL,\n      payload: e\n    });\n  }\n}\n\nfunction* getAssetAttributes(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      FOOTPRINTS_API.ASSET_ATTRIBUTES,\n      action.data\n    );\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_SUCCESS,\n        payload: response.data.attributes\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.GET_ASSET_ATTRIBUTES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: response.data\n    });\n  }\n}\n\nfunction* getAssetTypes(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.getData,\n      FOOTPRINTS_API.ASSET_TYPES,\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.GET_ASSET_TYPES_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: response.data\n    });\n  }\n}\n\nexport {\n  getUserList,\n  getOrgUnitsList,\n  getOrgDetails,\n  getAssetAttributes,\n  getAssetTypes\n};\n"]},"metadata":{},"sourceType":"module"}