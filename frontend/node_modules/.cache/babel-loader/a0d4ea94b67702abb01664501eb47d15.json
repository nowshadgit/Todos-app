{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, put } from 'redux-saga/effects';\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getUserDetails(action) {\n  let response;\n\n  try {\n    const data = action.data;\n    const API_URL = FOOTPRINTS_API.USER + data.userId;\n    response = yield call(window.axios.getData, API_URL);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.GET_USER_INFO_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nfunction* getAssetTypesDetails(action) {\n  let response;\n  const assetTypeId = action.data.assetTypeId;\n\n  try {\n    response = yield call(window.axios.getData, reverse(FOOTPRINTS_API.ASSET_TYPES_DETAILS, {\n      assetTypeId\n    }), action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nfunction* getAssetAttributesDetails(action) {\n  let response;\n  const assetAttrId = action.data.assetAttrId;\n\n  try {\n    response = yield call(window.axios.getData, reverse(FOOTPRINTS_API.ASSET_ATTRIBUTES_DETAILS, {\n      assetAttrId\n    }), action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nfunction* getAssetDetails(action) {\n  let response;\n\n  try {\n    const assetId = action.data.assetId;\n    response = yield call(window.axios.getData, reverse(FOOTPRINTS_API.ASSET_DETAILS, {\n      assetId\n    }));\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSET_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSET_DETAILS_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: _objectSpread({}, response.data, {}, action.data)\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSETS.GET_ASSET_DETAILS_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: _objectSpread({}, response.data, {}, action.data)\n    });\n  }\n}\n\nexport { getUserDetails, getAssetTypesDetails, getAssetAttributesDetails, getAssetDetails };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/Details/Details.saga.js"],"names":["call","put","reverse","ACTIONS","FOOTPRINTS_API","getUserDetails","action","response","data","API_URL","USER","userId","window","axios","getData","status","type","USERS","GET_USER_INFO_SUCCESS","payload","GET_USER_INFO_FAIL","ALERT_MESSAGE","FAIL","e","getAssetTypesDetails","assetTypeId","ASSET_TYPES_DETAILS","ASSET_TYPES","ASSET_TYPES_DETAILS_SUCCESS","ASSET_TYPES_DETAILS_FAIL","getAssetAttributesDetails","assetAttrId","ASSET_ATTRIBUTES_DETAILS","ASSET_ATTRIBUTES","ASSET_ATTRIBUTES_DETAILS_SUCCESS","ASSET_ATTRIBUTES_DETAILS_FAIL","getAssetDetails","assetId","ASSET_DETAILS","ASSETS","GET_ASSET_DETAILS_SUCCESS","GET_ASSET_DETAILS_FAIL"],"mappings":"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","sourcesContent":["import { call, put } from 'redux-saga/effects';\n\nimport { reverse } from 'named-urls';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* getUserDetails(action) {\n  let response;\n  try {\n    const { data } = action;\n    const API_URL = FOOTPRINTS_API.USER + data.userId;\n    response = yield call(window.axios.getData, API_URL);\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data}\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.USERS.GET_USER_INFO_FAIL, payload: e });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data}\n    });\n  }\n}\n\nfunction* getAssetTypesDetails(action) {\n  let response;\n  const { assetTypeId } = action.data;\n  try {\n    response = yield call(\n      window.axios.getData,\n      reverse(FOOTPRINTS_API.ASSET_TYPES_DETAILS, { assetTypeId }),\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data}\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_TYPES.ASSET_TYPES_DETAILS_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data}\n    });\n  }\n}\n\nfunction* getAssetAttributesDetails(action) {\n  let response;\n  const { assetAttrId } = action.data;\n  try {\n    response = yield call(\n      window.axios.getData,\n      reverse(FOOTPRINTS_API.ASSET_ATTRIBUTES_DETAILS, { assetAttrId }),\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data}\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSET_ATTRIBUTES.ASSET_ATTRIBUTES_DETAILS_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data}\n    });\n  }\n}\n\nfunction* getAssetDetails(action) {\n  let response;\n  try {\n    const { assetId } = action.data;\n    response = yield call(\n      window.axios.getData,\n      reverse(FOOTPRINTS_API.ASSET_DETAILS, { assetId })\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSET_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.ASSETS.GET_ASSET_DETAILS_FAIL,\n        payload: response.data\n      });\n      yield put({\n        type: ACTIONS.ALERT_MESSAGE.FAIL,\n        payload: { ...response.data, ...action.data}\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.ASSETS.GET_ASSET_DETAILS_FAIL,\n      payload: e\n    });\n    yield put({\n      type: ACTIONS.ALERT_MESSAGE.FAIL,\n      payload: { ...response.data, ...action.data}\n    });\n  }\n}\n\nexport {\n  getUserDetails,\n  getAssetTypesDetails,\n  getAssetAttributesDetails,\n  getAssetDetails\n};\n"]},"metadata":{},"sourceType":"module"}