{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/nowshad/Desktop/Todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Todo/frontend/src/containers/SignUp/SignUp.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { SIGNUP_FORM_HEADER, PAGE } from '../../utils/constants';\nimport AsOnboardingCard from '../../hocs/AsOnbaordingCard';\nimport { checkEmail, checkPassword, getErrorResMsg, confirmPassword } from '../../utils/formValidations';\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\n\nclass Singup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.EMAIL_FIELD_ID = 'todo-email';\n    this.PASSWORD_FIELD_ID = 'todo-password';\n    this.NAME_FIELD_ID = 'todo-user-name';\n    this.CONFIRM_PASSWORD_FIELD_ID = 'todo-confirm-password';\n\n    this.enableSignIn = (email, password, confirmPassword, userName) => {\n      const disabled = !(email.length > 0 && password.length > 0 && confirmPassword.length > 0 && userName.length > 0);\n      this.setState({\n        submitDisabled: disabled\n      });\n    };\n\n    this.validateForm = () => {\n      const _checkEmail = checkEmail(this.state[this.EMAIL_FIELD_ID], 'Email'),\n            _checkEmail2 = _slicedToArray(_checkEmail, 2),\n            emailValidity = _checkEmail2[0],\n            emailErrors = _checkEmail2[1];\n\n      const _checkPassword = checkPassword(this.state[this.PASSWORD_FIELD_ID], 'Password'),\n            _checkPassword2 = _slicedToArray(_checkPassword, 2),\n            passwordValidity = _checkPassword2[0],\n            passwordErrors = _checkPassword2[1];\n\n      const _confirmPassword = confirmPassword(this.state[this.PASSWORD_FIELD_ID], this.state[this.CONFIRM_PASSWORD_FIELD_ID], 'Conform password'),\n            _confirmPassword2 = _slicedToArray(_confirmPassword, 2),\n            confirmPasswordValidity = _confirmPassword2[0],\n            confirmPasswordError = _confirmPassword2[1];\n\n      const formValidity = emailValidity && passwordValidity && confirmPasswordValidity;\n\n      const formErrors = _objectSpread({}, emailErrors, {}, passwordErrors, {}, confirmPasswordError);\n\n      this.setState({\n        formValidity,\n        formErrors\n      });\n      return formValidity;\n    };\n\n    this.handleInvalidKeys = event => {\n      if (event.key === ' ') {\n        event.preventDefault();\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      }, () => this.enableSignIn(this.state[this.EMAIL_FIELD_ID], this.state[this.PASSWORD_FIELD_ID], this.state[this.CONFIRM_PASSWORD_FIELD_ID], this.state[this.NAME_FIELD_ID]));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.dispatch({\n        type: ACTIONS.AUTH.RESET_STATE\n      });\n\n      if (this.validateForm()) {\n        const data = {\n          email: this.state[this.EMAIL_FIELD_ID],\n          password: this.state[this.PASSWORD_FIELD_ID]\n        };\n        this.signup(data);\n      }\n    };\n\n    this.signup = data => {\n      this.setState({\n        errorCode: ''\n      });\n      this.props.dispatch({\n        type: ACTIONS.AUTH.SIGN_UP,\n        data\n      });\n    };\n\n    this.state = {\n      formErrors: {},\n      rememberMe: false,\n      formValidity: false,\n      submitDisabled: true,\n      [this.EMAIL_FIELD_ID]: '',\n      [this.PASSWORD_FIELD_ID]: '',\n      [this.NAME_FIELD_ID]: '',\n      [this.CONFIRM_PASSWORD_FIELD_ID]: '',\n      errorCode: ''\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const errorCode = nextProps.signup.error.errorCode;\n\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.LOGIN);\n      return {\n        formErrors: errMsg,\n        errorCode\n      };\n    }\n\n    return prevState;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"signup-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title todo-card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, SIGNUP_FORM_HEADER), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(SignUpForm, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      formErrors: this.state.formErrors,\n      emailFieldId: this.EMAIL_FIELD_ID,\n      disabled: this.state.submitDisabled,\n      formValidity: this.state.formValidity,\n      passwordFieldId: this.PASSWORD_FIELD_ID,\n      handleInvalidKeys: this.handleInvalidKeys,\n      emailValue: this.state[this.EMAIL_FIELD_ID],\n      passwordValue: this.state[this.PASSWORD_FIELD_ID],\n      inProgress: this.props.signup.inProgress,\n      nameFieldId: this.NAME_FIELD_ID,\n      confirmPasswordField: this.CONFIRM_PASSWORD_FIELD_ID,\n      nameFieldValue: this.state[this.NAME_FIELD_ID],\n      confirmPasswordValue: this.state[this.CONFIRM_PASSWORD_FIELD_ID],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}\n\nSingup.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  signup: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nSingup.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  signup: state.signupStore\n});\n\nexport default withRouter(connect(mapStateToProps)(AsOnboardingCard(Singup)));","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/containers/SignUp/SignUp.jsx"],"names":["React","PropTypes","connect","withRouter","ACTIONS","SIGNUP_FORM_HEADER","PAGE","AsOnboardingCard","checkEmail","checkPassword","getErrorResMsg","confirmPassword","SignUpForm","Singup","Component","constructor","props","EMAIL_FIELD_ID","PASSWORD_FIELD_ID","NAME_FIELD_ID","CONFIRM_PASSWORD_FIELD_ID","enableSignIn","email","password","userName","disabled","length","setState","submitDisabled","validateForm","state","emailValidity","emailErrors","passwordValidity","passwordErrors","confirmPasswordValidity","confirmPasswordError","formValidity","formErrors","handleInvalidKeys","event","key","preventDefault","handleChange","target","id","value","handleSubmit","dispatch","type","AUTH","RESET_STATE","data","signup","errorCode","SIGN_UP","rememberMe","getDerivedStateFromProps","nextProps","prevState","error","errMsg","LOGIN","render","inProgress","propTypes","func","isRequired","object","history","defaultProps","mapStateToProps","signupStore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { SIGNUP_FORM_HEADER, PAGE } from '../../utils/constants';\nimport AsOnboardingCard from '../../hocs/AsOnbaordingCard';\nimport {\n  checkEmail,\n  checkPassword,\n  getErrorResMsg,\n  confirmPassword\n} from '../../utils/formValidations';\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\n\nclass Singup extends React.Component {\n  EMAIL_FIELD_ID = 'todo-email';\n\n  PASSWORD_FIELD_ID = 'todo-password';\n\n  NAME_FIELD_ID = 'todo-user-name';\n\n  CONFIRM_PASSWORD_FIELD_ID = 'todo-confirm-password';\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formErrors: {},\n      rememberMe: false,\n      formValidity: false,\n      submitDisabled: true,\n      [this.EMAIL_FIELD_ID]: '',\n      [this.PASSWORD_FIELD_ID]: '',\n      [this.NAME_FIELD_ID]:'',\n      [this.CONFIRM_PASSWORD_FIELD_ID]:'',\n      errorCode: ''\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { errorCode } = nextProps.signup.error;\n    if (errorCode && errorCode !== prevState.errorCode) {\n      const errMsg = getErrorResMsg(errorCode, PAGE.LOGIN);\n      return { formErrors: errMsg, errorCode };\n    } \n    return prevState;\n  }\n\n  enableSignIn = (email, password, confirmPassword, userName) => {\n    const disabled = !(email.length > 0 && password.length > 0 && confirmPassword.length > 0 && userName.length>0);\n    this.setState({ submitDisabled: disabled });\n  };\n\n  validateForm = () => {\n    const [emailValidity, emailErrors] = checkEmail(\n      this.state[this.EMAIL_FIELD_ID],\n      'Email'\n    );\n    const [passwordValidity, passwordErrors] = checkPassword(\n      this.state[this.PASSWORD_FIELD_ID],\n      'Password'\n    );\n\n    const [confirmPasswordValidity, confirmPasswordError] = confirmPassword(\n      this.state[this.PASSWORD_FIELD_ID],\n      this.state[this.CONFIRM_PASSWORD_FIELD_ID],\n      'Conform password'\n    )\n    const formValidity = emailValidity && passwordValidity && confirmPasswordValidity;\n    const formErrors = { ...emailErrors, ...passwordErrors, ...confirmPasswordError };\n\n    this.setState({ formValidity, formErrors });\n\n    return formValidity;\n  };\n\n  handleInvalidKeys = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  };\n\n  handleChange = event => {\n    this.setState(\n      {\n        [event.target.id]: event.target.value,\n        formErrors: {}\n      },\n      () =>\n        this.enableSignIn(\n          this.state[this.EMAIL_FIELD_ID],\n          this.state[this.PASSWORD_FIELD_ID],\n          this.state[this.CONFIRM_PASSWORD_FIELD_ID],\n          this.state[this.NAME_FIELD_ID]\n        )\n    );\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.dispatch({ type: ACTIONS.AUTH.RESET_STATE });\n    if (this.validateForm()) {\n      const data = {\n        email: this.state[this.EMAIL_FIELD_ID],\n        password: this.state[this.PASSWORD_FIELD_ID]\n      };\n      this.signup(data);\n    }\n  };\n\n  signup = data => {\n    this.setState({ errorCode: '' });\n    this.props.dispatch({ type: ACTIONS.AUTH.SIGN_UP, data });\n  };\n\n  render() {\n    return (\n      <div className=\"signup-container\">\n        <h4 className=\"card-title todo-card-title\">{SIGNUP_FORM_HEADER}</h4>\n        <div className=\"card-text\">\n          <SignUpForm\n            handleSubmit={this.handleSubmit}\n            handleChange={this.handleChange}\n            formErrors={this.state.formErrors}\n            emailFieldId={this.EMAIL_FIELD_ID}\n            disabled={this.state.submitDisabled}\n            formValidity={this.state.formValidity}\n            passwordFieldId={this.PASSWORD_FIELD_ID}\n            handleInvalidKeys={this.handleInvalidKeys}\n            emailValue={this.state[this.EMAIL_FIELD_ID]}\n            passwordValue={this.state[this.PASSWORD_FIELD_ID]}\n            inProgress={this.props.signup.inProgress}\n            nameFieldId={this.NAME_FIELD_ID}\n            confirmPasswordField={this.CONFIRM_PASSWORD_FIELD_ID}\n            nameFieldValue={this.state[this.NAME_FIELD_ID]}\n            confirmPasswordValue={this.state[this.CONFIRM_PASSWORD_FIELD_ID]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSingup.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  signup: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nSingup.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  signup: state.signupStore\n});\n\nexport default withRouter(connect(mapStateToProps)(AsOnboardingCard(Singup)));\n"]},"metadata":{},"sourceType":"module"}