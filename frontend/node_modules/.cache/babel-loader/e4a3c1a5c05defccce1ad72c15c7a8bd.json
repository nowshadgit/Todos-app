{"ast":null,"code":"import _defineProperty from \"/home/nowshad/Desktop/Company Projects/footprints/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Tooltip from '@atlaskit/tooltip';\nimport Select, { components } from 'react-select';\nconst colourOptions = [];\n\nconst CustomSelect = props => {\n  console.log(\"props in custom:\", props.departmentsFieldValue);\n\n  if (props.isHidden) {\n    return React.createElement(components.Input, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    content: 'Custom Input',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(components.Input, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }))));\n};\n\nexport default (props => React.createElement(Select, {\n  closeMenuOnSelect: false,\n  components: (_objectSpread({}, props), {\n    CustomSelect\n  }),\n  isMulti: true,\n  options: props.departmentsFieldValue,\n  placeholder: 'Departments',\n  onChange: props.onChange // defaultValue={props.departmentsFieldValue}\n  ,\n  id: props.departmentsFieldId,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/CustomSelect/CustomSelect.jsx"],"names":["React","Tooltip","Select","components","colourOptions","CustomSelect","props","console","log","departmentsFieldValue","isHidden","onChange","departmentsFieldId"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;AACC,MAAMC,aAAa,GAAG,EAAtB;;AAID,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAK,CAACG,qBAAtC;;AAEF,MAAIH,KAAK,CAACI,QAAV,EAAoB;AAClB,WAAO,oBAAC,UAAD,CAAY,KAAZ,oBAAsBJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,CAAY,KAAZ,oBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD,CAbD;;AAeA,gBAAgBA,KAAD,IACb,oBAAC,MAAD;AACE,EAAA,iBAAiB,EAAE,KADrB;AAEE,EAAA,UAAU,GAAE,kBAAIA,KAAJ,GAAW;AAAED,IAAAA;AAAF,GAAb,CAFZ;AAGE,EAAA,OAAO,MAHT;AAIE,EAAA,OAAO,EAAEC,KAAK,CAACG,qBAJjB;AAKE,EAAA,WAAW,EAAE,aALf;AAME,EAAA,QAAQ,EAAEH,KAAK,CAACK,QANlB,CAOE;AAPF;AAQE,EAAA,EAAE,EAAEL,KAAK,CAACM,kBARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF","sourcesContent":["import React from 'react';\nimport Tooltip from '@atlaskit/tooltip';\nimport Select, { components } from 'react-select';\n const colourOptions = [\n    \n  ];\n  \nconst CustomSelect = props => {\n    console.log(\"props in custom:\", props.departmentsFieldValue);\n    \n  if (props.isHidden) {\n    return <components.Input {...props} />;\n  }\n  return (\n    <div >\n      <Tooltip content={'Custom Input'}>\n        <components.Input {...props} />\n      </Tooltip>\n    </div>\n  );\n};\n    \nexport default (props) => (\n  <Select\n    closeMenuOnSelect={false}\n    components={{...props},{ CustomSelect }}\n    isMulti\n    options={props.departmentsFieldValue}\n    placeholder={'Departments'}\n    onChange={props.onChange}\n    // defaultValue={props.departmentsFieldValue}\n    id={props.departmentsFieldId}\n  />\n);"]},"metadata":{},"sourceType":"module"}