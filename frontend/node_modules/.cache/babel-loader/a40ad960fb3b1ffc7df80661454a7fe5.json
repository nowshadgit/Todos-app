{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/utils/utils.js\";\nimport React from 'react';\nimport { reverse } from 'named-urls';\nimport { FOOTPRINTS_ROUTES } from '../config';\nimport { getNormalId } from './common';\nimport DataNotFound from '../components/DataNotFound/DataNotFound';\n\nconst showUserDetails = (userId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.USERS.DETAIL.SHOW, {\n    userId\n  });\n  props.history.push(url);\n  return true;\n};\n\nconst getUserCard = data => {\n  const userCard = Object.values(data).map(userData => {\n    const Id = userData.id;\n    const title = userData.first_name && userData.last_name ? \"\".concat(userData.first_name, \" \").concat(userData.last_name) : 'User';\n    const body = React.createElement(\"div\", {\n      className: \"card-data-body user-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Email: \", userData.email);\n    return {\n      title,\n      body,\n      Id\n    };\n  });\n  return userCard;\n};\n\nconst getOrgUnits = data => {\n  const orgCard = data && data !== 'null' ? Object.values(data).map(orgData => {\n    const Id = orgData.id;\n    const title = orgData.name;\n    const disable = !orgData.has_children;\n    const body = React.createElement(\"div\", {\n      className: \"card-data-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"testing\");\n    return {\n      title,\n      body,\n      Id,\n      disable\n    };\n  }) : [];\n  return orgCard;\n};\n\nconst getOrgUnitsNext = (orgUnitId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, {\n    orgUnitId\n  });\n  props.history.push(url);\n};\n\nconst getOrgUnitUrl = orgUnitId => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, {\n    orgUnitId\n  });\n  return url;\n};\n\nconst getAssetAttributes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const Id = assetData.id;\n    const title = assetData.name;\n    const values = assetData.values.map((value, i) => {\n      if (i < assetData.values.length - 1) {\n        return \"\".concat(value.name, \", \");\n      }\n\n      return value.name;\n    });\n    const body = React.createElement(\"div\", {\n      className: \"card-data-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, values);\n    return {\n      title,\n      body,\n      Id\n    };\n  });\n  return assetCard;\n};\n\nconst getAssetTypes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const Id = assetData.id;\n    const title = assetData.name;\n    const body = React.createElement(\"div\", {\n      className: \"card-data-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, assetData.color);\n    return {\n      title,\n      body,\n      Id\n    };\n  });\n  return assetCard;\n};\n\nconst getBreadcrumbs = actions => {\n  const path = [];\n  path.push({\n    id: actions.id,\n    name: actions.name\n  });\n  let parent = actions.parent;\n\n  while (Object.keys(parent).length !== 0) {\n    path.push({\n      id: parent.id,\n      name: parent.name\n    });\n    parent = parent.parent;\n  }\n\n  return path;\n};\n\nconst redirect = (props, url) => {\n  props.history.push(url);\n};\n\nconst getFormatOfdData = dData => {\n  const format = dData ? dData.map(department => {\n    return {\n      value: department.id,\n      label: department.name\n    };\n  }) : [];\n  return format;\n};\n\nconst redirectToDepartments = () => {\n  return true;\n};\n\nconst redirectAssetTypeDetail = (assetTypeId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ASSET_TYPES.DETAIL.SHOW, {\n    assetTypeId\n  });\n  props.history.push(url);\n};\n\nconst redirectAssetAttributeDetail = (assetAttrId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ASSET_ATTRIBUTES.DETAIL.SHOW, {\n    assetAttrId\n  });\n  props.history.push(url);\n};\n\nfunction getRecursiveData(data, preData) {\n  for (const dData of data) {\n    dData.label = dData.name;\n    dData.orgUnitId = dData.id;\n\n    if (preData.length > 0 && preData.includes(dData.orgUnitId)) {\n      dData.checked = true;\n    }\n\n    delete dData.name;\n    delete dData.id;\n    dData.children = dData.child;\n\n    if (dData.child && dData.child.length > 0) {\n      delete dData.child;\n      getRecursiveData(dData.children, preData);\n    } else {\n      delete dData.child;\n    }\n  }\n\n  return data;\n}\n\nconst getFomatedOrgUnitData = (OrgUnitData, preData) => {\n  let formatedData = [];\n  const pData = getNormalId(preData);\n\n  if (OrgUnitData && OrgUnitData.length > 0) {\n    formatedData = getRecursiveData(OrgUnitData, pData);\n  }\n\n  return formatedData;\n};\n\nfunction onPagination(stage, totalPages) {\n  let currentPage = this.state.currentPage;\n  let start = this.state.start;\n  let end = this.state.end;\n\n  if (stage === 'next') {\n    currentPage += 1;\n\n    if (currentPage === this.state.end + 1) {\n      start += 1;\n      end = currentPage;\n    }\n  } else if (stage === 'prev') {\n    currentPage -= 1;\n\n    if (currentPage === this.state.start - 1) {\n      start = currentPage;\n      end -= 1;\n    }\n  } else if (stage === 'prevEllipsis') {\n    if (this.state.start > 5) {\n      start = this.state.start - 5;\n      end = this.state.end - 5;\n    } else if (this.state.start < 5) {\n      start = 1;\n      end = start + 4;\n    } else {\n      start = this.state.start;\n      end = this.state.end;\n    }\n\n    currentPage = start;\n  } else if (stage === 'lastPage') {\n    end = totalPages;\n    start = totalPages - 4;\n    currentPage = totalPages;\n  } else if (stage === 'firstPage') {\n    end = 5;\n    currentPage = 1;\n    start = 1;\n  } else {\n    if (this.state.end + 4 <= totalPages) {\n      start = this.state.start + 5;\n      end = this.state.end + 5;\n    } else {\n      start = totalPages - 4;\n      end = totalPages;\n    }\n\n    currentPage = start;\n  }\n\n  this.setState({\n    end,\n    start,\n    currentPage\n  });\n}\n\nfunction onPageChange(number) {\n  this.setState({\n    currentPage: number\n  });\n}\n\nfunction getBodyComponenet(component, isDataFound, name) {\n  return isDataFound ? component : React.createElement(DataNotFound, {\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  });\n}\n\nexport { getUserCard, showUserDetails, getOrgUnits, getOrgUnitsNext, redirect, getFormatOfdData, redirectToDepartments, getAssetAttributes, getAssetTypes, getBreadcrumbs, getOrgUnitUrl, redirectAssetTypeDetail, redirectAssetAttributeDetail, getFomatedOrgUnitData, onPagination, onPageChange, getBodyComponenet };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/utils/utils.js"],"names":["React","reverse","FOOTPRINTS_ROUTES","getNormalId","DataNotFound","showUserDetails","userId","props","url","USERS","DETAIL","SHOW","history","push","getUserCard","data","userCard","Object","values","map","userData","Id","id","title","first_name","last_name","body","email","getOrgUnits","orgCard","orgData","name","disable","has_children","getOrgUnitsNext","orgUnitId","ORG_UNITS","getOrgUnitUrl","getAssetAttributes","assetCard","assetData","value","i","length","getAssetTypes","color","getBreadcrumbs","actions","path","parent","keys","redirect","getFormatOfdData","dData","format","department","label","redirectToDepartments","redirectAssetTypeDetail","assetTypeId","ASSET_TYPES","redirectAssetAttributeDetail","assetAttrId","ASSET_ATTRIBUTES","getRecursiveData","preData","includes","checked","children","child","getFomatedOrgUnitData","OrgUnitData","formatedData","pData","onPagination","stage","totalPages","currentPage","state","start","end","setState","onPageChange","number","getBodyComponenet","component","isDataFound"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { reverse } from 'named-urls';\nimport { FOOTPRINTS_ROUTES } from '../config';\nimport { getNormalId } from './common';\nimport DataNotFound from '../components/DataNotFound/DataNotFound';\n\nconst showUserDetails = (userId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.USERS.DETAIL.SHOW, { userId });\n  props.history.push(url);\n  return true;\n};\n\nconst getUserCard = data => {\n  const userCard = Object.values(data).map(userData => {\n    const Id = userData.id;\n    const title =\n      userData.first_name && userData.last_name\n        ? `${userData.first_name} ${userData.last_name}`\n        : 'User';\n\n    const body = (\n      <div className=\"card-data-body user-email\">Email: {userData.email}</div>\n    );\n    return { title, body, Id };\n  });\n\n  return userCard;\n};\n\nconst getOrgUnits = data => {\n  const orgCard =\n    data && data !== 'null'\n      ? Object.values(data).map(orgData => {\n          const Id = orgData.id;\n          const title = orgData.name;\n          const disable = !orgData.has_children;\n          const body = <div className=\"card-data-body\">testing</div>;\n          return { title, body, Id, disable };\n        })\n      : [];\n  return orgCard;\n};\n\nconst getOrgUnitsNext = (orgUnitId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, { orgUnitId });\n  props.history.push(url);\n};\n\nconst getOrgUnitUrl = orgUnitId => {\n  const url = reverse(FOOTPRINTS_ROUTES.ORG_UNITS.DETAIL.SHOW, { orgUnitId });\n  return url;\n};\n\nconst getAssetAttributes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const Id = assetData.id;\n    const title = assetData.name;\n    const values = assetData.values.map((value, i) => {\n      if (i < assetData.values.length - 1) {\n        return `${value.name}, `;\n      }\n      return value.name;\n    });\n    const body = <div className=\"card-data-body\">{values}</div>;\n    return { title, body, Id };\n  });\n  return assetCard;\n};\n\nconst getAssetTypes = data => {\n  const assetCard = Object.values(data).map(assetData => {\n    const Id = assetData.id;\n    const title = assetData.name;\n    const body = <div className=\"card-data-body\">{assetData.color}</div>;\n    return { title, body, Id };\n  });\n  return assetCard;\n};\n\nconst getBreadcrumbs = actions => {\n  const path = [];\n  path.push({ id: actions.id, name: actions.name });\n  let { parent } = actions;\n  while (Object.keys(parent).length !== 0) {\n    path.push({ id: parent.id, name: parent.name });\n    parent = parent.parent;\n  }\n  return path;\n};\n\nconst redirect = (props, url) => {\n  props.history.push(url);\n};\n\nconst getFormatOfdData = dData => {\n  const format = dData\n    ? dData.map(department => {\n        return { value: department.id, label: department.name };\n      })\n    : [];\n  return format;\n};\n\nconst redirectToDepartments = () => {\n  return true;\n};\n\nconst redirectAssetTypeDetail = (assetTypeId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ASSET_TYPES.DETAIL.SHOW, {\n    assetTypeId\n  });\n  props.history.push(url);\n};\n\nconst redirectAssetAttributeDetail = (assetAttrId, props) => {\n  const url = reverse(FOOTPRINTS_ROUTES.ASSET_ATTRIBUTES.DETAIL.SHOW, {\n    assetAttrId\n  });\n  props.history.push(url);\n};\n\nfunction getRecursiveData(data, preData) {\n  for (const dData of data) {\n    dData.label = dData.name;\n    dData.orgUnitId = dData.id;\n\n    if (preData.length > 0 && preData.includes(dData.orgUnitId)) {\n      dData.checked = true;\n    }\n    delete dData.name;\n    delete dData.id;\n    dData.children = dData.child;\n    if (dData.child && dData.child.length > 0) {\n      delete dData.child;\n      getRecursiveData(dData.children, preData);\n    } else {\n      delete dData.child;\n    }\n  }\n  return data;\n}\n\nconst getFomatedOrgUnitData = (OrgUnitData, preData) => {\n  let formatedData = [];\n  const pData = getNormalId(preData);\n  if (OrgUnitData && OrgUnitData.length > 0) {\n    formatedData = getRecursiveData(OrgUnitData, pData);\n  }\n\n  return formatedData;\n};\n\nfunction onPagination(stage, totalPages) {\n  let { currentPage } = this.state;\n  let { start } = this.state;\n  let { end } = this.state;\n  if (stage === 'next') {\n    currentPage += 1;\n    if (currentPage === this.state.end + 1) {\n      start += 1;\n      end = currentPage;\n    }\n  } else if (stage === 'prev') {\n    currentPage -= 1;\n    if (currentPage === this.state.start - 1) {\n      start = currentPage;\n      end -= 1;\n    }\n  } else if (stage === 'prevEllipsis') {\n    if (this.state.start > 5) {\n      start = this.state.start - 5;\n      end = this.state.end - 5;\n    } else if (this.state.start < 5) {\n      start = 1;\n      end = start + 4;\n    } else {\n      start = this.state.start;\n      end = this.state.end;\n    }\n    currentPage = start;\n  } else if (stage === 'lastPage') {\n    end = totalPages;\n    start = totalPages - 4;\n    currentPage = totalPages;\n  } else if (stage === 'firstPage') {\n    end = 5;\n    currentPage = 1;\n    start = 1;\n  } else {\n    if (this.state.end + 4 <= totalPages) {\n      start = this.state.start + 5;\n      end = this.state.end + 5;\n    } else {\n      start = totalPages - 4;\n      end = totalPages;\n    }\n    currentPage = start;\n  }\n  this.setState({\n    end,\n    start,\n    currentPage\n  });\n}\n\nfunction onPageChange(number) {\n  this.setState({ currentPage: number });\n}\n\nfunction getBodyComponenet(component, isDataFound, name) {\n  return isDataFound ? component : <DataNotFound name={name} />;\n}\nexport {\n  getUserCard,\n  showUserDetails,\n  getOrgUnits,\n  getOrgUnitsNext,\n  redirect,\n  getFormatOfdData,\n  redirectToDepartments,\n  getAssetAttributes,\n  getAssetTypes,\n  getBreadcrumbs,\n  getOrgUnitUrl,\n  redirectAssetTypeDetail,\n  redirectAssetAttributeDetail,\n  getFomatedOrgUnitData,\n  onPagination,\n  onPageChange,\n  getBodyComponenet\n};\n"]},"metadata":{},"sourceType":"module"}