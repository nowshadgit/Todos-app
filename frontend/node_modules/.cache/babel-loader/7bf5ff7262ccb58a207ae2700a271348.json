{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport { FOOTPRINTS_COMPONENTS } from '../../config';\nimport { COMPONENTS } from '../../utils/constants';\n\nclass ListPage extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          page = _this$props.page;\n    const components = pageConfig[page].components;\n    components && components.map(comp => {\n      const type = FOOTPRINTS_COMPONENTS[comp].job.PAGE_DATA;\n      makeCall(type);\n    });\n  }\n\n  render() {\n    const page = this.props.page;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          actions = _pageConfig$page.actions,\n          components = _pageConfig$page.components;\n    let key = 0;\n    const Components = components && components.map(comp => {\n      console.log(\"Data Check:\", this.props[comp], this.props);\n      const fp_comp = FOOTPRINTS_COMPONENTS[comp];\n      const fp_comp_data = this.props[comp];\n      const Component = fp_comp.component;\n      const actions = fp_comp.actions;\n      key += 1;\n      return React.createElement(Component, {\n        key: key,\n        data: fp_comp_data,\n        actions: actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), Components, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  actionType: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  listData: PropTypes.object.isRequired,\n  [COMPONENTS.DATA_CARD]: PropTypes.object.isRequired,\n  [COMPONENTS.USER]: PropTypes.object.isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  [COMPONENTS.DATA_CARD]: state.listReducerStore[COMPONENTS.DATA_CARD],\n  [COMPONENTS.USER]: state.listReducerStore[COMPONENTS.USER]\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","FOOTPRINTS_COMPONENTS","COMPONENTS","ListPage","Component","componentDidMount","props","makeCall","page","components","map","comp","type","job","PAGE_DATA","render","pageTitle","actions","key","Components","console","log","fp_comp","fp_comp_data","component","propTypes","string","isRequired","actionType","func","listData","object","DATA_CARD","USER","defaultProps","mapStateToProps","state","listReducerStore","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport { FOOTPRINTS_COMPONENTS } from '../../config';\nimport { COMPONENTS } from '../../utils/constants';\n\n\nclass ListPage extends React.Component {\n  \n  componentDidMount() {\n    const { makeCall, page } = this.props;\n    const { components } = pageConfig[page];\n    components && components.map(comp=>{\n      const type = FOOTPRINTS_COMPONENTS[comp].job.PAGE_DATA\n      makeCall(type);\n    })\n  }\n\n  render() {\n    const { page } = this.props;\n    const { pageTitle, actions, components } = pageConfig[page];\n    let key = 0;\n    \n    \n    const Components = components && components.map(comp=>{\n      console.log(\"Data Check:\", this.props[comp], this.props);\n      const fp_comp = FOOTPRINTS_COMPONENTS[comp];\n      const fp_comp_data = this.props[comp];\n      const Component = fp_comp.component;\n      const actions = fp_comp.actions;\n      key += 1;\n     return(<Component key={key} data={fp_comp_data} actions={actions} />)\n    })\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={actions} />\n        {Components}\n        <div>Hello world</div>\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  actionType: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  listData: PropTypes.object.isRequired,\n  [COMPONENTS.DATA_CARD]: PropTypes.object.isRequired,\n  [COMPONENTS.USER]: PropTypes.object.isRequired\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  [COMPONENTS.DATA_CARD]: state.listReducerStore[COMPONENTS.DATA_CARD],\n  [COMPONENTS.USER]: state.listReducerStore[COMPONENTS.USER]\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}