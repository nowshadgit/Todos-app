{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* loginSaga(action) {\n  let response;\n\n  try {\n    response = yield call(window.axios.postData, FOOTPRINTS_API.LOGIN, action.data);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.AUTH.LOGIN_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.AUTH.LOGIN_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.AUTH.LOGIN_FAIL,\n      payload: e\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport { loginSaga, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Todo/frontend/src/containers/Login/Login.saga.js"],"names":["call","put","ACTIONS","FOOTPRINTS_API","loginSaga","action","response","window","axios","postData","LOGIN","data","status","type","AUTH","LOGIN_SUCCESS","payload","LOGIN_FAIL","e","dummy"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AAEA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,cAAT,QAA+B,4BAA/B;;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC1B,MAAIC,QAAJ;;AACA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMN,IAAI,CACnBO,MAAM,CAACC,KAAP,CAAaC,QADM,EAEnBN,cAAc,CAACO,KAFI,EAGnBL,MAAM,CAACM,IAHY,CAArB;;AAKA,QAAIL,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMX,GAAG,CAAC;AACRY,QAAAA,IAAI,EAAEX,OAAO,CAACY,IAAR,CAAaC,aADX;AAERC,QAAAA,OAAO,EAAEV,QAAQ,CAACK;AAFV,OAAD,CAAT;AAID,KALD,MAKO;AACL,YAAMV,GAAG,CAAC;AACRY,QAAAA,IAAI,EAAEX,OAAO,CAACY,IAAR,CAAaG,UADX;AAERD,QAAAA,OAAO,EAAEV,QAAQ,CAACK;AAFV,OAAD,CAAT;AAID;AACF,GAjBD,CAiBE,OAAOO,CAAP,EAAU;AACV,UAAMjB,GAAG,CAAC;AAAEY,MAAAA,IAAI,EAAEX,OAAO,CAACY,IAAR,CAAaG,UAArB;AAAiCD,MAAAA,OAAO,EAAEE;AAA1C,KAAD,CAAT;AACD;AACF;;AAED,MAAMC,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAASf,SAAT,EAAoBe,KAApB","sourcesContent":["import { call, put } from 'redux-saga/effects';\n\nimport ACTIONS from '../../apiConfig/actions.constants';\nimport { FOOTPRINTS_API } from '../../apiConfig/api.config';\n\nfunction* loginSaga(action) {\n  let response;\n  try {\n    response = yield call(\n      window.axios.postData,\n      FOOTPRINTS_API.LOGIN,\n      action.data\n    );\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.AUTH.LOGIN_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.AUTH.LOGIN_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({ type: ACTIONS.AUTH.LOGIN_FAIL, payload: e });\n  }\n}\n\nconst dummy = () => {};\n\nexport { loginSaga, dummy };\n"]},"metadata":{},"sourceType":"module"}