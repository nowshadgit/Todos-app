{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/PasswordResetForm.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport DisplayErrors from './DisplayErrors';\nimport ButtonLoader from './ButtonLoader/ButtonLoader';\nimport { SUBMIT } from '../utils/constants';\nimport CustomButton from './CustomButton/CustomButton';\n\nconst PasswordResetForm = props => {\n  return React.createElement(\"div\", {\n    className: \"card-text text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Enter new password.\", React.createElement(\"div\", {\n    className: \"mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(DisplayErrors, {\n    errors: props.formErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    className: \"pl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faUnlockAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    type: \"password\",\n    placeholder: \"New Password\",\n    id: props.passwordFieldOneId,\n    value: props.passwordFieldOneValue,\n    name: props.passwordFieldOneName,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    className: \"pl-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faUnlockAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    type: \"password\",\n    placeholder: \"New Password Again\",\n    id: props.passwordFieldTwoId,\n    value: props.passwordFieldTwoValue,\n    name: props.passwordFieldTwoName,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(CustomButton, {\n    disabled: props.disabled,\n    isLoading: props.inProgress,\n    submitFunction: props.handleSubmit,\n    id: \"passwordResetButton\",\n    className: \"btn onboarding-btn\",\n    type: \"submit\",\n    text: SUBMIT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n};\n\nPasswordResetForm.propTypes = {\n  disabled: PropTypes.bool,\n  handleSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object.isRequired,\n  passwordFieldOneId: PropTypes.string.isRequired,\n  passwordFieldOneValue: PropTypes.string.isRequired,\n  passwordFieldOneName: PropTypes.string.isRequired,\n  passwordFieldTwoId: PropTypes.string.isRequired,\n  passwordFieldTwoValue: PropTypes.string.isRequired,\n  passwordFieldTwoName: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  inProgress: PropTypes.bool.isRequired\n};\nPasswordResetForm.defaultProps = {\n  disabled: true\n};\nexport default PasswordResetForm;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/PasswordResetForm.jsx"],"names":["React","PropTypes","faUnlockAlt","FontAwesomeIcon","InputGroup","FormControl","Button","DisplayErrors","ButtonLoader","SUBMIT","CustomButton","PasswordResetForm","props","handleSubmit","formErrors","passwordFieldOneId","passwordFieldOneValue","passwordFieldOneName","handleChange","passwordFieldTwoId","passwordFieldTwoValue","passwordFieldTwoName","disabled","inProgress","propTypes","bool","func","isRequired","object","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,MAAlC,QAAgD,iBAAhD;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjC,SACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAoC,IAAA,YAAY,EAAC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAED,KAAK,CAACE,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,CAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEZ,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,EAAE,EAAEU,KAAK,CAACG,kBAHZ;AAIE,IAAA,KAAK,EAAEH,KAAK,CAACI,qBAJf;AAKE,IAAA,IAAI,EAAEJ,KAAK,CAACK,oBALd;AAME,IAAA,QAAQ,EAAEL,KAAK,CAACM,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,EAiBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,CAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEhB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,oBAFd;AAGE,IAAA,EAAE,EAAEU,KAAK,CAACO,kBAHZ;AAIE,IAAA,KAAK,EAAEP,KAAK,CAACQ,qBAJf;AAKE,IAAA,IAAI,EAAER,KAAK,CAACS,oBALd;AAME,IAAA,QAAQ,EAAET,KAAK,CAACM,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAjBF,EAgCE,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAEN,KAAK,CAACU,QADlB;AAEE,IAAA,SAAS,EAAEV,KAAK,CAACW,UAFnB;AAGE,IAAA,cAAc,EAAEX,KAAK,CAACC,YAHxB;AAIE,IAAA,EAAE,EAAC,qBAJL;AAKE,IAAA,SAAS,EAAC,oBALZ;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,IAAI,EAAEJ,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CADF,CAFF,CADF;AAiDD,CAlDD;;AAoDAE,iBAAiB,CAACa,SAAlB,GAA8B;AAC5BF,EAAAA,QAAQ,EAAErB,SAAS,CAACwB,IADQ;AAE5BZ,EAAAA,YAAY,EAAEZ,SAAS,CAACyB,IAAV,CAAeC,UAFD;AAG5Bb,EAAAA,UAAU,EAAEb,SAAS,CAAC2B,MAAV,CAAiBD,UAHD;AAI5BZ,EAAAA,kBAAkB,EAAEd,SAAS,CAAC4B,MAAV,CAAiBF,UAJT;AAK5BX,EAAAA,qBAAqB,EAAEf,SAAS,CAAC4B,MAAV,CAAiBF,UALZ;AAM5BV,EAAAA,oBAAoB,EAAEhB,SAAS,CAAC4B,MAAV,CAAiBF,UANX;AAO5BR,EAAAA,kBAAkB,EAAElB,SAAS,CAAC4B,MAAV,CAAiBF,UAPT;AAQ5BP,EAAAA,qBAAqB,EAAEnB,SAAS,CAAC4B,MAAV,CAAiBF,UARZ;AAS5BN,EAAAA,oBAAoB,EAAEpB,SAAS,CAAC4B,MAAV,CAAiBF,UATX;AAU5BT,EAAAA,YAAY,EAAEjB,SAAS,CAACyB,IAAV,CAAeC,UAVD;AAW5BJ,EAAAA,UAAU,EAAEtB,SAAS,CAACwB,IAAV,CAAeE;AAXC,CAA9B;AAcAhB,iBAAiB,CAACmB,YAAlB,GAAiC;AAC/BR,EAAAA,QAAQ,EAAE;AADqB,CAAjC;AAIA,eAAeX,iBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { faUnlockAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nimport DisplayErrors from './DisplayErrors';\nimport ButtonLoader from './ButtonLoader/ButtonLoader';\nimport { SUBMIT } from '../utils/constants';\nimport CustomButton from './CustomButton/CustomButton';\n\nconst PasswordResetForm = props => {\n  return (\n    <div className=\"card-text text-left\">\n      Enter new password.\n      <div className=\"mt-4\">\n        <form onSubmit={props.handleSubmit} autoComplete=\"off\">\n          <DisplayErrors errors={props.formErrors} />\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text className=\"pl-0\">\n                <FontAwesomeIcon icon={faUnlockAlt} />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              type=\"password\"\n              placeholder=\"New Password\"\n              id={props.passwordFieldOneId}\n              value={props.passwordFieldOneValue}\n              name={props.passwordFieldOneName}\n              onChange={props.handleChange}\n            />\n          </InputGroup>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text className=\"pl-0\">\n                <FontAwesomeIcon icon={faUnlockAlt} />\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              type=\"password\"\n              placeholder=\"New Password Again\"\n              id={props.passwordFieldTwoId}\n              value={props.passwordFieldTwoValue}\n              name={props.passwordFieldTwoName}\n              onChange={props.handleChange}\n            />\n          </InputGroup>\n          <CustomButton\n            disabled={props.disabled}\n            isLoading={props.inProgress}\n            submitFunction={props.handleSubmit}\n            id=\"passwordResetButton\"\n            className=\"btn onboarding-btn\"\n            type=\"submit\"\n            text={SUBMIT}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nPasswordResetForm.propTypes = {\n  disabled: PropTypes.bool,\n  handleSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object.isRequired,\n  passwordFieldOneId: PropTypes.string.isRequired,\n  passwordFieldOneValue: PropTypes.string.isRequired,\n  passwordFieldOneName: PropTypes.string.isRequired,\n  passwordFieldTwoId: PropTypes.string.isRequired,\n  passwordFieldTwoValue: PropTypes.string.isRequired,\n  passwordFieldTwoName: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  inProgress: PropTypes.bool.isRequired\n};\n\nPasswordResetForm.defaultProps = {\n  disabled: true\n};\n\nexport default PasswordResetForm;\n"]},"metadata":{},"sourceType":"module"}