{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/GenerateQrCodesForm/GenerateQrCodesForm.jsx\";\nimport React from 'react';\nimport { InputGroup, FormControl, FormGroup, FormLabel } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport DisplayErrors from '../DisplayErrors';\nimport { SUBMIT } from '../../utils/constants';\nimport { isValidData } from '../../utils/common';\nimport CustomButton from '../CustomButton/CustomButton';\n\nconst GenerateQrCodesForm = props => {\n  const assetTypesList = props.assetTypesList;\n  const assetTypes = assetTypesList && assetTypesList.length > 0 && assetTypesList.map(each => {\n    if (isValidData(each)) {\n      const id = each.id,\n            name = each.name;\n      return React.createElement(\"option\", {\n        value: id,\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, name);\n    }\n\n    return null;\n  });\n  return React.createElement(\"div\", {\n    className: \"card-text text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(DisplayErrors, {\n    errors: props.formErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col col-lg-4 col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" Asset Type \"), React.createElement(FormControl, {\n    as: \"select\",\n    onChange: props.handleChange,\n    defaultValue: \"Select a Value\",\n    id: props.assetTypeId,\n    name: props.assetTypeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Select a Value\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Choose Asset Type\"), assetTypes)))), React.createElement(\"div\", {\n    className: \"row mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col col-lg-4 col-12 ml-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" Count \"), React.createElement(InputGroup, {\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    type: \"number\",\n    id: props.qrCodesCountId,\n    value: props.qrCodesCountValue,\n    name: props.qrCodesCountId,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))))), React.createElement(CustomButton, {\n    disabled: props.disabled,\n    isLoading: props.inProgress,\n    submitFunction: props.handleSubmit,\n    id: \"generateQRCodes\",\n    className: \"btn onboarding-btn float-right\",\n    text: SUBMIT,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nGenerateQrCodesForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object,\n  disabled: PropTypes.bool.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  assetTypeId: PropTypes.string.isRequired,\n  qrCodesCountId: PropTypes.string.isRequired,\n  qrCodesCountValue: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  assetTypesList: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};\nGenerateQrCodesForm.defaultProps = {\n  formErrors: {},\n  assetTypesList: []\n};\nexport default GenerateQrCodesForm;","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/components/GenerateQrCodesForm/GenerateQrCodesForm.jsx"],"names":["React","InputGroup","FormControl","FormGroup","FormLabel","PropTypes","DisplayErrors","SUBMIT","isValidData","CustomButton","GenerateQrCodesForm","props","assetTypesList","assetTypes","length","map","each","id","name","formErrors","handleChange","assetTypeId","qrCodesCountId","qrCodesCountValue","disabled","inProgress","handleSubmit","propTypes","func","isRequired","object","bool","string","oneOfType","array","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  InputGroup,\n  FormControl,\n  FormGroup,\n  FormLabel\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport DisplayErrors from '../DisplayErrors';\nimport { SUBMIT } from '../../utils/constants';\nimport { isValidData } from '../../utils/common';\nimport CustomButton from '../CustomButton/CustomButton';\n\nconst GenerateQrCodesForm = props => {\n  const { assetTypesList } = props;\n  const assetTypes =\n    assetTypesList &&\n    assetTypesList.length > 0 &&\n    assetTypesList.map(each => {\n      if (isValidData(each)) {\n        const { id, name } = each;\n        return (\n          <option value={id} key={id}>\n            {name}\n          </option>\n        );\n      }\n      return null;\n    });\n  return (\n    <div className=\"card-text text-left\">\n      <div className=\"card p-3\">\n        <form autoComplete=\"off\">\n          <DisplayErrors errors={props.formErrors} />\n          <div className=\"row\">\n            <div className=\"col col-lg-4 col-12\">\n              <FormGroup>\n                <FormLabel> Asset Type </FormLabel>\n                <FormControl\n                  as=\"select\"\n                  onChange={props.handleChange}\n                  defaultValue=\"Select a Value\"\n                  id={props.assetTypeId}\n                  name={props.assetTypeId}\n                >\n                  <option value=\"Select a Value\" disabled>\n                    Choose Asset Type\n                  </option>\n                  {assetTypes}\n                </FormControl>\n              </FormGroup>\n            </div>\n          </div>\n          <div className=\"row mb-4\">\n            <div className=\"col col-lg-4 col-12 ml-0\">\n              <FormLabel> Count </FormLabel>\n\n              <InputGroup size=\"sm\">\n                <FormControl\n                  type=\"number\"\n                  id={props.qrCodesCountId}\n                  value={props.qrCodesCountValue}\n                  name={props.qrCodesCountId}\n                  onChange={props.handleChange}\n                />\n              </InputGroup>\n            </div>\n          </div>\n        </form>\n      </div>\n      <CustomButton\n        disabled={props.disabled}\n        isLoading={props.inProgress}\n        submitFunction={props.handleSubmit}\n        id=\"generateQRCodes\"\n        className=\"btn onboarding-btn float-right\"\n        text={SUBMIT}\n        type=\"submit\"\n      />\n    </div>\n  );\n};\n\nGenerateQrCodesForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object,\n  disabled: PropTypes.bool.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  assetTypeId: PropTypes.string.isRequired,\n  qrCodesCountId: PropTypes.string.isRequired,\n  qrCodesCountValue: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  assetTypesList: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};\n\nGenerateQrCodesForm.defaultProps = {\n  formErrors: {},\n  assetTypesList: []\n};\nexport default GenerateQrCodesForm;\n"]},"metadata":{},"sourceType":"module"}