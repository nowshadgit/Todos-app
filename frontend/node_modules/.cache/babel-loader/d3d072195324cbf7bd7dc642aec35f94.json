{"ast":null,"code":"function* getUserDetails(action) {\n  let response;\n\n  try {\n    const data = action.data;\n    const API_URL = FOOTPRINTS_API.USER + data.userId;\n    response = yield call(window.axios.getData, API_URL);\n\n    if (response.status === 200) {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      yield put({\n        type: ACTIONS.USERS.GET_USER_INFO_FAIL,\n        payload: response.data\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: ACTIONS.USERS.GET_USER_INFO_FAIL,\n      payload: e\n    });\n  }\n}\n\nconst dummy = () => {};\n\nexport { getUserDetails, dummy };","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/UserDetails/UserDetails.saga.js"],"names":["getUserDetails","action","response","data","API_URL","FOOTPRINTS_API","USER","userId","call","window","axios","getData","status","put","type","ACTIONS","USERS","GET_USER_INFO_SUCCESS","payload","GET_USER_INFO_FAIL","e","dummy"],"mappings":"AAAA,UAAUA,cAAV,CAAyBC,MAAzB,EAAiC;AAC7B,MAAIC,QAAJ;;AACA,MAAI;AAAA,UACMC,IADN,GACeF,MADf,CACME,IADN;AAEF,UAAMC,OAAO,GAAGC,cAAc,CAACC,IAAf,GAAsBH,IAAI,CAACI,MAA3C;AACAL,IAAAA,QAAQ,GAAG,MAAMM,IAAI,CAACC,MAAM,CAACC,KAAP,CAAaC,OAAd,EAAuBP,OAAvB,CAArB;;AACA,QAAIF,QAAQ,CAACU,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,GAAG,CAAC;AACRC,QAAAA,IAAI,EAAEC,OAAO,CAACC,KAAR,CAAcC,qBADZ;AAERC,QAAAA,OAAO,EAAEhB,QAAQ,CAACC;AAFV,OAAD,CAAT;AAID,KALD,MAKO;AACL,YAAMU,GAAG,CAAC;AACRC,QAAAA,IAAI,EAAEC,OAAO,CAACC,KAAR,CAAcG,kBADZ;AAERD,QAAAA,OAAO,EAAEhB,QAAQ,CAACC;AAFV,OAAD,CAAT;AAID;AACF,GAfD,CAeE,OAAOiB,CAAP,EAAU;AACV,UAAMP,GAAG,CAAC;AAAEC,MAAAA,IAAI,EAAEC,OAAO,CAACC,KAAR,CAAcG,kBAAtB;AAA0CD,MAAAA,OAAO,EAAEE;AAAnD,KAAD,CAAT;AACD;AACF;;AAED,MAAMC,KAAK,GAAG,MAAM,CAAE,CAAtB;;AAEA,SAASrB,cAAT,EAAyBqB,KAAzB","sourcesContent":["function* getUserDetails(action) {\n    let response;\n    try {\n      const { data } = action;\n      const API_URL = FOOTPRINTS_API.USER + data.userId;\n      response = yield call(window.axios.getData, API_URL);\n      if (response.status === 200) {\n        yield put({\n          type: ACTIONS.USERS.GET_USER_INFO_SUCCESS,\n          payload: response.data\n        });\n      } else {\n        yield put({\n          type: ACTIONS.USERS.GET_USER_INFO_FAIL,\n          payload: response.data\n        });\n      }\n    } catch (e) {\n      yield put({ type: ACTIONS.USERS.GET_USER_INFO_FAIL, payload: e });\n    }\n  }\n\n  const dummy = () => {};\n\n  export { getUserDetails, dummy}"]},"metadata":{},"sourceType":"module"}