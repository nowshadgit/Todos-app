{"ast":null,"code":"var _jsxFileName = \"/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          makeCall = _this$props.makeCall,\n          actionType = _this$props.actionType,\n          page = _this$props.page;\n\n    if (actionType) {\n      const type = pageConfig[page][actionType].type;\n      makeCall(type);\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          actionType = _this$props2.actionType,\n          page = _this$props2.page;\n    const _pageConfig$page = pageConfig[page],\n          pageTitle = _pageConfig$page.pageTitle,\n          actions = _pageConfig$page.actions;\n\n    const _ref = actionType ? pageConfig[page][actionType] : false,\n          handler = _ref.handler;\n\n    const cardData = this.props.cardData;\n    return React.createElement(\"div\", {\n      className: \"list-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      title: pageTitle,\n      actions: actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(DataCards, {\n      data: {\n        cardData,\n        handler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Hello world\"));\n  }\n\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  actionType: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  cardData: PropTypes.array.isRequired\n};\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  cardData: state.listReducerStore\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListPage));","map":{"version":3,"sources":["/home/nowshad/Desktop/Company Projects/footprints/frontend/src/containers/ListPage/ListPage.jsx"],"names":["React","PropTypes","connect","withRouter","pageConfig","PageHeader","getActionsFormate","DataCards","ListPage","Component","constructor","props","componentDidMount","makeCall","actionType","page","type","render","pageTitle","actions","handler","cardData","propTypes","string","isRequired","func","array","defaultProps","mapStateToProps","state","listReducerStore","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA,wBACqB,KAAKD,KAD1B;AAAA,UACVE,QADU,eACVA,QADU;AAAA,UACAC,UADA,eACAA,UADA;AAAA,UACYC,IADZ,eACYA,IADZ;;AAElB,QAAID,UAAJ,EAAgB;AAAA,YACNE,IADM,GACGZ,UAAU,CAACW,IAAD,CAAV,CAAiBD,UAAjB,CADH,CACNE,IADM;AAEdH,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBACsB,KAAKN,KAD3B;AAAA,UACCG,UADD,gBACCA,UADD;AAAA,UACaC,IADb,gBACaA,IADb;AAAA,6BAEwBX,UAAU,CAACW,IAAD,CAFlC;AAAA,UAECG,SAFD,oBAECA,SAFD;AAAA,UAEYC,OAFZ,oBAEYA,OAFZ;;AAAA,iBAGaL,UAAU,GAAGV,UAAU,CAACW,IAAD,CAAV,CAAiBD,UAAjB,CAAH,GAAkC,KAHzD;AAAA,UAGCM,OAHD,QAGCA,OAHD;;AAAA,UAICC,QAJD,GAIc,KAAKV,KAJnB,CAICU,QAJD;AAKP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEH,SAAnB;AAA8B,MAAA,OAAO,EAAEC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE;AAAEE,QAAAA,QAAF;AAAYD,QAAAA;AAAZ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF;AAOD;;AAzBoC;;AA4BvCZ,QAAQ,CAACc,SAAT,GAAqB;AACnBP,EAAAA,IAAI,EAAEd,SAAS,CAACsB,MAAV,CAAiBC,UADJ;AAEnBV,EAAAA,UAAU,EAAEb,SAAS,CAACsB,MAAV,CAAiBC,UAFV;AAGnBX,EAAAA,QAAQ,EAAEZ,SAAS,CAACwB,IAAV,CAAeD,UAHN;AAInBH,EAAAA,QAAQ,EAAEpB,SAAS,CAACyB,KAAV,CAAgBF;AAJP,CAArB;AAOAhB,QAAQ,CAACmB,YAAT,GAAwB,EAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,QAAQ,EAAEQ,KAAK,CAACC;AADgB,CAAL,CAA7B;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,QAAQ,EAAE,CAACG,IAAD,EAAOiB,IAAP,KAAgB;AACxBD,MAAAA,QAAQ,CAAC1B,iBAAiB,CAACU,IAAD,EAAOiB,IAAP,CAAlB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAe9B,UAAU,CACvBD,OAAO,CACL0B,eADK,EAELG,kBAFK,CAAP,CAGEvB,QAHF,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport pageConfig from '../../utils/pageConfig';\nimport PageHeader from '../../components/PageHeader/PageHeader';\nimport { getActionsFormate } from '../../utils/common';\nimport DataCards from '../../components/DataCards/DataCards';\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { makeCall, actionType, page } = this.props;\n    if (actionType) {\n      const { type } = pageConfig[page][actionType];\n      makeCall(type);\n    }\n  }\n\n  render() {\n    const { actionType, page } = this.props;\n    const { pageTitle, actions } = pageConfig[page];\n    const { handler } = actionType ? pageConfig[page][actionType] : false;\n    const { cardData } = this.props;\n    return (\n      <div className=\"list-page\">\n        <PageHeader title={pageTitle} actions={actions} />\n        <DataCards data={{ cardData, handler }} />\n        <div>Hello world</div>\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  page: PropTypes.string.isRequired,\n  actionType: PropTypes.string.isRequired,\n  makeCall: PropTypes.func.isRequired,\n  cardData: PropTypes.array.isRequired\n};\n\nListPage.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  cardData: state.listReducerStore\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeCall: (type, data) => {\n      dispatch(getActionsFormate(type, data));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListPage)\n);\n"]},"metadata":{},"sourceType":"module"}